{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1","program":"/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tarpc","--edition=2018","/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde-transport\"","--cfg","feature=\"serde1\"","--cfg","feature=\"tcp\"","--cfg","feature=\"tokio-serde\"","--cfg","feature=\"tokio-util\"","--cfg","feature=\"tokio1\"","-C","metadata=2ef6b2e728380308","-C","extra-filename=-2ef6b2e728380308","--out-dir","/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","-L","dependency=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","--extern","anyhow=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libanyhow-a2ad8fa07e0781ab.rmeta","--extern","fnv=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfnv-5eaa67ceb9d9bb54.rmeta","--extern","futures=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfutures-a5fd760a7f6fd39c.rmeta","--extern","humantime=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libhumantime-12e47983c7142b57.rmeta","--extern","log=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/liblog-4c2b941844e2fcbb.rmeta","--extern","pin_project=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libpin_project-ea48ecef40e9f52a.rmeta","--extern","rand=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/librand-952c6f5fb4fde79b.rmeta","--extern","serde=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libserde-c367ca5fd574a015.rmeta","--extern","static_assertions=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libstatic_assertions-df62a6794b74038e.rmeta","--extern","tarpc_plugins=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtarpc_plugins-6cf7bfb45e92066d.so","--extern","tokio=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio-4e7e42baf18a9f6f.rmeta","--extern","tokio_serde=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio_serde-dc5874f7e5e08c86.rmeta","--extern","tokio_util=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio_util-5aa13232edb00d6a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtarpc-2ef6b2e728380308.rmeta"},"prelude":{"crate_id":{"name":"tarpc","disambiguator":[15197807596199928630,0]},"crate_root":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src","external_crates":[{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":20,"id":{"name":"futures","disambiguator":[7173771061839718732,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":21,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":22,"id":{"name":"futures_util","disambiguator":[16080753110398933175,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":23,"id":{"name":"pin_utils","disambiguator":[7302173720166050639,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":24,"id":{"name":"futures_macro","disambiguator":[16191479219004503685,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":25,"id":{"name":"futures_task","disambiguator":[7422299312488294084,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":26,"id":{"name":"futures_sink","disambiguator":[10576276462658899617,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":28,"id":{"name":"futures_channel","disambiguator":[8535295527564487331,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":29,"id":{"name":"slab","disambiguator":[6653587815988834765,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":30,"id":{"name":"futures_io","disambiguator":[17387561400783789788,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":31,"id":{"name":"memchr","disambiguator":[16956519403747381332,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","num":32,"id":{"name":"futures_executor","disambiguator":[17178678667413411382,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","num":33,"id":{"name":"fnv","disambiguator":[9182829020882932385,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","num":34,"id":{"name":"log","disambiguator":[14764303238413466947,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","num":35,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":36,"id":{"name":"pin_project","disambiguator":[8694914957114327830,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":37,"id":{"name":"pin_project_internal","disambiguator":[218757431097137928,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","num":38,"id":{"name":"static_assertions","disambiguator":[1827679125116784259,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":39,"id":{"name":"humantime","disambiguator":[446011721998581833,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":40,"id":{"name":"tokio","disambiguator":[10054928464665497603,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":41,"id":{"name":"parking_lot","disambiguator":[13429073610692212669,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":42,"id":{"name":"lock_api","disambiguator":[6400943293924493477,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":43,"id":{"name":"scopeguard","disambiguator":[13563622309219480755,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":44,"id":{"name":"parking_lot_core","disambiguator":[15550368681150151641,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":45,"id":{"name":"smallvec","disambiguator":[10087055156891833200,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":46,"id":{"name":"libc","disambiguator":[11407690004646896535,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":47,"id":{"name":"mio","disambiguator":[12216327775942977704,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":48,"id":{"name":"bytes","disambiguator":[11709949483292364592,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":49,"id":{"name":"once_cell","disambiguator":[18281702906408608498,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":50,"id":{"name":"tokio_macros","disambiguator":[9005281142719050523,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":51,"id":{"name":"socket2","disambiguator":[9157724399368862976,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":52,"id":{"name":"num_cpus","disambiguator":[17727572680058643201,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","num":53,"id":{"name":"signal_hook_registry","disambiguator":[17686152838710020509,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","num":54,"id":{"name":"serde","disambiguator":[1496601808515941629,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","num":55,"id":{"name":"serde_derive","disambiguator":[3697792355618157202,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","num":56,"id":{"name":"anyhow","disambiguator":[10017476357718192983,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":57,"id":{"name":"tokio_serde","disambiguator":[7729462911434738731,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":58,"id":{"name":"educe","disambiguator":[5887241661871729741,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":59,"id":{"name":"bincode","disambiguator":[3818277855276519757,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":60,"id":{"name":"serde_json","disambiguator":[12244609005604364251,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":61,"id":{"name":"itoa","disambiguator":[13487529298765147476,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":62,"id":{"name":"ryu","disambiguator":[4097666003317404566,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","num":63,"id":{"name":"tokio_util","disambiguator":[3283419164145159103,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":64,"id":{"name":"rand","disambiguator":[5328310455049138840,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":65,"id":{"name":"rand_core","disambiguator":[10695185292049627274,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":66,"id":{"name":"getrandom","disambiguator":[17793966216489861382,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":67,"id":{"name":"rand_chacha","disambiguator":[7725698092422865189,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":68,"id":{"name":"ppv_lite86","disambiguator":[7632408639151574742,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","num":69,"id":{"name":"rand_pcg","disambiguator":[7158047954382696183,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","num":70,"id":{"name":"tarpc_plugins","disambiguator":[15761741622375226230,0]}}],"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":182,"byte_end":11262,"line_start":6,"line_end":302,"column_start":1,"column_end":31}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16870,"byte_end":16873,"line_start":16,"line_end":16,"column_start":19,"column_end":22},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1153},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16875,"byte_end":16882,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55115,"byte_end":55128,"line_start":34,"line_end":34,"column_start":13,"column_end":26},"alias_span":null,"name":"ChannelFilter","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55145,"byte_end":55154,"line_start":35,"line_end":35,"column_start":16,"column_end":25},"alias_span":null,"name":"Throttler","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":2030},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55156,"byte_end":55171,"line_start":35,"line_end":35,"column_start":27,"column_end":42},"alias_span":null,"name":"ThrottlerStream","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12437,"byte_end":12443,"line_start":33,"line_end":33,"column_start":25,"column_end":31},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12453,"byte_end":12459,"line_start":33,"line_end":33,"column_start":41,"column_end":47},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12461,"byte_end":12466,"line_start":33,"line_end":33,"column_start":49,"column_end":54},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12487,"byte_end":12496,"line_start":33,"line_end":33,"column_start":75,"column_end":84},"alias_span":null,"name":"Transport","value":"","parent":{"krate":0,"index":3}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8523,"byte_end":8524,"line_start":207,"line_end":207,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"PollContext, server, transport, ClientMessage, client, context, util, ServerError, PollIo, Request, Response, Transport","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":54,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8562,"byte_end":8567,"line_start":210,"line_end":210,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":57,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8614,"byte_end":8625,"line_start":213,"line_end":213,"column_start":9,"column_end":20},"alias_span":null,"name":"tokio_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":70,"index":127},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8815,"byte_end":8827,"line_start":222,"line_end":222,"column_start":24,"column_end":36},"alias_span":null,"name":"derive_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":70,"index":128},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":9570,"byte_end":9577,"line_start":246,"line_end":246,"column_start":24,"column_end":31},"alias_span":null,"name":"service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":70,"index":140},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":11255,"byte_end":11261,"line_start":302,"line_end":302,"column_start":24,"column_end":30},"alias_span":null,"name":"server","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":182,"byte_end":11262,"line_start":6,"line_end":302,"column_start":1,"column_end":31},"name":"","qualname":"::","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":1117},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150}],"decl_id":null,"docs":" *Disclaimer*: This is not an official Google product.","sig":null,"attributes":[{"value":"/ *Disclaimer*: This is not an official Google product.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":182,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":240,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ tarpc is an RPC framework for rust with a focus on ease of use. Defining a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":244,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ service can be done in just a few lines of code, and most of the boilerplate of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":323,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ writing a server is taken care of for you.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":407,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":454,"byte_end":457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Documentation](https://docs.rs/crate/tarpc/)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":458,"byte_end":507,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":508,"byte_end":511,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## What is an RPC framework?","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":512,"byte_end":544,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/ \"RPC\" stands for \"Remote Procedure Call,\" a function call where the work of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":545,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ producing the return value is being done somewhere else. When an rpc function is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":625,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ invoked, behind the scenes the function contacts some other process somewhere","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":710,"byte_end":791,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ and asks them to evaluate the function instead. The original function then","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":792,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ returns the value produced by the other process.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":871,"byte_end":923,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":924,"byte_end":927,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ RPC frameworks are a fundamental building block of most microservices-oriented","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":928,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ architectures. Two well-known ones are [gRPC](http://www.grpc.io) and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1011,"byte_end":1084,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ [Cap'n Proto](https://capnproto.org/).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1085,"byte_end":1127,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1128,"byte_end":1131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ tarpc differentiates itself from other RPC frameworks by defining the schema in code,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1132,"byte_end":1221,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ rather than in a separate language such as .proto. This means there's no separate compilation","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1222,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ process, and no context switching between different languages.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1320,"byte_end":1386,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some other features of tarpc:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1391,"byte_end":1424,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ - Pluggable transport: any type impling `Stream<Item = Request> + Sink<Response>` can be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1425,"byte_end":1517,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/   used as a transport to connect the client and server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1518,"byte_end":1577,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ - `Send + 'static` optional: if the transport doesn't require it, neither does tarpc!","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1578,"byte_end":1667,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ - Cascading cancellation: dropping a request will send a cancellation message to the server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1668,"byte_end":1764,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/   The server will cease any unfinished work on the request, subsequently cancelling any of its","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1765,"byte_end":1863,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/   own requests, repeating for the entire chain of transitive dependencies.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1864,"byte_end":1942,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ - Configurable deadlines and deadline propagation: request deadlines default to 10s if","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":1943,"byte_end":2033,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/   unspecified. The server will automatically cease work when the deadline has passed. Any","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2034,"byte_end":2127,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/   requests sent by the server that use the request context will propagate the request deadline.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2128,"byte_end":2227,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/   For example, if a server is handling a request with a 10s deadline, does 2s of work, then","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2228,"byte_end":2323,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/   sends a request to another server, that server will see an 8s deadline.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2324,"byte_end":2401,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ - Serde serialization: enabling the `serde1` Cargo feature will make service requests and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2402,"byte_end":2495,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/   responses `Serialize + Deserialize`. It's entirely optional, though: in-memory transports can","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2496,"byte_end":2595,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/   be used, as well, so the price of serialization doesn't have to be paid when it's not needed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2596,"byte_end":2695,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2696,"byte_end":2699,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2700,"byte_end":2712,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/ Add to your `Cargo.toml` dependencies:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2713,"byte_end":2755,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2756,"byte_end":2759,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2760,"byte_end":2771,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ tarpc = \"0.24\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2772,"byte_end":2790,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2791,"byte_end":2798,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2799,"byte_end":2802,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The `tarpc::service` attribute expands to a collection of items that form an rpc service.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2803,"byte_end":2896,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/ These generated types make it easy and ergonomic to write servers with less boilerplate.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2897,"byte_end":2989,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Simply implement the generated service trait, and you're off to the races!","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":2990,"byte_end":3068,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3073,"byte_end":3087,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This example uses [tokio](https://tokio.rs), so add the following dependencies to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3092,"byte_end":3177,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/ your `Cargo.toml`:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3178,"byte_end":3200,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3201,"byte_end":3204,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3205,"byte_end":3216,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ futures = \"1.0\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3217,"byte_end":3236,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/ tarpc = { version = \"0.24\", features = [\"tokio1\"] }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3237,"byte_end":3292,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/ tokio = { version = \"1.0\", features = [\"macros\"] }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3293,"byte_end":3347,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3348,"byte_end":3355,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3356,"byte_end":3359,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ In the following example, we use an in-process channel for communication between","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3360,"byte_end":3444,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ client and server. In real code, you will likely communicate over the network.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3445,"byte_end":3527,"line_start":68,"line_end":68,"column_start":1,"column_end":83}},{"value":"/ For a more real-world example, see [example-service](example-service).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3528,"byte_end":3602,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3603,"byte_end":3606,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ First, let's set up the dependencies and service definition.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3607,"byte_end":3671,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3672,"byte_end":3675,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3688,"byte_end":3715,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3716,"byte_end":3719,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use futures::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3720,"byte_end":3738,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/     future::{self, Ready},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3739,"byte_end":3769,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"/     prelude::*,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3770,"byte_end":3789,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3790,"byte_end":3796,"line_start":79,"line_end":79,"column_start":1,"column_end":7}},{"value":"/ use tarpc::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3797,"byte_end":3813,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/     client, context,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3814,"byte_end":3838,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     server::{self, Handler},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3839,"byte_end":3871,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3872,"byte_end":3878,"line_start":83,"line_end":83,"column_start":1,"column_end":7}},{"value":"/ use std::io;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3879,"byte_end":3895,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3896,"byte_end":3899,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3900,"byte_end":3978,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":3979,"byte_end":4061,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ #[tarpc::service]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4062,"byte_end":4083,"line_start":88,"line_end":88,"column_start":1,"column_end":22}},{"value":"/ trait World {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4084,"byte_end":4101,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/     /// Returns a greeting for name.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4102,"byte_end":4142,"line_start":90,"line_end":90,"column_start":1,"column_end":41}},{"value":"/     async fn hello(name: String) -> String;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4143,"byte_end":4190,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4191,"byte_end":4196,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4197,"byte_end":4204,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4205,"byte_end":4208,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This service definition generates a trait called `World`. Next we need to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4209,"byte_end":4286,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ implement it for our Server struct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4287,"byte_end":4326,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4327,"byte_end":4330,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4331,"byte_end":4342,"line_start":98,"line_end":98,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4343,"byte_end":4370,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4371,"byte_end":4391,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4392,"byte_end":4424,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4425,"byte_end":4446,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4447,"byte_end":4455,"line_start":103,"line_end":103,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4456,"byte_end":4474,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4475,"byte_end":4501,"line_start":105,"line_end":105,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Handler},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4502,"byte_end":4536,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4537,"byte_end":4545,"line_start":107,"line_end":107,"column_start":1,"column_end":9}},{"value":"/ # use std::io;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4546,"byte_end":4564,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4565,"byte_end":4645,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4646,"byte_end":4730,"line_start":110,"line_end":110,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4731,"byte_end":4754,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4755,"byte_end":4774,"line_start":112,"line_end":112,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4775,"byte_end":4817,"line_start":113,"line_end":113,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4818,"byte_end":4867,"line_start":114,"line_end":114,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4868,"byte_end":4875,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4876,"byte_end":4967,"line_start":116,"line_end":116,"column_start":1,"column_end":92}},{"value":"/ // and is used to start the server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":4968,"byte_end":5007,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5008,"byte_end":5028,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ struct HelloServer;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5029,"byte_end":5052,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5053,"byte_end":5056,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ impl World for HelloServer {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5057,"byte_end":5089,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5090,"byte_end":5181,"line_start":122,"line_end":122,"column_start":1,"column_end":92}},{"value":"/     // an associated type representing the future output by the fn.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5182,"byte_end":5253,"line_start":123,"line_end":123,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5254,"byte_end":5257,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     type HelloFut = Ready<String>;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5258,"byte_end":5296,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5297,"byte_end":5300,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5301,"byte_end":5378,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5379,"byte_end":5433,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5434,"byte_end":5443,"line_start":129,"line_end":129,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5444,"byte_end":5449,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5450,"byte_end":5457,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5458,"byte_end":5461,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Lastly let's write our `main` that will start the server. While this example uses an","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5462,"byte_end":5550,"line_start":133,"line_end":133,"column_start":1,"column_end":89}},{"value":"/ [in-process channel](rpc::transport::channel), tarpc also ships a generic [`serde_transport`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5551,"byte_end":5648,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ behind the `serde-transport` feature, with additional [TCP](serde_transport::tcp) functionality","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5649,"byte_end":5748,"line_start":135,"line_end":135,"column_start":1,"column_end":100}},{"value":"/ available behind the `tcp` feature.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5749,"byte_end":5788,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5789,"byte_end":5792,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5793,"byte_end":5804,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5805,"byte_end":5832,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5833,"byte_end":5853,"line_start":140,"line_end":140,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5854,"byte_end":5886,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5887,"byte_end":5908,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5909,"byte_end":5917,"line_start":143,"line_end":143,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5918,"byte_end":5936,"line_start":144,"line_end":144,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5937,"byte_end":5963,"line_start":145,"line_end":145,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Handler},","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5964,"byte_end":5998,"line_start":146,"line_end":146,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":5999,"byte_end":6007,"line_start":147,"line_end":147,"column_start":1,"column_end":9}},{"value":"/ # use std::io;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6008,"byte_end":6026,"line_start":148,"line_end":148,"column_start":1,"column_end":19}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6027,"byte_end":6107,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6108,"byte_end":6192,"line_start":150,"line_end":150,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6193,"byte_end":6216,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6217,"byte_end":6236,"line_start":152,"line_end":152,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6237,"byte_end":6279,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6280,"byte_end":6329,"line_start":154,"line_end":154,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6330,"byte_end":6337,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ # // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6338,"byte_end":6431,"line_start":156,"line_end":156,"column_start":1,"column_end":94}},{"value":"/ # // and is used to start the server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6432,"byte_end":6473,"line_start":157,"line_end":157,"column_start":1,"column_end":42}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6474,"byte_end":6496,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ # struct HelloServer;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6497,"byte_end":6522,"line_start":159,"line_end":159,"column_start":1,"column_end":26}},{"value":"/ # impl World for HelloServer {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6523,"byte_end":6557,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"/ #     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6558,"byte_end":6651,"line_start":161,"line_end":161,"column_start":1,"column_end":94}},{"value":"/ #     // an associated type representing the future output by the fn.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6652,"byte_end":6725,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ #     type HelloFut = Ready<String>;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6726,"byte_end":6766,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/ #     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6767,"byte_end":6846,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"/ #         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6847,"byte_end":6903,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"/ #     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6904,"byte_end":6915,"line_start":166,"line_end":166,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6916,"byte_end":6923,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"tokio1\"))]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6924,"byte_end":6961,"line_start":168,"line_end":168,"column_start":1,"column_end":38}},{"value":"/ # fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6962,"byte_end":6980,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(feature = \"tokio1\")]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":6981,"byte_end":7013,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7014,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7033,"byte_end":7072,"line_start":172,"line_end":172,"column_start":1,"column_end":40}},{"value":"/     let (client_transport, server_transport) = tarpc::transport::channel::unbounded();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7073,"byte_end":7163,"line_start":173,"line_end":173,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7164,"byte_end":7167,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     let server = server::new(server::Config::default())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7168,"byte_end":7227,"line_start":175,"line_end":175,"column_start":1,"column_end":60}},{"value":"/         // incoming() takes a stream of transports such as would be returned by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7228,"byte_end":7311,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/         // TcpListener::incoming (but a stream instead of an iterator).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7312,"byte_end":7387,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/         .incoming(stream::once(future::ready(server_transport)))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7388,"byte_end":7456,"line_start":178,"line_end":178,"column_start":1,"column_end":69}},{"value":"/         .respond_with(HelloServer.serve());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7457,"byte_end":7504,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7505,"byte_end":7508,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(server);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7509,"byte_end":7538,"line_start":181,"line_end":181,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7539,"byte_end":7542,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     // WorldClient is generated by the macro. It has a constructor `new` that takes a config and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7543,"byte_end":7643,"line_start":183,"line_end":183,"column_start":1,"column_end":101}},{"value":"/     // any Transport as input","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7644,"byte_end":7677,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/     let mut client = WorldClient::new(client::Config::default(), client_transport).spawn()?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7678,"byte_end":7774,"line_start":185,"line_end":185,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7775,"byte_end":7778,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/     // The client has an RPC method for each RPC defined in the annotated trait. It takes the same","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7779,"byte_end":7881,"line_start":187,"line_end":187,"column_start":1,"column_end":103}},{"value":"/     // args as defined, with the addition of a Context, which is always the first arg. The Context","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7882,"byte_end":7984,"line_start":188,"line_end":188,"column_start":1,"column_end":103}},{"value":"/     // specifies a deadline and trace information which can be helpful in debugging requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":7985,"byte_end":8082,"line_start":189,"line_end":189,"column_start":1,"column_end":98}},{"value":"/     let hello = client.hello(context::current(), \"Stim\".to_string()).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8083,"byte_end":8163,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8164,"byte_end":8167,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", hello);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8168,"byte_end":8198,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8199,"byte_end":8202,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8203,"byte_end":8217,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8218,"byte_end":8223,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8224,"byte_end":8231,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8232,"byte_end":8235,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ## Service Documentation","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8236,"byte_end":8264,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8265,"byte_end":8268,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Use `cargo doc` as you normally would to see the documentation created for all","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8269,"byte_end":8351,"line_start":200,"line_end":200,"column_start":1,"column_end":83}},{"value":"/ items expanded by a `service!` invocation.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8352,"byte_end":8398,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"deny(missing_docs)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8399,"byte_end":8421,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8422,"byte_end":8456,"line_start":203,"line_end":203,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rpc","qualname":"::rpc","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":278},{"krate":0,"index":300},{"krate":0,"index":756},{"krate":0,"index":815},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":2416},{"krate":0,"index":2423},{"krate":0,"index":2430},{"krate":0,"index":2413},{"krate":0,"index":2519},{"krate":0,"index":2524},{"krate":0,"index":2531},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2600},{"krate":0,"index":2604},{"krate":0,"index":2611},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2687},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":924}],"decl_id":null,"docs":" An RPC framework providing client and server.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11447,"byte_end":11500,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ An RPC framework providing client and server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11502,"byte_end":11551,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11552,"byte_end":11555,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Features:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11556,"byte_end":11569,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ * RPC deadlines, both client- and server-side.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11570,"byte_end":11620,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/ * Cascading cancellation (works with multiple hops).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11621,"byte_end":11677,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ * Configurable limits","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11678,"byte_end":11703,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/    * In-flight requests, both client and server-side.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11704,"byte_end":11761,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/        * Server-side limit is per-connection.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11762,"byte_end":11811,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/        * When the server reaches the in-flight request maximum, it returns a throttled error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11812,"byte_end":11908,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/          to the client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11909,"byte_end":11936,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/        * When the client reaches the in-flight request max, messages are buffered up to a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":11937,"byte_end":12030,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/          configurable maximum, beyond which the requests are back-pressured.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12031,"byte_end":12111,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/    * Server connections.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12112,"byte_end":12140,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/        * Total and per-IP limits.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12141,"byte_end":12178,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/        * When an incoming connection is accepted, if already at maximum, the connection is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12179,"byte_end":12273,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/          dropped.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12274,"byte_end":12295,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ * Transport agnostic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12296,"byte_end":12321,"line_start":25,"line_end":25,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::rpc::client","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":1675},{"krate":0,"index":1680},{"krate":0,"index":1684},{"krate":0,"index":231},{"krate":0,"index":1688},{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":241},{"krate":0,"index":251},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":265},{"krate":0,"index":274}],"decl_id":null,"docs":" Provides a client that connects to a server and sends multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a client that connects to a server and sends multiplexed requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16632,"byte_end":16711,"line_start":7,"line_end":7,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::rpc::client::channel","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":1153},{"krate":0,"index":1159},{"krate":0,"index":109},{"krate":0,"index":1224},{"krate":0,"index":1168},{"krate":0,"index":1163},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":1290},{"krate":0,"index":1234},{"krate":0,"index":1229},{"krate":0,"index":123},{"krate":0,"index":129},{"krate":0,"index":1337},{"krate":0,"index":1298},{"krate":0,"index":1295},{"krate":0,"index":134},{"krate":0,"index":1344},{"krate":0,"index":138},{"krate":0,"index":1420},{"krate":0,"index":1355},{"krate":0,"index":1350},{"krate":0,"index":142},{"krate":0,"index":158},{"krate":0,"index":1429},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":1501},{"krate":0,"index":1462},{"krate":0,"index":1459},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":1557},{"krate":0,"index":1509},{"krate":0,"index":1505},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":1612},{"krate":0,"index":1566},{"krate":0,"index":1562},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":1664},{"krate":0,"index":1620},{"krate":0,"index":1632},{"krate":0,"index":1616},{"krate":0,"index":198},{"krate":0,"index":206}],"decl_id":null,"docs":" Provides a [`Client`] backed by a transport.\n","sig":null,"attributes":[{"value":"/ Provides a [`Client`] backed by a transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16786,"byte_end":16834,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":21859,"byte_end":21866,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Channel","qualname":"::rpc::client::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" Handles communication from the client to request dispatch.\n","sig":null,"attributes":[{"value":"/ Handles communication from the client to request dispatch.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":21768,"byte_end":21830,"line_start":34,"line_end":34,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1290},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23279,"byte_end":23283,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"Call","qualname":"::rpc::client::channel::Call","value":"Call {  }","parent":null,"children":[{"krate":0,"index":1294}],"decl_id":null,"docs":" A future returned by [`Channel::call`] that resolves to a server response.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23219,"byte_end":23267,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23187,"byte_end":23201,"line_start":76,"line_end":76,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23279,"byte_end":23283,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"__Call","qualname":"::rpc::client::channel::_::__Call","value":"__Call {  }","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23187,"byte_end":23201,"line_start":76,"line_end":76,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":25301,"byte_end":25305,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"call","qualname":"<Channel<Req, Resp>>::call","value":"pub fn call(&mut Self, context::Context, Req) -> Call<, Req, Resp>","parent":null,"children":[],"decl_id":null,"docs":" Sends a request to the dispatch task to forward to the server, returning a [`Future`] that\n resolves to the response.\n","sig":null,"attributes":[{"value":"/ Sends a request to the dispatch task to forward to the server, returning a [`Future`] that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":25161,"byte_end":25255,"line_start":129,"line_end":129,"column_start":5,"column_end":99}},{"value":"/ resolves to the response.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":25260,"byte_end":25289,"line_start":130,"line_end":130,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":28093,"byte_end":28096,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"new","qualname":"::rpc::client::channel::new","value":"pub fn new<Req, Resp, C>(Config, C)\n-> NewClient<Channel<Req, Resp>, RequestDispatch<Req, Resp, C>> where\nC: Transport<ClientMessage<Req>, Response<Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel and dispatcher that manages the lifecycle of requests initiated by the\n channel.\n","sig":null,"attributes":[{"value":"/ Returns a channel and dispatcher that manages the lifecycle of requests initiated by the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":27980,"byte_end":28072,"line_start":197,"line_end":197,"column_start":1,"column_end":93}},{"value":"/ channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":28073,"byte_end":28085,"line_start":198,"line_end":198,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29096,"byte_end":29111,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"RequestDispatch","qualname":"::rpc::client::channel::RequestDispatch","value":"RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1424},{"krate":0,"index":1425}],"decl_id":null,"docs":" Handles the lifecycle of requests, writing requests to the wire, managing cancellations,\n and dispatching responses to the appropriate channel.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29053,"byte_end":29067,"line_start":228,"line_end":228,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29096,"byte_end":29111,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"__RequestDispatch","qualname":"::rpc::client::channel::_::__RequestDispatch","value":"__RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29053,"byte_end":29067,"line_start":228,"line_end":228,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":219},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16970,"byte_end":16976,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"Client","qualname":"::rpc::client::Client","value":"Client<'a, Req>","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228}],"decl_id":null,"docs":" Sends multiplexed requests to, and receives responses from, a server.\n","sig":null,"attributes":[{"value":"/ Sends multiplexed requests to, and receives responses from, a server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16886,"byte_end":16959,"line_start":18,"line_end":18,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":222},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17024,"byte_end":17032,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"Response","qualname":"::rpc::client::Client::Response","value":"type Response;","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" The response type.\n","sig":null,"attributes":[{"value":"/ The response type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16992,"byte_end":17014,"line_start":20,"line_end":20,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":223},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17073,"byte_end":17079,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Future","qualname":"::rpc::client::Client::Future","value":"type Future: Future<Output = io::Result<Self::Response>> + 'a;","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" The future response.\n","sig":null,"attributes":[{"value":"/ The future response.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17039,"byte_end":17063,"line_start":23,"line_end":23,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17386,"byte_end":17390,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"call","qualname":"::rpc::client::Client::call","value":"pub fn call(&'a mut Self, context::Context, Req) -> Self::Future","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" Initiates a request, sending it to the dispatch task.","sig":null,"attributes":[{"value":"/ Initiates a request, sending it to the dispatch task.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17136,"byte_end":17193,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17198,"byte_end":17201,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Returns a [`Future`] that resolves to this client and the future response","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17206,"byte_end":17283,"line_start":28,"line_end":28,"column_start":5,"column_end":82}},{"value":"/ once the request is successfully enqueued.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17288,"byte_end":17334,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17339,"byte_end":17342,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`Future`]: futures::Future","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17347,"byte_end":17378,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17558,"byte_end":17570,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"map_response","qualname":"::rpc::client::Client::map_response","value":"pub fn map_response<F, R>(Self, F) -> MapResponse<Self, F> where\nF: FnMut(Self::Response) -> R, Self: Sized","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" Returns a Client that applies a post-processing function to the returned response.\n","sig":null,"attributes":[{"value":"/ Returns a Client that applies a post-processing function to the returned response.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17464,"byte_end":17550,"line_start":34,"line_end":34,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17822,"byte_end":17834,"line_start":44,"line_end":44,"column_start":8,"column_end":20},"name":"with_request","qualname":"::rpc::client::Client::with_request","value":"pub fn with_request<F, Req2>(Self, F) -> WithRequest<Self, F> where\nF: FnMut(Req2) -> Req, Self: Sized","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" Returns a Client that applies a pre-processing function to the request.\n","sig":null,"attributes":[{"value":"/ Returns a Client that applies a pre-processing function to the request.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17739,"byte_end":17814,"line_start":43,"line_end":43,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1675},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18094,"byte_end":18105,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"MapResponse","qualname":"::rpc::client::MapResponse","value":"MapResponse {  }","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679}],"decl_id":null,"docs":" A Client that applies a function to the returned response.\n","sig":null,"attributes":[{"value":"/ A Client that applies a function to the returned response.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":17996,"byte_end":18058,"line_start":53,"line_end":53,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1688},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18659,"byte_end":18670,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"WithRequest","qualname":"::rpc::client::WithRequest","value":"WithRequest {  }","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692}],"decl_id":null,"docs":" A Client that applies a pre-processing function to the request.\n","sig":null,"attributes":[{"value":"/ A Client that applies a pre-processing function to the request.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18556,"byte_end":18623,"line_start":73,"line_end":73,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1701},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19483,"byte_end":19489,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Config","qualname":"::rpc::client::Config","value":"Config { max_in_flight_requests, pending_request_buffer }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"decl_id":null,"docs":" Settings that control the behavior of the client.\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of the client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19376,"byte_end":19429,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19454,"byte_end":19471,"line_start":108,"line_end":108,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1702},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19681,"byte_end":19703,"line_start":113,"line_end":113,"column_start":9,"column_end":31},"name":"max_in_flight_requests","qualname":"::rpc::client::Config::max_in_flight_requests","value":"usize","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":" The number of requests that can be in flight at once.\n `max_in_flight_requests` controls the size of the map used by the client\n for storing pending requests.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be in flight at once.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19496,"byte_end":19553,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/ `max_in_flight_requests` controls the size of the map used by the client","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19558,"byte_end":19634,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ for storing pending requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19639,"byte_end":19672,"line_start":112,"line_end":112,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1703},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19937,"byte_end":19959,"line_start":117,"line_end":117,"column_start":9,"column_end":31},"name":"pending_request_buffer","qualname":"::rpc::client::Config::pending_request_buffer","value":"usize","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":" The number of requests that can be buffered client-side before being sent.\n `pending_requests_buffer` controls the size of the channel clients use\n to communicate with the request dispatch task.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be buffered client-side before being sent.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19716,"byte_end":19794,"line_start":114,"line_end":114,"column_start":5,"column_end":83}},{"value":"/ `pending_requests_buffer` controls the size of the channel clients use","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19799,"byte_end":19873,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ to communicate with the request dispatch task.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19878,"byte_end":19928,"line_start":116,"line_end":116,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20294,"byte_end":20303,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"NewClient","qualname":"::rpc::client::NewClient","value":"NewClient { client, dispatch }","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" A channel and dispatch pair. The dispatch drives the sending and receiving of requests\n and must be polled continuously or spawned.\n","sig":null,"attributes":[{"value":"/ A channel and dispatch pair. The dispatch drives the sending and receiving of requests","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20144,"byte_end":20234,"line_start":129,"line_end":129,"column_start":1,"column_end":91}},{"value":"/ and must be polled continuously or spawned.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20235,"byte_end":20282,"line_start":130,"line_end":130,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":263},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20344,"byte_end":20350,"line_start":133,"line_end":133,"column_start":9,"column_end":15},"name":"client","qualname":"::rpc::client::NewClient::client","value":"C","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The new client.\n","sig":null,"attributes":[{"value":"/ The new client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20316,"byte_end":20335,"line_start":132,"line_end":132,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":264},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20394,"byte_end":20402,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"dispatch","qualname":"::rpc::client::NewClient::dispatch","value":"D","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The client's dispatch.\n","sig":null,"attributes":[{"value":"/ The client's dispatch.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20359,"byte_end":20385,"line_start":134,"line_end":134,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20695,"byte_end":20700,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"spawn","qualname":"<NewClient<C, D>>::spawn","value":"pub fn spawn(Self) -> io::Result<C>","parent":null,"children":[],"decl_id":null,"docs":" Helper method to spawn the dispatch on the default executor.\n","sig":null,"attributes":[{"value":"/ Helper method to spawn the dispatch on the default executor.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20534,"byte_end":20598,"line_start":143,"line_end":143,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20603,"byte_end":20629,"line_start":144,"line_end":144,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":278},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"context","qualname":"::rpc::context","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1729},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1792},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" Provides a request context that carries a deadline and trace context. This context is sent from\n client to server and is used by the server to enforce response deadlines.\n","sig":null,"attributes":[{"value":"/ Provides a request context that carries a deadline and trace context. This context is sent from","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":51949,"byte_end":52048,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52049,"byte_end":52126,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52721,"byte_end":52728,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Context","qualname":"::rpc::context::Context","value":"Context { deadline, trace_context }","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1714}],"decl_id":null,"docs":" A request context that carries request-scoped information like deadlines and trace information.\n It is sent from client to server and is used by the server to enforce response deadlines.","sig":null,"attributes":[{"value":"/ A request context that carries request-scoped information like deadlines and trace information.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52243,"byte_end":52342,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ It is sent from client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52343,"byte_end":52436,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52437,"byte_end":52440,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The context should not be stored directly in a server implementation, because the context will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52441,"byte_end":52539,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ be different for each request in scope.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52540,"byte_end":52583,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52614,"byte_end":52631,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1791},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53216,"byte_end":53224,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"deadline","qualname":"::rpc::context::Context::deadline","value":"std::time::SystemTime","parent":{"krate":0,"index":1713},"children":[],"decl_id":null,"docs":" When the client expects the request to be complete by. The server should cancel the request\n if it is not complete by this time.\n","sig":null,"attributes":[{"value":"/ When the client expects the request to be complete by. The server should cancel the request","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52735,"byte_end":52830,"line_start":23,"line_end":23,"column_start":5,"column_end":100}},{"value":"/ if it is not complete by this time.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52835,"byte_end":52874,"line_start":24,"line_end":24,"column_start":5,"column_end":44}},{"value":"serde(serialize_with = \"crate::util::serde::serialize_epoch_secs\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":52927,"byte_end":52993,"line_start":27,"line_end":27,"column_start":9,"column_end":75}},{"value":"serde(deserialize_with = \"crate::util::serde::deserialize_epoch_secs\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53053,"byte_end":53123,"line_start":31,"line_end":31,"column_start":9,"column_end":79}},{"value":"serde(default = \"ten_seconds_from_now\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53166,"byte_end":53205,"line_start":33,"line_end":33,"column_start":36,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53564,"byte_end":53577,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"name":"trace_context","qualname":"::rpc::context::Context::trace_context","value":"trace::Context","parent":{"krate":0,"index":1713},"children":[],"decl_id":null,"docs":" Uniquely identifies requests originating from the same source.\n When a service handles a request by making requests itself, those requests should\n include the same `trace_id` as that included on the original request. This way,\n users can trace related actions across a distributed system.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies requests originating from the same source.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53242,"byte_end":53308,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ When a service handles a request by making requests itself, those requests should","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53313,"byte_end":53398,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ include the same `trace_id` as that included on the original request. This way,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53403,"byte_end":53486,"line_start":37,"line_end":37,"column_start":5,"column_end":88}},{"value":"/ users can trace related actions across a distributed system.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53491,"byte_end":53555,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53936,"byte_end":53943,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"current","qualname":"::rpc::context::current","value":"pub fn current() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":53758,"byte_end":53852,"line_start":49,"line_end":49,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":54174,"byte_end":54182,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"trace_id","qualname":"<Context>::trace_id","value":"pub fn trace_id(&Self) -> &TraceId","parent":null,"children":[],"decl_id":null,"docs":" Returns the ID of the request-scoped trace.\n","sig":null,"attributes":[{"value":"/ Returns the ID of the request-scoped trace.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":54115,"byte_end":54162,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::rpc::server","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":516},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":643},{"krate":0,"index":651},{"krate":0,"index":2101},{"krate":0,"index":2040},{"krate":0,"index":654},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":677},{"krate":0,"index":683},{"krate":0,"index":692},{"krate":0,"index":697},{"krate":0,"index":2163},{"krate":0,"index":2109},{"krate":0,"index":706},{"krate":0,"index":714},{"krate":0,"index":2216},{"krate":0,"index":2170},{"krate":0,"index":718},{"krate":0,"index":723},{"krate":0,"index":2279},{"krate":0,"index":2220},{"krate":0,"index":2289},{"krate":0,"index":2296},{"krate":0,"index":727},{"krate":0,"index":732},{"krate":0,"index":736},{"krate":0,"index":741},{"krate":0,"index":2350},{"krate":0,"index":2302},{"krate":0,"index":2298},{"krate":0,"index":750}],"decl_id":null,"docs":" Provides a server that concurrently handles many connections sending multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a server that concurrently handles many connections sending multiplexed requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":54433,"byte_end":54527,"line_start":7,"line_end":7,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":77836,"byte_end":77849,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"ChannelFilter","qualname":"::rpc::server::filter::ChannelFilter","value":"ChannelFilter {  }","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1872},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1873},{"krate":0,"index":1874}],"decl_id":null,"docs":" A single-threaded filter that drops channels based on per-key limits.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":77793,"byte_end":77807,"line_start":21,"line_end":21,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1837},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":77836,"byte_end":77849,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"__ChannelFilter","qualname":"::rpc::server::filter::_::__ChannelFilter","value":"__ChannelFilter {  }","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":77793,"byte_end":77807,"line_start":21,"line_end":21,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78223,"byte_end":78237,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"TrackedChannel","qualname":"::rpc::server::filter::TrackedChannel","value":"TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1933}],"decl_id":null,"docs":" A channel that is tracked by a ChannelFilter.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78180,"byte_end":78194,"line_start":39,"line_end":39,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1906},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78223,"byte_end":78237,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"__TrackedChannel","qualname":"::rpc::server::filter::_::__TrackedChannel","value":"__TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78180,"byte_end":78194,"line_start":39,"line_end":39,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80117,"byte_end":80124,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrackedChannel<C, K>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80075,"byte_end":80105,"line_start":121,"line_end":121,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91245,"byte_end":91254,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Throttler","qualname":"::rpc::server::throttle::Throttler","value":"Throttler {  }","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987}],"decl_id":null,"docs":" A [`Channel`] that limits the number of concurrent\n requests by throttling.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91202,"byte_end":91216,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91245,"byte_end":91254,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"__Throttler","qualname":"::rpc::server::throttle::_::__Throttler","value":"__Throttler {  }","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91202,"byte_end":91216,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91392,"byte_end":91399,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttler<C>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91350,"byte_end":91380,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91631,"byte_end":91634,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Throttler<C>>::new","value":"pub fn new(C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Throttler` that wraps the given channel and limits concurrent requests to\n `max_in_flight_requests`.\n","sig":null,"attributes":[{"value":"/ Returns a new `Throttler` that wraps the given channel and limits concurrent requests to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91493,"byte_end":91585,"line_start":35,"line_end":35,"column_start":5,"column_end":97}},{"value":"/ `max_in_flight_requests`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91590,"byte_end":91619,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2030},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94386,"byte_end":94401,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"ThrottlerStream","qualname":"::rpc::server::throttle::ThrottlerStream","value":"ThrottlerStream {  }","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2032}],"decl_id":null,"docs":" A stream of throttling channels.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94343,"byte_end":94357,"line_start":130,"line_end":130,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94386,"byte_end":94401,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"__ThrottlerStream","qualname":"::rpc::server::throttle::_::__ThrottlerStream","value":"__ThrottlerStream {  }","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94343,"byte_end":94357,"line_start":130,"line_end":130,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55261,"byte_end":55267,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Server","qualname":"::rpc::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" Manages clients, serving multiplexed requests over each connection.\n","sig":null,"attributes":[{"value":"/ Manages clients, serving multiplexed requests over each connection.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55178,"byte_end":55249,"line_start":38,"line_end":38,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2034},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55700,"byte_end":55706,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Config","qualname":"::rpc::server::Config","value":"Config { pending_response_buffer }","parent":null,"children":[{"krate":0,"index":2035}],"decl_id":null,"docs":" Settings that control the behavior of the server.\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of the server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55611,"byte_end":55664,"line_start":56,"line_end":56,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55975,"byte_end":55998,"line_start":62,"line_end":62,"column_start":9,"column_end":32},"name":"pending_response_buffer","qualname":"::rpc::server::Config::pending_response_buffer","value":"usize","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" The number of responses per client that can be buffered server-side before being sent.\n `pending_response_buffer` controls the buffer size of the channel that a server's\n response tasks use to send responses to the client handler task.\n","sig":null,"attributes":[{"value":"/ The number of responses per client that can be buffered server-side before being sent.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55713,"byte_end":55803,"line_start":59,"line_end":59,"column_start":5,"column_end":95}},{"value":"/ `pending_response_buffer` controls the buffer size of the channel that a server's","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55808,"byte_end":55893,"line_start":60,"line_end":60,"column_start":5,"column_end":90}},{"value":"/ response tasks use to send responses to the client handler task.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55898,"byte_end":55966,"line_start":61,"line_end":61,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56242,"byte_end":56249,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"channel","qualname":"<Config>::channel","value":"pub fn channel<Req, Resp, T>(Self, T) -> BaseChannel<Req, Resp, T> where\nT: Transport<Response<Resp>, ClientMessage<Req>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel backed by `transport` and configured with `self`.\n","sig":null,"attributes":[{"value":"/ Returns a channel backed by `transport` and configured with `self`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56159,"byte_end":56230,"line_start":74,"line_end":74,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56509,"byte_end":56512,"line_start":84,"line_end":84,"column_start":8,"column_end":11},"name":"new","qualname":"::rpc::server::new","value":"pub fn new<Req, Resp>(Config) -> Server<Req, Resp>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new server with configuration specified `config`.\n","sig":null,"attributes":[{"value":"/ Returns a new server with configuration specified `config`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56438,"byte_end":56501,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56720,"byte_end":56726,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"config","qualname":"<Server<Req, Resp>>::config","value":"pub fn config(&Self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the config for this server.\n","sig":null,"attributes":[{"value":"/ Returns the config for this server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56669,"byte_end":56708,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56831,"byte_end":56839,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Server<Req, Resp>>::incoming","value":"pub fn incoming<S, T>(Self, S) -> /*impl Trait*/ where S: Stream<Item = T>,\nT: Transport<Response<Resp>, ClientMessage<Req>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of server channels.\n","sig":null,"attributes":[{"value":"/ Returns a stream of server channels.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56779,"byte_end":56819,"line_start":97,"line_end":97,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":630},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57163,"byte_end":57168,"line_start":108,"line_end":108,"column_start":11,"column_end":16},"name":"Serve","qualname":"::rpc::server::Serve","value":"Serve<Req>: Sized + Clone","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" Basically a Fn(Req) -> impl Future<Output = Resp>;\n","sig":null,"attributes":[{"value":"/ Basically a Fn(Req) -> impl Future<Output = Resp>;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57098,"byte_end":57152,"line_start":107,"line_end":107,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":632},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57226,"byte_end":57230,"line_start":110,"line_end":110,"column_start":10,"column_end":14},"name":"Resp","qualname":"::rpc::server::Serve::Resp","value":"type Resp;","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Type of response.\n","sig":null,"attributes":[{"value":"/ Type of response.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57195,"byte_end":57216,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57275,"byte_end":57278,"line_start":113,"line_end":113,"column_start":10,"column_end":13},"name":"Fut","qualname":"::rpc::server::Serve::Fut","value":"type Fut: Future<Output = Self::Resp>;","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Type of response future.\n","sig":null,"attributes":[{"value":"/ Type of response future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57237,"byte_end":57265,"line_start":112,"line_end":112,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57355,"byte_end":57360,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"serve","qualname":"::rpc::server::Serve::serve","value":"pub fn serve(Self, context::Context, Req) -> Self::Fut","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Responds to a single request.\n","sig":null,"attributes":[{"value":"/ Responds to a single request.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57314,"byte_end":57347,"line_start":115,"line_end":115,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":643},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57778,"byte_end":57785,"line_start":133,"line_end":133,"column_start":11,"column_end":18},"name":"Handler","qualname":"::rpc::server::Handler","value":"Handler<C>","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" A utility trait enabling a stream to fluently chain a request handler.\n","sig":null,"attributes":[{"value":"/ A utility trait enabling a stream to fluently chain a request handler.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57693,"byte_end":57767,"line_start":132,"line_end":132,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57897,"byte_end":57917,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"max_channels_per_key","qualname":"::rpc::server::Handler::max_channels_per_key","value":"pub fn max_channels_per_key<K, KF>(Self, u32, KF)\n-> filter::ChannelFilter<Self, K, KF> where K: fmt::Display + Eq + Hash +\nClone + Unpin, KF: Fn(&C) -> K","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" Enforces channel per-key limits.\n","sig":null,"attributes":[{"value":"/ Enforces channel per-key limits.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57853,"byte_end":57889,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58205,"byte_end":58240,"line_start":148,"line_end":148,"column_start":8,"column_end":43},"name":"max_concurrent_requests_per_channel","qualname":"::rpc::server::Handler::max_concurrent_requests_per_channel","value":"pub fn max_concurrent_requests_per_channel(Self, usize)\n-> ThrottlerStream<Self>","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests per channel.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests per channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58142,"byte_end":58197,"line_start":147,"line_end":147,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58485,"byte_end":58497,"line_start":155,"line_end":155,"column_start":8,"column_end":20},"name":"respond_with","qualname":"::rpc::server::Handler::respond_with","value":"pub fn respond_with<S>(Self, S) -> Running<Self, S> where S: Serve<C::Req,\nResp = C::Resp>","parent":{"krate":0,"index":643},"children":[],"decl_id":null,"docs":" Responds to all requests with [`server::serve`](Serve).\n","sig":null,"attributes":[{"value":"/ Responds to all requests with [`server::serve`](Serve).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58333,"byte_end":58392,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58397,"byte_end":58423,"line_start":153,"line_end":153,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2101},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58874,"byte_end":58885,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"BaseChannel","qualname":"::rpc::server::BaseChannel","value":"BaseChannel {  }","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2106},{"krate":0,"index":2107}],"decl_id":null,"docs":" BaseChannel lifts a Transport to a Channel by tracking in-flight requests.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58848,"byte_end":58862,"line_start":174,"line_end":174,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58874,"byte_end":58885,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"__BaseChannel","qualname":"::rpc::server::_::__BaseChannel","value":"__BaseChannel {  }","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58848,"byte_end":58862,"line_start":174,"line_end":174,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59418,"byte_end":59421,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<BaseChannel<Req, Resp, T>>::new","value":"pub fn new(Config, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with `config`.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with `config`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59329,"byte_end":59406,"line_start":190,"line_end":190,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59746,"byte_end":59759,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"with_defaults","qualname":"<BaseChannel<Req, Resp, T>>::with_defaults","value":"pub fn with_defaults(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with the defaults.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with the defaults.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59653,"byte_end":59734,"line_start":200,"line_end":200,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59929,"byte_end":59936,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59843,"byte_end":59917,"line_start":205,"line_end":205,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":60082,"byte_end":60093,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"get_pin_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_pin_ref","value":"pub fn get_pin_ref(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59996,"byte_end":60070,"line_start":210,"line_end":210,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":668},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61745,"byte_end":61752,"line_start":256,"line_end":256,"column_start":11,"column_end":18},"name":"Channel","qualname":"::rpc::server::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"decl_id":null,"docs":" The server end of an open connection with a client, streaming in requests from, and sinking\n responses to, the client.","sig":null,"attributes":[{"value":"/ The server end of an open connection with a client, streaming in requests from, and sinking","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61286,"byte_end":61381,"line_start":249,"line_end":249,"column_start":1,"column_end":96}},{"value":"/ responses to, the client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61382,"byte_end":61411,"line_start":250,"line_end":250,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61412,"byte_end":61415,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Channels are free to somewhat rely on the assumption that all in-flight requests are eventually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61416,"byte_end":61515,"line_start":252,"line_end":252,"column_start":1,"column_end":100}},{"value":"/ either [cancelled](BaseChannel::cancel_request) or [responded to](Sink::start_send). Safety cannot","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61516,"byte_end":61618,"line_start":253,"line_end":253,"column_start":1,"column_end":103}},{"value":"/ rely on this assumption, but it is best for `Channel` users to always account for all outstanding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61619,"byte_end":61720,"line_start":254,"line_end":254,"column_start":1,"column_end":102}},{"value":"/ requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61721,"byte_end":61734,"line_start":255,"line_end":255,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":669},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61889,"byte_end":61892,"line_start":261,"line_end":261,"column_start":10,"column_end":13},"name":"Req","qualname":"::rpc::server::Channel::Req","value":"type Req;","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Type of request item.\n","sig":null,"attributes":[{"value":"/ Type of request item.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61854,"byte_end":61879,"line_start":260,"line_end":260,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":670},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61940,"byte_end":61944,"line_start":264,"line_end":264,"column_start":10,"column_end":14},"name":"Resp","qualname":"::rpc::server::Channel::Resp","value":"type Resp;","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Type of response sink item.\n","sig":null,"attributes":[{"value":"/ Type of response sink item.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61899,"byte_end":61930,"line_start":263,"line_end":263,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61992,"byte_end":61998,"line_start":267,"line_end":267,"column_start":8,"column_end":14},"name":"config","qualname":"::rpc::server::Channel::config","value":"pub fn config(&Self) -> &Config","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Configuration of the channel.\n","sig":null,"attributes":[{"value":"/ Configuration of the channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61951,"byte_end":61984,"line_start":266,"line_end":266,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62094,"byte_end":62112,"line_start":270,"line_end":270,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"::rpc::server::Channel::in_flight_requests","value":"pub fn in_flight_requests(Pin<&mut Self>) -> usize","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Returns the number of in-flight requests over this channel.\n","sig":null,"attributes":[{"value":"/ Returns the number of in-flight requests over this channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62023,"byte_end":62086,"line_start":269,"line_end":269,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62201,"byte_end":62224,"line_start":273,"line_end":273,"column_start":8,"column_end":31},"name":"max_concurrent_requests","qualname":"::rpc::server::Channel::max_concurrent_requests","value":"pub fn max_concurrent_requests(Self, usize) -> Throttler<Self> where\nSelf: Sized","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62150,"byte_end":62193,"line_start":272,"line_end":272,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62523,"byte_end":62536,"line_start":283,"line_end":283,"column_start":8,"column_end":21},"name":"start_request","qualname":"::rpc::server::Channel::start_request","value":"pub fn start_request(Pin<&mut Self>, u64) -> AbortRegistration","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Tells the Channel that request with ID `request_id` is being handled.\n The request will be tracked until a response with the same ID is sent\n to the Channel.\n","sig":null,"attributes":[{"value":"/ Tells the Channel that request with ID `request_id` is being handled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62340,"byte_end":62413,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ The request will be tracked until a response with the same ID is sent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62418,"byte_end":62491,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ to the Channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62496,"byte_end":62515,"line_start":282,"line_end":282,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62763,"byte_end":62775,"line_start":287,"line_end":287,"column_start":8,"column_end":20},"name":"respond_with","qualname":"::rpc::server::Channel::respond_with","value":"pub fn respond_with<S>(Self, S) -> ClientHandler<Self, S> where\nS: Serve<Self::Req, Resp = Self::Resp>, Self: Sized","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Respond to requests coming over the channel with `f`. Returns a future that drives the\n responses and resolves when the connection is closed.\n","sig":null,"attributes":[{"value":"/ Respond to requests coming over the channel with `f`. Returns a future that drives the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62603,"byte_end":62693,"line_start":285,"line_end":285,"column_start":5,"column_end":95}},{"value":"/ responses and resolves when the connection is closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":62698,"byte_end":62755,"line_start":286,"line_end":286,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2163},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66018,"byte_end":66031,"line_start":397,"line_end":397,"column_start":12,"column_end":25},"name":"ClientHandler","qualname":"::rpc::server::ClientHandler","value":"ClientHandler {  }","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2166}],"decl_id":null,"docs":" A running handler serving all requests coming over a channel.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65992,"byte_end":66006,"line_start":396,"line_end":396,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2137},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66018,"byte_end":66031,"line_start":397,"line_end":397,"column_start":12,"column_end":25},"name":"__ClientHandler","qualname":"::rpc::server::_::__ClientHandler","value":"__ClientHandler {  }","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65992,"byte_end":66006,"line_start":396,"line_end":396,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66593,"byte_end":66608,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"get_pin_channel","qualname":"<ClientHandler<C, S>>::get_pin_channel","value":"pub fn get_pin_channel(Pin<&mut Self>) -> Pin<&mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66509,"byte_end":66581,"line_start":418,"line_end":418,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70646,"byte_end":70660,"line_start":531,"line_end":531,"column_start":12,"column_end":26},"name":"RequestHandler","qualname":"::rpc::server::RequestHandler","value":"RequestHandler {  }","parent":null,"children":[{"krate":0,"index":2219}],"decl_id":null,"docs":" A future fulfilling a single client request.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70620,"byte_end":70634,"line_start":530,"line_end":530,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70646,"byte_end":70660,"line_start":531,"line_end":531,"column_start":12,"column_end":26},"name":"__RequestHandler","qualname":"::rpc::server::_::__RequestHandler","value":"__RequestHandler {  }","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70620,"byte_end":70634,"line_start":530,"line_end":530,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75789,"byte_end":75796,"line_start":686,"line_end":686,"column_start":12,"column_end":19},"name":"execute","qualname":"<ClientHandler<C, S>>::execute","value":"pub fn execute(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Runs the client handler until completion by [spawning](tokio::spawn) each\n request handler onto the default executor.\n","sig":null,"attributes":[{"value":"/ Runs the client handler until completion by [spawning](tokio::spawn) each","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75564,"byte_end":75641,"line_start":682,"line_end":682,"column_start":5,"column_end":82}},{"value":"/ request handler onto the default executor.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75646,"byte_end":75692,"line_start":683,"line_end":683,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75697,"byte_end":75723,"line_start":684,"line_end":684,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2350},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76346,"byte_end":76353,"line_start":702,"line_end":702,"column_start":12,"column_end":19},"name":"Running","qualname":"::rpc::server::Running","value":"Running {  }","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2353}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) channels and request handlers on the default\n executor.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76258,"byte_end":76284,"line_start":700,"line_end":700,"column_start":1,"column_end":27}},{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76226,"byte_end":76240,"line_start":698,"line_end":698,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2326},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76346,"byte_end":76353,"line_start":702,"line_end":702,"column_start":12,"column_end":19},"name":"__Running","qualname":"::rpc::server::_::__Running","value":"__Running {  }","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76226,"byte_end":76240,"line_start":698,"line_end":698,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":756},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::rpc::transport","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":806}],"decl_id":null,"docs":" Provides a [`Transport`](sealed::Transport) trait as well as implementations.","sig":null,"attributes":[{"value":"/ Provides a [`Transport`](sealed::Transport) trait as well as implementations.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":99960,"byte_end":100041,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100042,"byte_end":100045,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The rpc crate is transport- and protocol-agnostic. Any transport that impls [`Transport`](sealed::Transport)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100046,"byte_end":100158,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ can be plugged in, using whatever protocol it wants.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100159,"byte_end":100215,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":761},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::rpc::transport::channel","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":2408},{"krate":0,"index":2359},{"krate":0,"index":2355},{"krate":0,"index":788},{"krate":0,"index":794}],"decl_id":null,"docs":" Transports backed by in-memory channels.\n","sig":null,"attributes":[{"value":"/ Transports backed by in-memory channels.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":100867,"byte_end":100911,"line_start":7,"line_end":7,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101164,"byte_end":101173,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::rpc::transport::channel::unbounded","value":"pub fn unbounded<SinkItem, Item>()\n-> (UnboundedChannel<SinkItem, Item>, UnboundedChannel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's\n [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101048,"byte_end":101142,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ [`Sink`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101143,"byte_end":101156,"line_start":16,"line_end":16,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101650,"byte_end":101666,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"UnboundedChannel","qualname":"::rpc::transport::channel::UnboundedChannel","value":"UnboundedChannel {  }","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)\n and [`UnboundedReceiver`](mpsc::UnboundedReceiver).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101607,"byte_end":101621,"line_start":31,"line_end":31,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2383},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101650,"byte_end":101666,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"__UnboundedChannel","qualname":"::rpc::transport::channel::_::__UnboundedChannel","value":"__UnboundedChannel {  }","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101607,"byte_end":101621,"line_start":31,"line_end":31,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":808},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100399,"byte_end":100408,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"name":"Transport","qualname":"::rpc::transport::sealed::Transport","value":"Transport<SinkItem, Item>: Stream<Item = io::Result<Item>> + Sink<SinkItem, Error = io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A bidirectional stream ([`Sink`] + [`Stream`]) of messages.\n","sig":null,"attributes":[{"value":"/ A bidirectional stream ([`Sink`] + [`Stream`]) of messages.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100321,"byte_end":100384,"line_start":20,"line_end":20,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2418},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13015,"byte_end":13022,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"Request","qualname":"::rpc::ClientMessage::Request","value":"ClientMessage::Request(Request<T>)","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":" A request initiated by a user. The server responds to a request by invoking a\n service-provided request handler.  The handler completes with a [`response`](Response), which\n the server sends back to the client.\n","sig":null,"attributes":[{"value":"/ A request initiated by a user. The server responds to a request by invoking a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12782,"byte_end":12863,"line_start":44,"line_end":44,"column_start":5,"column_end":86}},{"value":"/ service-provided request handler.  The handler completes with a [`response`](Response), which","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12868,"byte_end":12965,"line_start":45,"line_end":45,"column_start":5,"column_end":102}},{"value":"/ the server sends back to the client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12970,"byte_end":13010,"line_start":46,"line_end":46,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":2421},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13457,"byte_end":13463,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::rpc::ClientMessage::Cancel","value":"ClientMessage::Cancel { trace_context, request_id }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":" A command to cancel an in-flight request, automatically sent by the client when a response\n future is dropped.","sig":null,"attributes":[{"value":"/ A command to cancel an in-flight request, automatically sent by the client when a response","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13040,"byte_end":13134,"line_start":48,"line_end":48,"column_start":5,"column_end":99}},{"value":"/ future is dropped.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13139,"byte_end":13161,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13166,"byte_end":13169,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ When received, the server will immediately cancel the main task (top-level future) of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13174,"byte_end":13267,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/ request handler for the associated request. Any tasks spawned by the request handler will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13272,"byte_end":13365,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ not be canceled, because the framework layer does not","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13370,"byte_end":13427,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ know about them.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13432,"byte_end":13452,"line_start":54,"line_end":54,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2416},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12759,"byte_end":12772,"line_start":43,"line_end":43,"column_start":10,"column_end":23},"name":"ClientMessage","qualname":"::rpc::ClientMessage","value":"pub enum ClientMessage<T> {\n    Request(Request<T>),\n    Cancel {\n            trace_context: trace::Context,\n            request_id: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2421}],"decl_id":null,"docs":" A message from a client to a server.\n","sig":null,"attributes":[{"value":"/ A message from a client to a server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12596,"byte_end":12636,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12732,"byte_end":12749,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13990,"byte_end":13997,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"Request","qualname":"::rpc::Request","value":"Request { context, id, message }","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523}],"decl_id":null,"docs":" A request from a client to a server.\n","sig":null,"attributes":[{"value":"/ A request from a client to a server.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13812,"byte_end":13852,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":13883,"byte_end":13900,"line_start":67,"line_end":67,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14078,"byte_end":14085,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"name":"context","qualname":"::rpc::Request::context","value":"rpc::context::Context","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":" Trace context, deadline, and other cross-cutting concerns.\n","sig":null,"attributes":[{"value":"/ Trace context, deadline, and other cross-cutting concerns.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14007,"byte_end":14069,"line_start":70,"line_end":70,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2522},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14201,"byte_end":14203,"line_start":73,"line_end":73,"column_start":9,"column_end":11},"name":"id","qualname":"::rpc::Request::id","value":"u64","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":" Uniquely identifies the request across all requests sent over a single channel.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies the request across all requests sent over a single channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14109,"byte_end":14192,"line_start":72,"line_end":72,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14244,"byte_end":14251,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"name":"message","qualname":"::rpc::Request::message","value":"T","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":" The request body.\n","sig":null,"attributes":[{"value":"/ The request body.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14214,"byte_end":14235,"line_start":74,"line_end":74,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14453,"byte_end":14461,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"Response","qualname":"::rpc::Response","value":"Response { request_id, message }","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603}],"decl_id":null,"docs":" A response from a server to a client.\n","sig":null,"attributes":[{"value":"/ A response from a server to a client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14259,"byte_end":14300,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14346,"byte_end":14363,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2602},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14525,"byte_end":14535,"line_start":84,"line_end":84,"column_start":9,"column_end":19},"name":"request_id","qualname":"::rpc::Response::request_id","value":"u64","parent":{"krate":0,"index":2600},"children":[],"decl_id":null,"docs":" The ID of the request being responded to.\n","sig":null,"attributes":[{"value":"/ The ID of the request being responded to.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14471,"byte_end":14516,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2603},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14612,"byte_end":14619,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"message","qualname":"::rpc::Response::message","value":"std::result::Result<T, rpc::ServerError>","parent":{"krate":0,"index":2600},"children":[],"decl_id":null,"docs":" The response body, or an error if the request failed.\n","sig":null,"attributes":[{"value":"/ The response body, or an error if the request failed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14546,"byte_end":14603,"line_start":85,"line_end":85,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2671},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14849,"byte_end":14860,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"ServerError","qualname":"::rpc::ServerError","value":"ServerError { kind, detail }","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2672}],"decl_id":null,"docs":" An error response from a server to a client.\n","sig":null,"attributes":[{"value":"/ An error response from a server to a client.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14648,"byte_end":14696,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14742,"byte_end":14759,"line_start":91,"line_end":91,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2749},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15196,"byte_end":15200,"line_start":103,"line_end":103,"column_start":9,"column_end":13},"name":"kind","qualname":"::rpc::ServerError::kind","value":"std::io::ErrorKind","parent":{"krate":0,"index":2671},"children":[],"decl_id":null,"docs":" The type of error that occurred to fail the request.\n","sig":null,"attributes":[{"value":"serde(serialize_with = \"util::serde::serialize_io_error_kind_as_u32\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":14915,"byte_end":14984,"line_start":96,"line_end":96,"column_start":9,"column_end":78}},{"value":"serde(deserialize_with = \"util::serde::deserialize_io_error_kind_from_u32\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15044,"byte_end":15119,"line_start":100,"line_end":100,"column_start":9,"column_end":84}},{"value":"/ The type of error that occurred to fail the request.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15131,"byte_end":15187,"line_start":102,"line_end":102,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2672},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15297,"byte_end":15303,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"detail","qualname":"::rpc::ServerError::detail","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2671},"children":[],"decl_id":null,"docs":" A message describing more detail about the error that occurred.\n","sig":null,"attributes":[{"value":"/ A message describing more detail about the error that occurred.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15221,"byte_end":15288,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15555,"byte_end":15563,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Request<T>>::deadline","value":"pub fn deadline(&Self) -> &SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline for this request.\n","sig":null,"attributes":[{"value":"/ Returns the deadline for this request.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15501,"byte_end":15543,"line_start":115,"line_end":115,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":942},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_transport","qualname":"::serde_transport","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":2814},{"krate":0,"index":2750},{"krate":0,"index":985},{"krate":0,"index":991},{"krate":0,"index":1000},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1029}],"decl_id":null,"docs":" A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"serde-transport\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8628,"byte_end":8663,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":108778,"byte_end":108931,"line_start":7,"line_end":7,"column_start":1,"column_end":154}},{"value":"deny(missing_docs)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":108933,"byte_end":108955,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2814},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109358,"byte_end":109367,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Transport","qualname":"::serde_transport::Transport","value":"Transport {  }","parent":null,"children":[{"krate":0,"index":2819}],"decl_id":null,"docs":" A transport that serializes to, and deserializes from, a byte stream.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109332,"byte_end":109346,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2780},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109358,"byte_end":109367,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"__Transport","qualname":"::serde_transport::_::__Transport","value":"__Transport {  }","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109332,"byte_end":109346,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109649,"byte_end":109656,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Transport<S, Item, SinkItem, Codec>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109563,"byte_end":109637,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":1016},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":111973,"byte_end":111976,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"new","qualname":"::serde_transport::new","value":"pub fn new<S, Item, SinkItem, Codec>(Framed<S, LengthDelimitedCodec>, Codec)\n-> Transport<S, Item, SinkItem, Codec> where S: AsyncWrite + AsyncRead,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new transport from a framed transport and a serialization codec.\n","sig":null,"attributes":[{"value":"/ Constructs a new transport from a framed transport and a serialization codec.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":111884,"byte_end":111965,"line_start":93,"line_end":93,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":1029},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":112836,"byte_end":112839,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"name":"tcp","qualname":"::serde_transport::tcp","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1062},{"krate":0,"index":2890},{"krate":0,"index":2820},{"krate":0,"index":1068},{"krate":0,"index":1077},{"krate":0,"index":1084},{"krate":0,"index":1092},{"krate":0,"index":2976},{"krate":0,"index":2905},{"krate":0,"index":2899},{"krate":0,"index":1101},{"krate":0,"index":1109}],"decl_id":null,"docs":" TCP support for generic transport using Tokio.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":112706,"byte_end":112729,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/ TCP support for generic transport using Tokio.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":112777,"byte_end":112827,"line_start":123,"line_end":123,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113391,"byte_end":113400,"line_start":143,"line_end":143,"column_start":16,"column_end":25},"name":"peer_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the peer address of the underlying TcpStream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113318,"byte_end":113375,"line_start":142,"line_end":142,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113583,"byte_end":113593,"line_start":147,"line_end":147,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the local address of the underlying TcpStream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113509,"byte_end":113567,"line_start":146,"line_end":146,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2890},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113819,"byte_end":113826,"line_start":154,"line_end":154,"column_start":16,"column_end":23},"name":"Connect","qualname":"::serde_transport::tcp::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897}],"decl_id":null,"docs":" A connection Future that also exposes the length-delimited framing config.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113789,"byte_end":113803,"line_start":153,"line_end":153,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113819,"byte_end":113826,"line_start":154,"line_end":154,"column_start":16,"column_end":23},"name":"__Connect","qualname":"::serde_transport::tcp::_::__Connect","value":"__Connect {  }","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2863}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113789,"byte_end":113803,"line_start":153,"line_end":153,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114847,"byte_end":114853,"line_start":180,"line_end":180,"column_start":16,"column_end":22},"name":"config","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114757,"byte_end":114831,"line_start":179,"line_end":179,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":115024,"byte_end":115034,"line_start":185,"line_end":185,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114937,"byte_end":115008,"line_start":184,"line_end":184,"column_start":9,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":1084},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":115211,"byte_end":115218,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"connect","qualname":"::serde_transport::tcp::connect","value":"pub fn connect<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> Connect</*impl Trait*/, Item, SinkItem, CodecFn> where A: ToSocketAddrs,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Connects to `addr`, wrapping the connection in a TCP transport.\n","sig":null,"attributes":[{"value":"/ Connects to `addr`, wrapping the connection in a TCP transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":115132,"byte_end":115199,"line_start":190,"line_end":190,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1092},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":115868,"byte_end":115874,"line_start":211,"line_end":211,"column_start":18,"column_end":24},"name":"listen","qualname":"::serde_transport::tcp::listen","value":"pub async fn listen<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> /*impl Trait*/ where A: ToSocketAddrs, Item: for<'de> Deserialize,\nCodec: Serializer<SinkItem> + Deserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Listens on `addr`, wrapping accepted connections in TCP transports.\n","sig":null,"attributes":[{"value":"/ Listens on `addr`, wrapping accepted connections in TCP transports.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":115779,"byte_end":115850,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2976},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116619,"byte_end":116627,"line_start":235,"line_end":235,"column_start":16,"column_end":24},"name":"Incoming","qualname":"::serde_transport::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985}],"decl_id":null,"docs":" A [`TcpListener`] that wraps connections in [transports](Transport).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116568,"byte_end":116582,"line_start":233,"line_end":233,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2943},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116619,"byte_end":116627,"line_start":235,"line_end":235,"column_start":16,"column_end":24},"name":"__Incoming","qualname":"::serde_transport::tcp::_::__Incoming","value":"__Incoming {  }","parent":null,"children":[{"krate":0,"index":2949}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116568,"byte_end":116582,"line_start":233,"line_end":233,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117017,"byte_end":117027,"line_start":245,"line_end":245,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address being listened on.\n","sig":null,"attributes":[{"value":"/ Returns the address being listened on.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116959,"byte_end":117001,"line_start":244,"line_end":244,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117188,"byte_end":117194,"line_start":250,"line_end":250,"column_start":16,"column_end":22},"name":"config","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117098,"byte_end":117172,"line_start":249,"line_end":249,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117365,"byte_end":117375,"line_start":255,"line_end":255,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117278,"byte_end":117349,"line_start":254,"line_end":254,"column_start":9,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":1117},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::trace","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":3003},{"krate":0,"index":3007},{"krate":0,"index":3013},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3084},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3129},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3114},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1142}],"decl_id":null,"docs":" Provides building blocks for tracing distributed programs.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":121876,"byte_end":121929,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Provides building blocks for tracing distributed programs.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":121931,"byte_end":121993,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":121994,"byte_end":121997,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A trace is logically a tree of causally-related events called spans. Traces are tracked via a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":121998,"byte_end":122095,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ [context](Context) that identifies the current trace, span, and parent of the current span.  In","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122096,"byte_end":122195,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ distributed systems, a context can be sent from client to server to connect events occurring on","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122196,"byte_end":122295,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ either side.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122296,"byte_end":122312,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122313,"byte_end":122316,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate's design is based on [opencensus","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122317,"byte_end":122364,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ tracing](https://opencensus.io/core-concepts/tracing/).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122365,"byte_end":122424,"line_start":17,"line_end":17,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3003},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122916,"byte_end":122923,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Context","qualname":"::trace::Context","value":"Context { trace_id, span_id, parent_id }","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006}],"decl_id":null,"docs":" A context for tracing the execution of processes, distributed or otherwise.","sig":null,"attributes":[{"value":"/ A context for tracing the execution of processes, distributed or otherwise.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122493,"byte_end":122572,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122573,"byte_end":122576,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Consists of a span identifying an event, an optional parent span identifying a causal event","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122577,"byte_end":122672,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ that triggered the current span, and a trace with which all related spans are associated.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122673,"byte_end":122766,"line_start":28,"line_end":28,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":3004},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123105,"byte_end":123113,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"trace_id","qualname":"::trace::Context::trace_id","value":"trace::TraceId","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" An identifier of the trace associated with the current context. A trace ID is typically\n created at a root span and passed along through all causal events.\n","sig":null,"attributes":[{"value":"/ An identifier of the trace associated with the current context. A trace ID is typically","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":122930,"byte_end":123021,"line_start":32,"line_end":32,"column_start":5,"column_end":96}},{"value":"/ created at a root span and passed along through all causal events.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123026,"byte_end":123096,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3005},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123404,"byte_end":123411,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"span_id","qualname":"::trace::Context::span_id","value":"trace::SpanId","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" An identifier of the current span. In typical RPC usage, a span is created by a client\n before making an RPC, and the span ID is sent to the server. The server is free to create\n its own spans, for which it sets the client's span as the parent span.\n","sig":null,"attributes":[{"value":"/ An identifier of the current span. In typical RPC usage, a span is created by a client","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123128,"byte_end":123218,"line_start":35,"line_end":35,"column_start":5,"column_end":95}},{"value":"/ before making an RPC, and the span ID is sent to the server. The server is free to create","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123223,"byte_end":123316,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ its own spans, for which it sets the client's span as the parent span.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123321,"byte_end":123395,"line_start":37,"line_end":37,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3006},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123788,"byte_end":123797,"line_start":44,"line_end":44,"column_start":9,"column_end":18},"name":"parent_id","qualname":"::trace::Context::parent_id","value":"std::option::Option<trace::SpanId>","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" An identifier of the span that originated the current span. For example, if a server sends\n an RPC in response to a client request that included a span, the server would create a span\n for the RPC and set its parent to the span_id in the incoming request's context.","sig":null,"attributes":[{"value":"/ An identifier of the span that originated the current span. For example, if a server sends","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123425,"byte_end":123519,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ an RPC in response to a client request that included a span, the server would create a span","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123524,"byte_end":123619,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ for the RPC and set its parent to the span_id in the incoming request's context.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123624,"byte_end":123708,"line_start":41,"line_end":41,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123713,"byte_end":123716,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If `parent_id` is `None`, then this is a root context.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123721,"byte_end":123779,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3075},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124082,"byte_end":124089,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"TraceId","qualname":"::trace::TraceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit UUID identifying a trace. All spans caused by the same originating span share the\n same trace ID.\n","sig":null,"attributes":[{"value":"/ A 128-bit UUID identifying a trace. All spans caused by the same originating span share the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123818,"byte_end":123913,"line_start":47,"line_end":47,"column_start":1,"column_end":96}},{"value":"/ same trace ID.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":123914,"byte_end":123932,"line_start":48,"line_end":48,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3120},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124347,"byte_end":124353,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"SpanId","qualname":"::trace::SpanId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.\n","sig":null,"attributes":[{"value":"/ A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124098,"byte_end":124197,"line_start":53,"line_end":53,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124469,"byte_end":124477,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Context>::new_root","value":"pub fn new_root() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new root context. A root context is one with no parent span.\n","sig":null,"attributes":[{"value":"/ Constructs a new root context. A root context is one with no parent span.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124380,"byte_end":124457,"line_start":59,"line_end":59,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124839,"byte_end":124845,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"random","qualname":"<TraceId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random trace ID that can be assumed to be globally unique if `rng` generates\n actually-random numbers.\n","sig":null,"attributes":[{"value":"/ Returns a random trace ID that can be assumed to be globally unique if `rng` generates","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124704,"byte_end":124794,"line_start":71,"line_end":71,"column_start":5,"column_end":95}},{"value":"/ actually-random numbers.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124799,"byte_end":124827,"line_start":72,"line_end":72,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125098,"byte_end":125104,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"random","qualname":"<SpanId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random span ID that can be assumed to be unique within a single trace.\n","sig":null,"attributes":[{"value":"/ Returns a random span ID that can be assumed to be unique within a single trace.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125002,"byte_end":125086,"line_start":79,"line_end":79,"column_start":5,"column_end":89}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":22157,"byte_end":22164,"line_start":44,"line_end":44,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":22893,"byte_end":22897,"line_start":67,"line_end":67,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23436,"byte_end":23440,"line_start":84,"line_end":84,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23938,"byte_end":23945,"line_start":99,"line_end":99,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":25851,"byte_end":25867,"line_start":149,"line_end":149,"column_start":8,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":26057,"byte_end":26073,"line_start":157,"line_end":157,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":26834,"byte_end":26850,"line_start":177,"line_end":177,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29710,"byte_end":29725,"line_start":246,"line_end":246,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":36855,"byte_end":36870,"line_start":439,"line_end":439,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":39613,"byte_end":39632,"line_start":514,"line_end":514,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":39805,"byte_end":39821,"line_start":521,"line_end":521,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":40162,"byte_end":40183,"line_start":538,"line_end":538,"column_start":11,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":40371,"byte_end":40392,"line_start":547,"line_end":547,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":41207,"byte_end":41228,"line_start":575,"line_end":575,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":41474,"byte_end":41495,"line_start":584,"line_end":584,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":42337,"byte_end":42349,"line_start":614,"line_end":614,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":42624,"byte_end":42636,"line_start":627,"line_end":627,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":43387,"byte_end":43395,"line_start":659,"line_end":659,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18194,"byte_end":18205,"line_start":60,"line_end":60,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18759,"byte_end":18770,"line_start":80,"line_end":80,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19109,"byte_end":19116,"line_start":93,"line_end":93,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19988,"byte_end":19994,"line_start":120,"line_end":120,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20424,"byte_end":20433,"line_start":138,"line_end":138,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20966,"byte_end":20975,"line_start":157,"line_end":157,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":54101,"byte_end":54108,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78425,"byte_end":78432,"line_start":53,"line_end":53,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78620,"byte_end":78634,"line_start":60,"line_end":60,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78861,"byte_end":78875,"line_start":71,"line_end":71,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":79499,"byte_end":79513,"line_start":94,"line_end":94,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":79603,"byte_end":79617,"line_start":100,"line_end":100,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80048,"byte_end":80062,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80325,"byte_end":80338,"line_start":132,"line_end":132,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80871,"byte_end":80884,"line_start":152,"line_end":152,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":83880,"byte_end":83893,"line_start":238,"line_end":238,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91331,"byte_end":91340,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91452,"byte_end":91461,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91799,"byte_end":91808,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93115,"byte_end":93124,"line_start":80,"line_end":80,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93769,"byte_end":93778,"line_start":103,"line_end":103,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93862,"byte_end":93871,"line_start":109,"line_end":109,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94478,"byte_end":94493,"line_start":138,"line_end":138,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94735,"byte_end":94750,"line_start":151,"line_end":151,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55369,"byte_end":55375,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55487,"byte_end":55493,"line_start":50,"line_end":50,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56027,"byte_end":56033,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56146,"byte_end":56152,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56645,"byte_end":56651,"line_start":91,"line_end":91,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57456,"byte_end":57457,"line_start":119,"line_end":119,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58707,"byte_end":58708,"line_start":166,"line_end":166,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59237,"byte_end":59248,"line_start":186,"line_end":186,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61153,"byte_end":61164,"line_start":243,"line_end":243,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":63232,"byte_end":63243,"line_start":304,"line_end":304,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":64133,"byte_end":64144,"line_start":330,"line_end":330,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65136,"byte_end":65147,"line_start":363,"line_end":363,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65266,"byte_end":65277,"line_start":369,"line_end":369,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66423,"byte_end":66436,"line_start":413,"line_end":413,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70416,"byte_end":70429,"line_start":520,"line_end":520,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70738,"byte_end":70752,"line_start":536,"line_end":536,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":71000,"byte_end":71014,"line_start":548,"line_end":548,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":71549,"byte_end":71553,"line_start":575,"line_end":575,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":74295,"byte_end":74299,"line_start":639,"line_end":639,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":74432,"byte_end":74445,"line_start":645,"line_end":645,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75366,"byte_end":75379,"line_start":674,"line_end":674,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76466,"byte_end":76473,"line_start":709,"line_end":709,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101822,"byte_end":101838,"line_start":40,"line_end":40,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":102096,"byte_end":102112,"line_start":48,"line_end":48,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100573,"byte_end":100574,"line_start":26,"line_end":26,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/util.rs","byte_start":105137,"byte_end":105147,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/util.rs","byte_start":105521,"byte_end":105528,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15355,"byte_end":15360,"line_start":108,"line_end":108,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15484,"byte_end":15491,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":16028,"byte_end":16034,"line_start":133,"line_end":133,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109521,"byte_end":109530,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109774,"byte_end":109783,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":110704,"byte_end":110713,"line_start":56,"line_end":56,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":112394,"byte_end":112403,"line_start":109,"line_end":109,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113178,"byte_end":113187,"line_start":138,"line_end":138,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113264,"byte_end":113273,"line_start":141,"line_end":141,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114080,"byte_end":114087,"line_start":162,"line_end":162,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114711,"byte_end":114718,"line_start":178,"line_end":178,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116908,"byte_end":116916,"line_start":243,"line_end":243,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117521,"byte_end":117529,"line_start":260,"line_end":260,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124366,"byte_end":124373,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124690,"byte_end":124697,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124989,"byte_end":124995,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125198,"byte_end":125205,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125357,"byte_end":125363,"line_start":92,"line_end":92,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8505,"byte_end":8508,"line_start":206,"line_end":206,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12331,"byte_end":12337,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":16843,"byte_end":16850,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12347,"byte_end":12354,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":278}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12364,"byte_end":12370,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":12380,"byte_end":12389,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":756}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100264,"byte_end":100271,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":761}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8731,"byte_end":8746,"line_start":217,"line_end":217,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":942}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/lib.rs","byte_start":8757,"byte_end":8762,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1117}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":22157,"byte_end":22164,"line_start":44,"line_end":44,"column_start":27,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":22893,"byte_end":22897,"line_start":67,"line_end":67,"column_start":32,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23436,"byte_end":23440,"line_start":84,"line_end":84,"column_start":32,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":23938,"byte_end":23945,"line_start":99,"line_end":99,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":25851,"byte_end":25867,"line_start":149,"line_end":149,"column_start":8,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":26057,"byte_end":26073,"line_start":157,"line_end":157,"column_start":23,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":26834,"byte_end":26850,"line_start":177,"line_end":177,"column_start":27,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1337},"to":{"krate":36,"index":41}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":29710,"byte_end":29725,"line_start":246,"line_end":246,"column_start":20,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":36855,"byte_end":36870,"line_start":439,"line_end":439,"column_start":31,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1420},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":39613,"byte_end":39632,"line_start":514,"line_end":514,"column_start":6,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":39805,"byte_end":39821,"line_start":521,"line_end":521,"column_start":17,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1454},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":40162,"byte_end":40183,"line_start":538,"line_end":538,"column_start":11,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":40371,"byte_end":40392,"line_start":547,"line_end":547,"column_start":22,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1501},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":41207,"byte_end":41228,"line_start":575,"line_end":575,"column_start":17,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":41474,"byte_end":41495,"line_start":584,"line_end":584,"column_start":28,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":42337,"byte_end":42349,"line_start":614,"line_end":614,"column_start":18,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":42624,"byte_end":42636,"line_start":627,"line_end":627,"column_start":29,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1612},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client/channel.rs","byte_start":43387,"byte_end":43395,"line_start":659,"line_end":659,"column_start":18,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18194,"byte_end":18205,"line_start":60,"line_end":60,"column_start":54,"column_end":65},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1675},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":18759,"byte_end":18770,"line_start":80,"line_end":80,"column_start":54,"column_end":65},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19109,"byte_end":19116,"line_start":93,"line_end":93,"column_start":41,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":19988,"byte_end":19994,"line_start":120,"line_end":120,"column_start":18,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1701},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20424,"byte_end":20433,"line_start":138,"line_end":138,"column_start":15,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/client.rs","byte_start":20966,"byte_end":20975,"line_start":157,"line_end":157,"column_start":27,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/context.rs","byte_start":54101,"byte_end":54108,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78425,"byte_end":78432,"line_start":53,"line_end":53,"column_start":18,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1935},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78620,"byte_end":78634,"line_start":60,"line_end":60,"column_start":23,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1930},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":78861,"byte_end":78875,"line_start":71,"line_end":71,"column_start":27,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1930},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":79499,"byte_end":79513,"line_start":94,"line_end":94,"column_start":25,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1930},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":79603,"byte_end":79617,"line_start":100,"line_end":100,"column_start":24,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":668}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80048,"byte_end":80062,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80325,"byte_end":80338,"line_start":132,"line_end":132,"column_start":15,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":80871,"byte_end":80884,"line_start":152,"line_end":152,"column_start":15,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/filter.rs","byte_start":83880,"byte_end":83893,"line_start":238,"line_end":238,"column_start":26,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1868},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91331,"byte_end":91340,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91452,"byte_end":91461,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":91799,"byte_end":91808,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1984},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93115,"byte_end":93124,"line_start":80,"line_end":80,"column_start":50,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1984},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93769,"byte_end":93778,"line_start":103,"line_end":103,"column_start":22,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":93862,"byte_end":93871,"line_start":109,"line_end":109,"column_start":21,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1984},"to":{"krate":0,"index":668}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94478,"byte_end":94493,"line_start":138,"line_end":138,"column_start":9,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server/throttle.rs","byte_start":94735,"byte_end":94750,"line_start":151,"line_end":151,"column_start":20,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2030},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55369,"byte_end":55375,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":55487,"byte_end":55493,"line_start":50,"line_end":50,"column_start":32,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56027,"byte_end":56033,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56146,"byte_end":56152,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":56645,"byte_end":56651,"line_start":91,"line_end":91,"column_start":17,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57175,"byte_end":57180,"line_start":108,"line_end":108,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":630}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57183,"byte_end":57188,"line_start":108,"line_end":108,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":630}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":57456,"byte_end":57457,"line_start":119,"line_end":119,"column_start":40,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":639},"to":{"krate":0,"index":630}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":58707,"byte_end":58708,"line_start":166,"line_end":166,"column_start":27,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":652},"to":{"krate":0,"index":643}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":59237,"byte_end":59248,"line_start":186,"line_end":186,"column_start":20,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":61153,"byte_end":61164,"line_start":243,"line_end":243,"column_start":35,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":63232,"byte_end":63243,"line_start":304,"line_end":304,"column_start":31,"column_end":42},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2101},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":64133,"byte_end":64144,"line_start":330,"line_end":330,"column_start":45,"column_end":56},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2101},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65136,"byte_end":65147,"line_start":363,"line_end":363,"column_start":33,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":65266,"byte_end":65277,"line_start":369,"line_end":369,"column_start":32,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2101},"to":{"krate":0,"index":668}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":66423,"byte_end":66436,"line_start":413,"line_end":413,"column_start":12,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70416,"byte_end":70429,"line_start":520,"line_end":520,"column_start":27,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2163},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":70738,"byte_end":70752,"line_start":536,"line_end":536,"column_start":23,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":71000,"byte_end":71014,"line_start":548,"line_end":548,"column_start":27,"column_end":41},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":71549,"byte_end":71553,"line_start":575,"line_end":575,"column_start":23,"column_end":27},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2279},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":74295,"byte_end":74299,"line_start":639,"line_end":639,"column_start":27,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2279},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":74432,"byte_end":74445,"line_start":645,"line_end":645,"column_start":23,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2163},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":75366,"byte_end":75379,"line_start":674,"line_end":674,"column_start":12,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/server.rs","byte_start":76466,"byte_end":76473,"line_start":709,"line_end":709,"column_start":28,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2350},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":101822,"byte_end":101838,"line_start":40,"line_end":40,"column_start":33,"column_end":49},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2408},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport/channel.rs","byte_start":102096,"byte_end":102112,"line_start":48,"line_end":48,"column_start":41,"column_end":57},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2408},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100434,"byte_end":100440,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":808}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100468,"byte_end":100472,"line_start":22,"line_end":22,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":26,"index":17},"to":{"krate":0,"index":808}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/transport.rs","byte_start":100573,"byte_end":100574,"line_start":26,"line_end":26,"column_start":59,"column_end":60},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":808}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/util.rs","byte_start":105137,"byte_end":105147,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc/util.rs","byte_start":105521,"byte_end":105528,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15355,"byte_end":15360,"line_start":108,"line_end":108,"column_start":32,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":15484,"byte_end":15491,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/rpc.rs","byte_start":16028,"byte_end":16034,"line_start":133,"line_end":133,"column_start":28,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":915},"to":{"krate":0,"index":917}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109521,"byte_end":109530,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":109774,"byte_end":109783,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2814},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":110704,"byte_end":110713,"line_start":56,"line_end":56,"column_start":63,"column_end":72},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2814},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":112394,"byte_end":112403,"line_start":109,"line_end":109,"column_start":53,"column_end":62},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2814},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113178,"byte_end":113187,"line_start":138,"line_end":138,"column_start":48,"column_end":57},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2814},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":113264,"byte_end":113273,"line_start":141,"line_end":141,"column_start":33,"column_end":42},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114080,"byte_end":114087,"line_start":162,"line_end":162,"column_start":56,"column_end":63},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":114711,"byte_end":114718,"line_start":178,"line_end":178,"column_start":38,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":116908,"byte_end":116916,"line_start":243,"line_end":243,"column_start":42,"column_end":50},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/serde_transport.rs","byte_start":117521,"byte_end":117529,"line_start":260,"line_end":260,"column_start":53,"column_end":61},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2976},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124366,"byte_end":124373,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124690,"byte_end":124697,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":124989,"byte_end":124995,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125198,"byte_end":125205,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3075},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.24.1/src/trace.rs","byte_start":125357,"byte_end":125363,"line_start":92,"line_end":92,"column_start":23,"column_end":29},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3120},"to":{"krate":2,"index":9685}}]}