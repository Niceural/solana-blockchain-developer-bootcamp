{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3","program":"/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=8acc46fd95dea81e","-C","extra-filename=-8acc46fd95dea81e","--out-dir","/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","-L","dependency=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","--extern","bytes=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libbytes-57de1f6d7c9c6f6c.rmeta","--extern","futures_core=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfutures_core-60458e76f3df90f4.rmeta","--extern","futures_sink=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfutures_sink-7655938588db75ff.rmeta","--extern","pin_project_lite=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libpin_project_lite-ea3d2cf69622cc1e.rmeta","--extern","tokio=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio-4e7e42baf18a9f6f.rmeta","--extern","tracing=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtracing-810e6865aff41790.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio_util-8acc46fd95dea81e.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12900921766754656287,0]},"crate_root":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src","external_crates":[{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[10576276462658899617,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[10054928464665497603,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[13429073610692212669,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[6400943293924493477,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[13563622309219480755,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[15550368681150151641,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[10087055156891833200,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":28,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[11407690004646896535,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[12216327775942977704,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":31,"id":{"name":"log","disambiguator":[14764303238413466947,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[11709949483292364592,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[18281702906408608498,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[9005281142719050523,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[16956519403747381332,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":36,"id":{"name":"socket2","disambiguator":[9157724399368862976,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":37,"id":{"name":"num_cpus","disambiguator":[17727572680058643201,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[17686152838710020509,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","num":39,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":40,"id":{"name":"tracing","disambiguator":[13611074456730854276,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":41,"id":{"name":"tracing_core","disambiguator":[15136083852490091090,0]}}],"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231063,"byte_end":16231073,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231112,"byte_end":16231119,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231158,"byte_end":16231165,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231327,"byte_end":16231333,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231335,"byte_end":16231346,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231394,"byte_end":16231404,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231453,"byte_end":16231464,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231526,"byte_end":16231546,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231548,"byte_end":16231573,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231622,"byte_end":16231632,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231634,"byte_end":16231649,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231714,"byte_end":16231731,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231733,"byte_end":16231755,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220791,"byte_end":16220844,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220845,"byte_end":16220848,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220849,"byte_end":16220924,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220925,"byte_end":16220990,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220991,"byte_end":16220994,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16220995,"byte_end":16221075,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221076,"byte_end":16221151,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221152,"byte_end":16221200,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221201,"byte_end":16221204,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221205,"byte_end":16221228,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221229,"byte_end":16221232,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221233,"byte_end":16221312,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221313,"byte_end":16221392,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221393,"byte_end":16221464,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221465,"byte_end":16221535,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221536,"byte_end":16221614,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221615,"byte_end":16221691,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221692,"byte_end":16221725,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221726,"byte_end":16221729,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221730,"byte_end":16221810,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221811,"byte_end":16221891,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221892,"byte_end":16221942,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221943,"byte_end":16221946,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221947,"byte_end":16221998,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16221999,"byte_end":16222048,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222049,"byte_end":16222100,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222101,"byte_end":16222104,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222105,"byte_end":16222170,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222171,"byte_end":16222174,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222175,"byte_end":16222252,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222253,"byte_end":16222294,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222295,"byte_end":16222298,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222299,"byte_end":16222379,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222380,"byte_end":16222459,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222460,"byte_end":16222538,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222539,"byte_end":16222618,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222619,"byte_end":16222633,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222634,"byte_end":16222637,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222638,"byte_end":16222717,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222718,"byte_end":16222797,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222798,"byte_end":16222815,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222816,"byte_end":16222819,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222820,"byte_end":16222897,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222898,"byte_end":16222977,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16222978,"byte_end":16223055,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223056,"byte_end":16223126,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223127,"byte_end":16223176,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223177,"byte_end":16223180,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223181,"byte_end":16223194,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223195,"byte_end":16223227,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223228,"byte_end":16223295,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223296,"byte_end":16223410,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223411,"byte_end":16223448,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223449,"byte_end":16223510,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223511,"byte_end":16223560,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223561,"byte_end":16223564,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223565,"byte_end":16223606,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223607,"byte_end":16223617,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223618,"byte_end":16223702,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223703,"byte_end":16223759,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223760,"byte_end":16223763,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223764,"byte_end":16223785,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223786,"byte_end":16223853,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223854,"byte_end":16223882,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223883,"byte_end":16223896,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223897,"byte_end":16223915,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223916,"byte_end":16223925,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223926,"byte_end":16223929,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223930,"byte_end":16223989,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16223990,"byte_end":16224014,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224015,"byte_end":16224024,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224025,"byte_end":16224030,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224031,"byte_end":16224039,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224040,"byte_end":16224047,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224048,"byte_end":16224122,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224123,"byte_end":16224126,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224127,"byte_end":16224149,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224150,"byte_end":16224153,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224154,"byte_end":16224231,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224232,"byte_end":16224308,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224309,"byte_end":16224388,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224389,"byte_end":16224443,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224444,"byte_end":16224447,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224448,"byte_end":16224492,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224493,"byte_end":16224500,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224501,"byte_end":16224536,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224537,"byte_end":16224568,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224569,"byte_end":16224572,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224573,"byte_end":16224602,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224603,"byte_end":16224606,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224607,"byte_end":16224646,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224647,"byte_end":16224650,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224651,"byte_end":16224689,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224690,"byte_end":16224717,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224718,"byte_end":16224754,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224755,"byte_end":16224758,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224759,"byte_end":16224777,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224778,"byte_end":16224800,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224801,"byte_end":16224831,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224832,"byte_end":16224886,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224887,"byte_end":16224917,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224918,"byte_end":16224975,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16224976,"byte_end":16225008,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225009,"byte_end":16225022,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225023,"byte_end":16225026,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225027,"byte_end":16225061,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225062,"byte_end":16225106,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225107,"byte_end":16225159,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225160,"byte_end":16225227,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225228,"byte_end":16225231,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225232,"byte_end":16225306,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225307,"byte_end":16225373,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225374,"byte_end":16225403,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225404,"byte_end":16225451,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225452,"byte_end":16225504,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225505,"byte_end":16225576,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225577,"byte_end":16225596,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225597,"byte_end":16225610,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225611,"byte_end":16225614,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225615,"byte_end":16225654,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225655,"byte_end":16225710,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225711,"byte_end":16225729,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225730,"byte_end":16225806,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225807,"byte_end":16225873,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225874,"byte_end":16225926,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225927,"byte_end":16225930,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16225931,"byte_end":16226011,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226012,"byte_end":16226037,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226038,"byte_end":16226070,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226071,"byte_end":16226084,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226085,"byte_end":16226088,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226089,"byte_end":16226161,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226162,"byte_end":16226188,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226189,"byte_end":16226240,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226241,"byte_end":16226277,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226278,"byte_end":16226281,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226282,"byte_end":16226360,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226361,"byte_end":16226404,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226405,"byte_end":16226452,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226453,"byte_end":16226489,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226490,"byte_end":16226534,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226535,"byte_end":16226591,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226592,"byte_end":16226640,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226641,"byte_end":16226663,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226664,"byte_end":16226682,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226683,"byte_end":16226696,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226697,"byte_end":16226706,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226707,"byte_end":16226712,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226713,"byte_end":16226720,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226721,"byte_end":16226724,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226725,"byte_end":16226748,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226749,"byte_end":16226752,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226753,"byte_end":16226831,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226832,"byte_end":16226905,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226906,"byte_end":16226982,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16226983,"byte_end":16227063,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227064,"byte_end":16227080,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227081,"byte_end":16227084,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227085,"byte_end":16227165,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227166,"byte_end":16227245,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227246,"byte_end":16227326,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227327,"byte_end":16227399,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227400,"byte_end":16227403,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227404,"byte_end":16227481,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227482,"byte_end":16227560,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227561,"byte_end":16227634,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227635,"byte_end":16227701,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227702,"byte_end":16227705,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227706,"byte_end":16227719,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227720,"byte_end":16227753,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227754,"byte_end":16227788,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227789,"byte_end":16227826,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227827,"byte_end":16227894,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227895,"byte_end":16227930,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227931,"byte_end":16227992,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16227993,"byte_end":16228039,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228040,"byte_end":16228101,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228102,"byte_end":16228105,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228106,"byte_end":16228134,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228135,"byte_end":16228138,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228139,"byte_end":16228180,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228181,"byte_end":16228191,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228192,"byte_end":16228216,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228217,"byte_end":16228291,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228292,"byte_end":16228334,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228335,"byte_end":16228349,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228350,"byte_end":16228407,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228408,"byte_end":16228457,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228458,"byte_end":16228472,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228473,"byte_end":16228510,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228511,"byte_end":16228562,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228563,"byte_end":16228609,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228610,"byte_end":16228640,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228641,"byte_end":16228655,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228656,"byte_end":16228665,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228666,"byte_end":16228671,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228672,"byte_end":16228679,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228680,"byte_end":16228687,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228688,"byte_end":16228763,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228764,"byte_end":16228837,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228838,"byte_end":16228880,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228881,"byte_end":16228884,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228885,"byte_end":16228907,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228908,"byte_end":16228911,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228912,"byte_end":16228989,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16228990,"byte_end":16229066,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229067,"byte_end":16229143,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229144,"byte_end":16229167,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229168,"byte_end":16229171,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229172,"byte_end":16229217,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229218,"byte_end":16229225,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229226,"byte_end":16229261,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229262,"byte_end":16229286,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229287,"byte_end":16229290,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229291,"byte_end":16229320,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229321,"byte_end":16229324,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229325,"byte_end":16229364,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229365,"byte_end":16229368,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229369,"byte_end":16229415,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229416,"byte_end":16229452,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229453,"byte_end":16229456,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229457,"byte_end":16229548,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229549,"byte_end":16229623,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229624,"byte_end":16229646,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229647,"byte_end":16229680,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229681,"byte_end":16229728,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229729,"byte_end":16229781,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229782,"byte_end":16229857,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229858,"byte_end":16229877,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229878,"byte_end":16229891,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229892,"byte_end":16229895,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229896,"byte_end":16229948,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16229949,"byte_end":16230026,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230027,"byte_end":16230091,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230092,"byte_end":16230095,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230096,"byte_end":16230139,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230140,"byte_end":16230180,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230181,"byte_end":16230184,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230185,"byte_end":16230242,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230243,"byte_end":16230289,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230290,"byte_end":16230341,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230342,"byte_end":16230360,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230361,"byte_end":16230370,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230371,"byte_end":16230376,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230377,"byte_end":16230384,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230385,"byte_end":16230388,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230389,"byte_end":16230428,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230429,"byte_end":16230470,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230471,"byte_end":16230507,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230508,"byte_end":16230540,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230541,"byte_end":16230637,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230638,"byte_end":16230689,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230690,"byte_end":16230743,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230744,"byte_end":16230787,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230788,"byte_end":16230832,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230833,"byte_end":16230881,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230882,"byte_end":16230930,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230931,"byte_end":16230977,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16230978,"byte_end":16231017,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233041,"byte_end":16233051,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16231884,"byte_end":16231969,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16231970,"byte_end":16231973,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16231974,"byte_end":16232012,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232013,"byte_end":16232051,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232052,"byte_end":16232055,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232056,"byte_end":16232069,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232070,"byte_end":16232073,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232074,"byte_end":16232155,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232156,"byte_end":16232159,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232160,"byte_end":16232199,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232200,"byte_end":16232233,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232234,"byte_end":16232263,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232264,"byte_end":16232267,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232268,"byte_end":16232275,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232276,"byte_end":16232294,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232295,"byte_end":16232325,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232326,"byte_end":16232350,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232351,"byte_end":16232358,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232359,"byte_end":16232388,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232389,"byte_end":16232441,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232442,"byte_end":16232445,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232446,"byte_end":16232464,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232465,"byte_end":16232482,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232483,"byte_end":16232563,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232564,"byte_end":16232598,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232599,"byte_end":16232652,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232653,"byte_end":16232664,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232665,"byte_end":16232672,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232673,"byte_end":16232678,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232679,"byte_end":16232726,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232727,"byte_end":16232780,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232781,"byte_end":16232839,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232840,"byte_end":16232919,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232920,"byte_end":16232932,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232933,"byte_end":16232940,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232941,"byte_end":16232948,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16232949,"byte_end":16232952,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233153,"byte_end":16233156,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233080,"byte_end":16233141,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235394,"byte_end":16235401,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234108,"byte_end":16234143,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234144,"byte_end":16234147,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234148,"byte_end":16234217,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234218,"byte_end":16234297,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234298,"byte_end":16234370,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234371,"byte_end":16234395,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234396,"byte_end":16234399,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234400,"byte_end":16234468,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234469,"byte_end":16234546,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234547,"byte_end":16234608,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234609,"byte_end":16234612,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234613,"byte_end":16234674,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234675,"byte_end":16234737,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234738,"byte_end":16234741,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234742,"byte_end":16234805,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234806,"byte_end":16234869,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234870,"byte_end":16234949,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16234950,"byte_end":16235024,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235025,"byte_end":16235044,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235045,"byte_end":16235048,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235049,"byte_end":16235117,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235118,"byte_end":16235180,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235181,"byte_end":16235256,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235257,"byte_end":16235297,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235298,"byte_end":16235301,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235302,"byte_end":16235338,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235339,"byte_end":16235383,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235449,"byte_end":16235453,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235408,"byte_end":16235439,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236219,"byte_end":16236224,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235460,"byte_end":16235512,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235517,"byte_end":16235520,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235525,"byte_end":16235594,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235599,"byte_end":16235669,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235674,"byte_end":16235720,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235725,"byte_end":16235728,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235733,"byte_end":16235809,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235814,"byte_end":16235889,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235894,"byte_end":16235969,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16235974,"byte_end":16236014,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236019,"byte_end":16236022,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236027,"byte_end":16236101,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236106,"byte_end":16236152,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236157,"byte_end":16236160,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236165,"byte_end":16236209,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239160,"byte_end":16239166,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236248,"byte_end":16236313,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236318,"byte_end":16236321,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236326,"byte_end":16236400,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236405,"byte_end":16236477,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236482,"byte_end":16236555,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236560,"byte_end":16236603,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236608,"byte_end":16236611,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236616,"byte_end":16236689,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236694,"byte_end":16236757,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236762,"byte_end":16236837,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236842,"byte_end":16236917,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236922,"byte_end":16236945,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236950,"byte_end":16236953,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16236958,"byte_end":16237030,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237035,"byte_end":16237109,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237114,"byte_end":16237184,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237189,"byte_end":16237192,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237197,"byte_end":16237265,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237270,"byte_end":16237341,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237346,"byte_end":16237426,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237431,"byte_end":16237443,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237448,"byte_end":16237451,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237456,"byte_end":16237526,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237531,"byte_end":16237606,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237611,"byte_end":16237648,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237653,"byte_end":16237656,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237661,"byte_end":16237697,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237702,"byte_end":16237746,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237751,"byte_end":16237754,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237759,"byte_end":16237782,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237787,"byte_end":16237790,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237795,"byte_end":16237869,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237874,"byte_end":16237948,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16237953,"byte_end":16238006,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238011,"byte_end":16238014,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238019,"byte_end":16238090,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238095,"byte_end":16238165,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238170,"byte_end":16238186,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238191,"byte_end":16238194,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238199,"byte_end":16238212,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238217,"byte_end":16238235,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238240,"byte_end":16238245,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238250,"byte_end":16238276,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238281,"byte_end":16238318,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238323,"byte_end":16238328,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238333,"byte_end":16238354,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238359,"byte_end":16238364,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238369,"byte_end":16238399,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238404,"byte_end":16238418,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238423,"byte_end":16238454,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238459,"byte_end":16238492,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238497,"byte_end":16238500,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238505,"byte_end":16238598,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238603,"byte_end":16238621,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238626,"byte_end":16238629,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238634,"byte_end":16238706,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238711,"byte_end":16238771,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238776,"byte_end":16238828,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238833,"byte_end":16238895,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238900,"byte_end":16238967,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238972,"byte_end":16238975,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16238980,"byte_end":16239008,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239013,"byte_end":16239022,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239027,"byte_end":16239032,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239037,"byte_end":16239044,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239049,"byte_end":16239052,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239057,"byte_end":16239126,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239131,"byte_end":16239152,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240332,"byte_end":16240342,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239247,"byte_end":16239319,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239324,"byte_end":16239373,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239378,"byte_end":16239381,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239386,"byte_end":16239454,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239459,"byte_end":16239526,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239531,"byte_end":16239599,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239604,"byte_end":16239680,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239685,"byte_end":16239751,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239756,"byte_end":16239759,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239764,"byte_end":16239832,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239837,"byte_end":16239912,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239917,"byte_end":16239992,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16239997,"byte_end":16240069,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240074,"byte_end":16240116,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240121,"byte_end":16240124,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240129,"byte_end":16240204,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240209,"byte_end":16240287,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240292,"byte_end":16240324,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241950,"byte_end":16241956,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240760,"byte_end":16240840,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240845,"byte_end":16240921,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240926,"byte_end":16240929,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16240934,"byte_end":16241009,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241014,"byte_end":16241084,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241089,"byte_end":16241160,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241165,"byte_end":16241237,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241242,"byte_end":16241300,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241305,"byte_end":16241308,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241313,"byte_end":16241382,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241387,"byte_end":16241462,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241467,"byte_end":16241543,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241548,"byte_end":16241570,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241575,"byte_end":16241578,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241583,"byte_end":16241656,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241661,"byte_end":16241734,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241739,"byte_end":16241815,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241820,"byte_end":16241823,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241828,"byte_end":16241864,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241869,"byte_end":16241901,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16241906,"byte_end":16241942,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242290,"byte_end":16242297,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242135,"byte_end":16242207,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242208,"byte_end":16242228,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242229,"byte_end":16242232,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242233,"byte_end":16242279,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242562,"byte_end":16242567,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242310,"byte_end":16242342,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242347,"byte_end":16242350,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242355,"byte_end":16242432,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242437,"byte_end":16242493,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242498,"byte_end":16242501,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242506,"byte_end":16242552,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242918,"byte_end":16242924,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242591,"byte_end":16242636,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242641,"byte_end":16242644,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242649,"byte_end":16242723,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242728,"byte_end":16242808,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242813,"byte_end":16242851,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242856,"byte_end":16242859,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16242864,"byte_end":16242910,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256564,"byte_end":16256570,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258343,"byte_end":16258346,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256712,"byte_end":16256792,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256797,"byte_end":16256878,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256883,"byte_end":16256886,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256891,"byte_end":16256966,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256971,"byte_end":16257041,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257046,"byte_end":16257115,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257120,"byte_end":16257192,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257197,"byte_end":16257255,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257260,"byte_end":16257263,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257268,"byte_end":16257339,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257344,"byte_end":16257421,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257426,"byte_end":16257502,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257507,"byte_end":16257529,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257534,"byte_end":16257537,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257542,"byte_end":16257615,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257620,"byte_end":16257693,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257698,"byte_end":16257774,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257779,"byte_end":16257782,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257787,"byte_end":16257863,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257868,"byte_end":16257944,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16257949,"byte_end":16258024,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258029,"byte_end":16258064,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258069,"byte_end":16258072,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258077,"byte_end":16258113,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258118,"byte_end":16258150,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258155,"byte_end":16258192,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258197,"byte_end":16258235,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258240,"byte_end":16258331,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259954,"byte_end":16259967,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258559,"byte_end":16258639,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258644,"byte_end":16258725,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258730,"byte_end":16258779,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258784,"byte_end":16258787,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258792,"byte_end":16258867,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258872,"byte_end":16258942,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16258947,"byte_end":16259016,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259021,"byte_end":16259093,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259098,"byte_end":16259156,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259161,"byte_end":16259164,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259169,"byte_end":16259240,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259245,"byte_end":16259322,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259327,"byte_end":16259403,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259408,"byte_end":16259430,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259435,"byte_end":16259438,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259443,"byte_end":16259516,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259521,"byte_end":16259594,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259599,"byte_end":16259675,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259680,"byte_end":16259683,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259688,"byte_end":16259724,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259729,"byte_end":16259761,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259766,"byte_end":16259803,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259808,"byte_end":16259846,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16259851,"byte_end":16259942,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262114,"byte_end":16262124,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260537,"byte_end":16260617,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260622,"byte_end":16260703,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260708,"byte_end":16260711,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260716,"byte_end":16260791,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260796,"byte_end":16260866,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260871,"byte_end":16260942,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260947,"byte_end":16261019,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261024,"byte_end":16261082,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261087,"byte_end":16261090,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261095,"byte_end":16261166,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261171,"byte_end":16261248,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261253,"byte_end":16261329,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261334,"byte_end":16261356,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261361,"byte_end":16261364,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261369,"byte_end":16261448,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261453,"byte_end":16261530,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261535,"byte_end":16261538,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261543,"byte_end":16261616,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261621,"byte_end":16261694,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261699,"byte_end":16261775,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261780,"byte_end":16261783,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261788,"byte_end":16261824,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261829,"byte_end":16261861,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261866,"byte_end":16261904,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261909,"byte_end":16261947,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16261952,"byte_end":16262006,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262011,"byte_end":16262102,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262759,"byte_end":16262766,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262476,"byte_end":16262539,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262544,"byte_end":16262557,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262562,"byte_end":16262565,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262570,"byte_end":16262645,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262650,"byte_end":16262720,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262725,"byte_end":16262747,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263110,"byte_end":16263117,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262819,"byte_end":16262890,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262895,"byte_end":16262908,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262913,"byte_end":16262916,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16262921,"byte_end":16262996,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263001,"byte_end":16263071,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263076,"byte_end":16263098,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263480,"byte_end":16263491,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263182,"byte_end":16263260,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263265,"byte_end":16263278,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263283,"byte_end":16263286,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263291,"byte_end":16263366,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263371,"byte_end":16263441,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263446,"byte_end":16263468,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263838,"byte_end":16263843,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263587,"byte_end":16263645,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263650,"byte_end":16263663,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263668,"byte_end":16263671,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263676,"byte_end":16263750,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263755,"byte_end":16263826,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264155,"byte_end":16264164,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263896,"byte_end":16263962,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263967,"byte_end":16263980,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263985,"byte_end":16263988,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16263993,"byte_end":16264067,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264072,"byte_end":16264143,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264501,"byte_end":16264510,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264229,"byte_end":16264297,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264302,"byte_end":16264326,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264331,"byte_end":16264334,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264339,"byte_end":16264413,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264418,"byte_end":16264489,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265201,"byte_end":16265214,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16264942,"byte_end":16265008,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265013,"byte_end":16265026,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265031,"byte_end":16265034,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265039,"byte_end":16265113,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265118,"byte_end":16265189,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265360,"byte_end":16265371,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265305,"byte_end":16265348,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265506,"byte_end":16265521,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265443,"byte_end":16265494,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265661,"byte_end":16265673,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265605,"byte_end":16265649,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265810,"byte_end":16265826,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265746,"byte_end":16265798,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266176,"byte_end":16266186,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265911,"byte_end":16265974,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265979,"byte_end":16265982,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16265987,"byte_end":16266062,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266067,"byte_end":16266137,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266142,"byte_end":16266164,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266558,"byte_end":16266568,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266236,"byte_end":16266310,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266315,"byte_end":16266356,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266361,"byte_end":16266364,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266369,"byte_end":16266444,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266449,"byte_end":16266519,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266524,"byte_end":16266546,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268542,"byte_end":16268553,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268227,"byte_end":16268298,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268299,"byte_end":16268371,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268372,"byte_end":16268432,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268433,"byte_end":16268436,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268437,"byte_end":16268473,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268491,"byte_end":16268530,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268639,"byte_end":16268641,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268566,"byte_end":16268630,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268673,"byte_end":16268678,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268651,"byte_end":16268664,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268743,"byte_end":16268751,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268688,"byte_end":16268734,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268838,"byte_end":16268847,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16268768,"byte_end":16268829,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16269080,"byte_end":16269083,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16269028,"byte_end":16269068,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16269812,"byte_end":16269822,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270073,"byte_end":16270076,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270005,"byte_end":16270061,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270424,"byte_end":16270437,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270308,"byte_end":16270390,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270395,"byte_end":16270412,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271191,"byte_end":16271198,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270904,"byte_end":16270967,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270972,"byte_end":16270989,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270994,"byte_end":16270997,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271002,"byte_end":16271077,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271082,"byte_end":16271152,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271157,"byte_end":16271179,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271546,"byte_end":16271553,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271251,"byte_end":16271322,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271327,"byte_end":16271344,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271349,"byte_end":16271352,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271357,"byte_end":16271432,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271437,"byte_end":16271507,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271512,"byte_end":16271534,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271920,"byte_end":16271931,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271618,"byte_end":16271696,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271701,"byte_end":16271718,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271723,"byte_end":16271726,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271731,"byte_end":16271806,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271811,"byte_end":16271881,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16271886,"byte_end":16271908,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272296,"byte_end":16272306,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272027,"byte_end":16272094,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272099,"byte_end":16272102,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272107,"byte_end":16272182,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272187,"byte_end":16272257,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272262,"byte_end":16272284,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272418,"byte_end":16272425,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272356,"byte_end":16272406,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272548,"byte_end":16272559,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272478,"byte_end":16272536,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272724,"byte_end":16272735,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272624,"byte_end":16272683,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16272688,"byte_end":16272712,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273251,"byte_end":16273266,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273181,"byte_end":16273239,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273412,"byte_end":16273423,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273357,"byte_end":16273400,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273553,"byte_end":16273568,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273490,"byte_end":16273541,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16275669,"byte_end":16275680,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16275887,"byte_end":16275890,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16275818,"byte_end":16275875,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276448,"byte_end":16276455,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276160,"byte_end":16276223,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276228,"byte_end":16276246,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276251,"byte_end":16276254,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276259,"byte_end":16276334,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276339,"byte_end":16276409,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276414,"byte_end":16276436,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276804,"byte_end":16276811,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276508,"byte_end":16276579,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276584,"byte_end":16276602,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276607,"byte_end":16276610,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276615,"byte_end":16276690,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276695,"byte_end":16276765,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276770,"byte_end":16276792,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277179,"byte_end":16277190,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276876,"byte_end":16276954,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276959,"byte_end":16276977,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276982,"byte_end":16276985,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276990,"byte_end":16277065,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277070,"byte_end":16277140,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277145,"byte_end":16277167,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277556,"byte_end":16277566,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277286,"byte_end":16277354,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277359,"byte_end":16277362,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277367,"byte_end":16277442,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277447,"byte_end":16277517,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277522,"byte_end":16277544,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277678,"byte_end":16277685,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277616,"byte_end":16277666,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277808,"byte_end":16277819,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277738,"byte_end":16277796,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277985,"byte_end":16277996,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277884,"byte_end":16277944,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16277949,"byte_end":16277973,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278514,"byte_end":16278529,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278444,"byte_end":16278502,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278676,"byte_end":16278688,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278620,"byte_end":16278664,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278819,"byte_end":16278835,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278755,"byte_end":16278807,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280362,"byte_end":16280414,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280415,"byte_end":16280418,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280419,"byte_end":16280489,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280490,"byte_end":16280548,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280549,"byte_end":16280621,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280622,"byte_end":16280692,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280693,"byte_end":16280760,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280761,"byte_end":16280764,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280765,"byte_end":16280786,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280787,"byte_end":16280790,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280791,"byte_end":16280866,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280867,"byte_end":16280938,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16280939,"byte_end":16281010,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281011,"byte_end":16281081,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281082,"byte_end":16281122,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281123,"byte_end":16281126,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281127,"byte_end":16281134,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281135,"byte_end":16281178,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281179,"byte_end":16281237,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281238,"byte_end":16281241,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281242,"byte_end":16281297,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281298,"byte_end":16281340,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281341,"byte_end":16281346,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281347,"byte_end":16281399,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281400,"byte_end":16281405,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281406,"byte_end":16281428,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281429,"byte_end":16281436,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281437,"byte_end":16281440,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281441,"byte_end":16281513,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281514,"byte_end":16281585,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281586,"byte_end":16281605,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281606,"byte_end":16281609,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281610,"byte_end":16281621,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281622,"byte_end":16281671,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281672,"byte_end":16281721,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281722,"byte_end":16281771,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281772,"byte_end":16281779,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281780,"byte_end":16281783,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281784,"byte_end":16281822,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281823,"byte_end":16281826,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281827,"byte_end":16281834,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281835,"byte_end":16281878,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281879,"byte_end":16281937,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281938,"byte_end":16281941,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281942,"byte_end":16281967,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281968,"byte_end":16281989,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281990,"byte_end":16281993,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16281994,"byte_end":16282070,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282071,"byte_end":16282080,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282081,"byte_end":16282123,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282124,"byte_end":16282129,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282130,"byte_end":16282203,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282204,"byte_end":16282251,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282252,"byte_end":16282255,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282256,"byte_end":16282293,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282294,"byte_end":16282308,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282309,"byte_end":16282314,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282315,"byte_end":16282322,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282323,"byte_end":16282326,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282327,"byte_end":16282369,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282370,"byte_end":16282373,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282374,"byte_end":16282385,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282386,"byte_end":16282425,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282426,"byte_end":16282465,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282466,"byte_end":16282505,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282506,"byte_end":16282513,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282514,"byte_end":16282517,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282518,"byte_end":16282532,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282533,"byte_end":16282536,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282537,"byte_end":16282612,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282613,"byte_end":16282686,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282687,"byte_end":16282753,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282754,"byte_end":16282823,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282824,"byte_end":16282889,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282890,"byte_end":16282893,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282894,"byte_end":16282910,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282911,"byte_end":16282914,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282915,"byte_end":16282991,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16282992,"byte_end":16283033,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283034,"byte_end":16283037,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283038,"byte_end":16283045,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283046,"byte_end":16283077,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283078,"byte_end":16283128,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283129,"byte_end":16283170,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283171,"byte_end":16283206,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283207,"byte_end":16283255,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283256,"byte_end":16283291,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283292,"byte_end":16283340,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283341,"byte_end":16283390,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283391,"byte_end":16283413,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283414,"byte_end":16283421,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283422,"byte_end":16283444,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283445,"byte_end":16283452,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283453,"byte_end":16283456,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283457,"byte_end":16283505,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283506,"byte_end":16283509,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283510,"byte_end":16283521,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283522,"byte_end":16283574,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283575,"byte_end":16283640,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283641,"byte_end":16283706,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283707,"byte_end":16283772,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283773,"byte_end":16283780,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283781,"byte_end":16283784,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283785,"byte_end":16283861,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283862,"byte_end":16283936,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16283937,"byte_end":16284009,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284010,"byte_end":16284086,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284087,"byte_end":16284129,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284130,"byte_end":16284133,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284134,"byte_end":16284150,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284151,"byte_end":16284154,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284155,"byte_end":16284230,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284231,"byte_end":16284272,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284273,"byte_end":16284276,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284277,"byte_end":16284284,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284285,"byte_end":16284316,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284317,"byte_end":16284367,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284368,"byte_end":16284409,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284410,"byte_end":16284445,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284446,"byte_end":16284494,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284495,"byte_end":16284530,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284531,"byte_end":16284579,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284580,"byte_end":16284639,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284640,"byte_end":16284662,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284663,"byte_end":16284670,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284671,"byte_end":16284693,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284694,"byte_end":16284701,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284702,"byte_end":16284705,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284706,"byte_end":16284754,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284755,"byte_end":16284758,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284759,"byte_end":16284770,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284771,"byte_end":16284820,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284821,"byte_end":16284875,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284876,"byte_end":16284930,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284931,"byte_end":16284985,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284986,"byte_end":16284993,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284994,"byte_end":16284997,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16284998,"byte_end":16285071,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285072,"byte_end":16285139,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285140,"byte_end":16285143,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285144,"byte_end":16285160,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285161,"byte_end":16285164,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285165,"byte_end":16285241,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285242,"byte_end":16285314,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285315,"byte_end":16285354,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285355,"byte_end":16285358,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285359,"byte_end":16285366,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285367,"byte_end":16285398,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285399,"byte_end":16285449,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285450,"byte_end":16285491,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285492,"byte_end":16285527,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285528,"byte_end":16285576,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285577,"byte_end":16285612,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285613,"byte_end":16285660,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285661,"byte_end":16285681,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285682,"byte_end":16285704,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285705,"byte_end":16285712,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285713,"byte_end":16285735,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285736,"byte_end":16285743,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285744,"byte_end":16285747,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285748,"byte_end":16285796,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285797,"byte_end":16285800,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285801,"byte_end":16285812,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285813,"byte_end":16285865,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285866,"byte_end":16285931,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285932,"byte_end":16285997,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16285998,"byte_end":16286063,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286064,"byte_end":16286071,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286072,"byte_end":16286075,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286076,"byte_end":16286148,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286149,"byte_end":16286224,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286225,"byte_end":16286297,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286298,"byte_end":16286374,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286375,"byte_end":16286448,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286449,"byte_end":16286452,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286453,"byte_end":16286469,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286470,"byte_end":16286473,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286474,"byte_end":16286548,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286549,"byte_end":16286616,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286617,"byte_end":16286620,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286621,"byte_end":16286628,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286629,"byte_end":16286660,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286661,"byte_end":16286711,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286712,"byte_end":16286753,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286754,"byte_end":16286789,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286790,"byte_end":16286838,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286839,"byte_end":16286870,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286871,"byte_end":16286919,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286920,"byte_end":16286940,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286941,"byte_end":16286963,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286964,"byte_end":16286971,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286972,"byte_end":16286994,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16286995,"byte_end":16287002,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287003,"byte_end":16287006,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287007,"byte_end":16287055,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287056,"byte_end":16287059,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287060,"byte_end":16287071,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287072,"byte_end":16287098,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287099,"byte_end":16287144,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287145,"byte_end":16287190,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287191,"byte_end":16287236,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287237,"byte_end":16287240,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287241,"byte_end":16287269,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287270,"byte_end":16287315,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287316,"byte_end":16287361,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287362,"byte_end":16287407,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287408,"byte_end":16287415,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287416,"byte_end":16287419,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287420,"byte_end":16287492,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287493,"byte_end":16287569,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287570,"byte_end":16287640,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287641,"byte_end":16287710,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287711,"byte_end":16287748,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287749,"byte_end":16287752,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287753,"byte_end":16287827,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287828,"byte_end":16287882,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287883,"byte_end":16287886,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287887,"byte_end":16287903,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287904,"byte_end":16287907,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287908,"byte_end":16287981,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16287982,"byte_end":16288058,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288059,"byte_end":16288133,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288134,"byte_end":16288147,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288148,"byte_end":16288151,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288152,"byte_end":16288159,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288160,"byte_end":16288191,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288192,"byte_end":16288242,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288243,"byte_end":16288284,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288285,"byte_end":16288320,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288321,"byte_end":16288370,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288371,"byte_end":16288406,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288407,"byte_end":16288455,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288456,"byte_end":16288500,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288501,"byte_end":16288523,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288524,"byte_end":16288531,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288532,"byte_end":16288554,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288555,"byte_end":16288562,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288563,"byte_end":16288566,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288567,"byte_end":16288615,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288616,"byte_end":16288619,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288620,"byte_end":16288631,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288632,"byte_end":16288658,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288659,"byte_end":16288709,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288710,"byte_end":16288760,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288761,"byte_end":16288811,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288812,"byte_end":16288815,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288816,"byte_end":16288836,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288837,"byte_end":16288867,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288868,"byte_end":16288898,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288899,"byte_end":16288929,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288930,"byte_end":16288937,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288938,"byte_end":16288941,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16288942,"byte_end":16289015,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289016,"byte_end":16289091,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289092,"byte_end":16289164,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289165,"byte_end":16289203,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289204,"byte_end":16289207,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289208,"byte_end":16289282,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289283,"byte_end":16289359,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289360,"byte_end":16289433,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289434,"byte_end":16289462,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289463,"byte_end":16289466,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289467,"byte_end":16289483,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289484,"byte_end":16289487,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289488,"byte_end":16289561,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289562,"byte_end":16289638,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289639,"byte_end":16289713,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289714,"byte_end":16289786,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289787,"byte_end":16289798,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289799,"byte_end":16289802,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289803,"byte_end":16289810,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289811,"byte_end":16289842,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289843,"byte_end":16289893,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289894,"byte_end":16289935,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289936,"byte_end":16289971,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16289972,"byte_end":16290021,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290022,"byte_end":16290057,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290058,"byte_end":16290123,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290124,"byte_end":16290144,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290145,"byte_end":16290167,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290168,"byte_end":16290175,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290176,"byte_end":16290183,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290184,"byte_end":16290187,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290188,"byte_end":16290236,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290237,"byte_end":16290240,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290241,"byte_end":16290252,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290253,"byte_end":16290279,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290280,"byte_end":16290330,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290331,"byte_end":16290381,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290382,"byte_end":16290432,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290433,"byte_end":16290436,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290437,"byte_end":16290457,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290458,"byte_end":16290488,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290489,"byte_end":16290519,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290520,"byte_end":16290550,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290551,"byte_end":16290558,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290559,"byte_end":16290562,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290563,"byte_end":16290636,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290637,"byte_end":16290711,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290712,"byte_end":16290786,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290787,"byte_end":16290860,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290861,"byte_end":16290937,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290938,"byte_end":16290971,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290972,"byte_end":16290975,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290976,"byte_end":16290992,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290993,"byte_end":16290996,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16290997,"byte_end":16291071,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291072,"byte_end":16291139,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291140,"byte_end":16291143,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291144,"byte_end":16291151,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291152,"byte_end":16291183,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291184,"byte_end":16291234,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291235,"byte_end":16291276,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291277,"byte_end":16291312,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291313,"byte_end":16291361,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291362,"byte_end":16291393,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291394,"byte_end":16291441,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291442,"byte_end":16291488,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291489,"byte_end":16291511,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291512,"byte_end":16291519,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291520,"byte_end":16291542,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291543,"byte_end":16291550,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291551,"byte_end":16291554,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291555,"byte_end":16291603,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291604,"byte_end":16291607,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291608,"byte_end":16291619,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291620,"byte_end":16291676,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291677,"byte_end":16291738,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291739,"byte_end":16291800,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291801,"byte_end":16291862,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291863,"byte_end":16291870,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291871,"byte_end":16291874,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291875,"byte_end":16291949,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291950,"byte_end":16291970,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291971,"byte_end":16291974,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291975,"byte_end":16291989,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291990,"byte_end":16291993,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16291994,"byte_end":16292069,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292070,"byte_end":16292142,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292143,"byte_end":16292211,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292212,"byte_end":16292288,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292289,"byte_end":16292330,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292331,"byte_end":16292334,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292335,"byte_end":16292405,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292406,"byte_end":16292424,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292425,"byte_end":16292428,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292429,"byte_end":16292436,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292437,"byte_end":16292469,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292470,"byte_end":16292520,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292521,"byte_end":16292565,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292566,"byte_end":16292579,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292580,"byte_end":16292615,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292616,"byte_end":16292651,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292652,"byte_end":16292675,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292676,"byte_end":16292683,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292684,"byte_end":16292706,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292707,"byte_end":16292714,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292715,"byte_end":16292718,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292719,"byte_end":16292769,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292770,"byte_end":16292773,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292774,"byte_end":16292785,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292786,"byte_end":16292819,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292820,"byte_end":16292853,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292854,"byte_end":16292887,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292888,"byte_end":16292895,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292896,"byte_end":16292899,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292900,"byte_end":16292969,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16292970,"byte_end":16293007,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293008,"byte_end":16293047,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293048,"byte_end":16293093,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293094,"byte_end":16293141,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293142,"byte_end":16293172,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293173,"byte_end":16293206,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293773,"byte_end":16293780,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293455,"byte_end":16293510,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293511,"byte_end":16293514,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293515,"byte_end":16293590,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293591,"byte_end":16293671,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16293672,"byte_end":16293731,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294451,"byte_end":16294476,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294366,"byte_end":16294439,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294828,"byte_end":16294848,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294497,"byte_end":16294571,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294572,"byte_end":16294575,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294576,"byte_end":16294655,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294656,"byte_end":16294699,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294700,"byte_end":16294703,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294704,"byte_end":16294757,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294758,"byte_end":16294761,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16294762,"byte_end":16294792,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295192,"byte_end":16295195,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295101,"byte_end":16295180,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295422,"byte_end":16295429,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295319,"byte_end":16295394,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295399,"byte_end":16295410,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295651,"byte_end":16295667,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295479,"byte_end":16295520,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295525,"byte_end":16295528,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295533,"byte_end":16295606,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295611,"byte_end":16295639,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16296088,"byte_end":16296108,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295732,"byte_end":16295766,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295771,"byte_end":16295774,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295779,"byte_end":16295849,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295854,"byte_end":16295929,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295934,"byte_end":16296006,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16296011,"byte_end":16296076,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16300897,"byte_end":16300912,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16300821,"byte_end":16300882,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301837,"byte_end":16301840,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301291,"byte_end":16301366,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301371,"byte_end":16301382,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301387,"byte_end":16301390,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301395,"byte_end":16301409,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301414,"byte_end":16301417,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301422,"byte_end":16301429,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301434,"byte_end":16301465,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301470,"byte_end":16301518,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301523,"byte_end":16301526,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301531,"byte_end":16301572,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301577,"byte_end":16301612,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301617,"byte_end":16301648,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301653,"byte_end":16301688,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301693,"byte_end":16301722,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301727,"byte_end":16301747,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301752,"byte_end":16301774,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301779,"byte_end":16301786,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301791,"byte_end":16301813,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301818,"byte_end":16301825,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303025,"byte_end":16303035,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302504,"byte_end":16302553,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302558,"byte_end":16302561,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302566,"byte_end":16302598,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302603,"byte_end":16302606,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302611,"byte_end":16302679,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302684,"byte_end":16302687,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302692,"byte_end":16302706,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302711,"byte_end":16302714,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302719,"byte_end":16302726,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302731,"byte_end":16302762,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302767,"byte_end":16302815,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302820,"byte_end":16302823,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302828,"byte_end":16302869,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302874,"byte_end":16302909,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302914,"byte_end":16302935,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302940,"byte_end":16302962,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302967,"byte_end":16302974,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16302979,"byte_end":16303001,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303006,"byte_end":16303013,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303667,"byte_end":16303680,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303134,"byte_end":16303186,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303191,"byte_end":16303194,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303199,"byte_end":16303237,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303242,"byte_end":16303245,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303250,"byte_end":16303318,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303323,"byte_end":16303326,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303331,"byte_end":16303345,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303350,"byte_end":16303353,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303358,"byte_end":16303365,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303370,"byte_end":16303401,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303406,"byte_end":16303454,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303459,"byte_end":16303462,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303467,"byte_end":16303508,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303513,"byte_end":16303548,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303553,"byte_end":16303577,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303582,"byte_end":16303604,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303609,"byte_end":16303616,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303621,"byte_end":16303643,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303648,"byte_end":16303655,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304313,"byte_end":16304326,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303780,"byte_end":16303832,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303837,"byte_end":16303840,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303845,"byte_end":16303883,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303888,"byte_end":16303891,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303896,"byte_end":16303964,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303969,"byte_end":16303972,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303977,"byte_end":16303991,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16303996,"byte_end":16303999,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304004,"byte_end":16304011,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304016,"byte_end":16304047,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304052,"byte_end":16304100,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304105,"byte_end":16304108,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304113,"byte_end":16304154,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304159,"byte_end":16304194,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304199,"byte_end":16304223,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304228,"byte_end":16304250,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304255,"byte_end":16304262,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304267,"byte_end":16304289,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304294,"byte_end":16304301,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305423,"byte_end":16305439,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304495,"byte_end":16304533,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304538,"byte_end":16304541,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304546,"byte_end":16304618,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304623,"byte_end":16304648,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304653,"byte_end":16304656,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304661,"byte_end":16304733,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304738,"byte_end":16304807,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304812,"byte_end":16304885,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304890,"byte_end":16304902,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304907,"byte_end":16304910,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304915,"byte_end":16304990,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16304995,"byte_end":16305056,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305061,"byte_end":16305064,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305069,"byte_end":16305083,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305088,"byte_end":16305091,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305096,"byte_end":16305103,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305108,"byte_end":16305139,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305144,"byte_end":16305192,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305197,"byte_end":16305200,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305205,"byte_end":16305246,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305251,"byte_end":16305286,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305291,"byte_end":16305333,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305338,"byte_end":16305360,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305365,"byte_end":16305372,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305377,"byte_end":16305399,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305404,"byte_end":16305411,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306538,"byte_end":16306555,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305536,"byte_end":16305606,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305611,"byte_end":16305614,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305619,"byte_end":16305692,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305697,"byte_end":16305717,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305722,"byte_end":16305725,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305730,"byte_end":16305744,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305749,"byte_end":16305752,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305757,"byte_end":16305764,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305769,"byte_end":16305800,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305805,"byte_end":16305853,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305858,"byte_end":16305861,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305866,"byte_end":16305907,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305912,"byte_end":16305947,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305952,"byte_end":16305987,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16305992,"byte_end":16306014,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306019,"byte_end":16306026,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306031,"byte_end":16306053,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306058,"byte_end":16306065,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306070,"byte_end":16306073,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306078,"byte_end":16306152,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306157,"byte_end":16306198,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306203,"byte_end":16306206,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306211,"byte_end":16306230,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306235,"byte_end":16306266,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306271,"byte_end":16306321,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306326,"byte_end":16306367,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306372,"byte_end":16306407,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306412,"byte_end":16306448,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306453,"byte_end":16306475,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306480,"byte_end":16306487,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306492,"byte_end":16306514,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306519,"byte_end":16306526,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307240,"byte_end":16307259,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306676,"byte_end":16306739,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306744,"byte_end":16306747,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306752,"byte_end":16306803,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306808,"byte_end":16306811,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306816,"byte_end":16306884,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306889,"byte_end":16306892,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306897,"byte_end":16306911,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306916,"byte_end":16306919,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306924,"byte_end":16306931,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306936,"byte_end":16306967,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16306972,"byte_end":16307020,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307025,"byte_end":16307028,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307033,"byte_end":16307074,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307079,"byte_end":16307114,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307119,"byte_end":16307150,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307155,"byte_end":16307177,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307182,"byte_end":16307189,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307194,"byte_end":16307216,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307221,"byte_end":16307228,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307918,"byte_end":16307937,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307428,"byte_end":16307494,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307499,"byte_end":16307502,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307507,"byte_end":16307562,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307567,"byte_end":16307570,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307575,"byte_end":16307589,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307594,"byte_end":16307597,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307602,"byte_end":16307609,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307614,"byte_end":16307645,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307650,"byte_end":16307698,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307703,"byte_end":16307706,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307711,"byte_end":16307752,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307757,"byte_end":16307792,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307797,"byte_end":16307828,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307833,"byte_end":16307855,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307860,"byte_end":16307867,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307872,"byte_end":16307894,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16307899,"byte_end":16307906,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308491,"byte_end":16308508,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308040,"byte_end":16308113,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308118,"byte_end":16308136,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308141,"byte_end":16308144,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308149,"byte_end":16308163,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308168,"byte_end":16308171,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308176,"byte_end":16308183,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308188,"byte_end":16308219,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308224,"byte_end":16308272,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308277,"byte_end":16308280,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308285,"byte_end":16308326,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308331,"byte_end":16308366,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308371,"byte_end":16308401,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308406,"byte_end":16308428,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308433,"byte_end":16308440,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308445,"byte_end":16308467,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308472,"byte_end":16308479,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309158,"byte_end":16309166,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308609,"byte_end":16308672,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308677,"byte_end":16308680,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308685,"byte_end":16308746,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308751,"byte_end":16308754,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308759,"byte_end":16308813,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308818,"byte_end":16308821,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308826,"byte_end":16308840,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308845,"byte_end":16308848,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308853,"byte_end":16308860,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308865,"byte_end":16308896,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308901,"byte_end":16308949,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308954,"byte_end":16308957,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16308962,"byte_end":16309003,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309008,"byte_end":16309043,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309048,"byte_end":16309068,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309073,"byte_end":16309095,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309100,"byte_end":16309107,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309112,"byte_end":16309134,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309139,"byte_end":16309146,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309690,"byte_end":16309699,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309264,"byte_end":16309327,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309332,"byte_end":16309335,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309340,"byte_end":16309354,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309359,"byte_end":16309362,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309367,"byte_end":16309374,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309379,"byte_end":16309427,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309432,"byte_end":16309453,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309458,"byte_end":16309493,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309498,"byte_end":16309529,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309534,"byte_end":16309569,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309574,"byte_end":16309603,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309608,"byte_end":16309628,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309633,"byte_end":16309654,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309659,"byte_end":16309666,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309671,"byte_end":16309678,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310359,"byte_end":16310367,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309851,"byte_end":16309904,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309909,"byte_end":16309912,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309917,"byte_end":16309931,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309936,"byte_end":16309939,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309944,"byte_end":16309951,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309956,"byte_end":16309987,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16309992,"byte_end":16310040,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310045,"byte_end":16310048,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310053,"byte_end":16310094,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310099,"byte_end":16310134,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310139,"byte_end":16310170,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310175,"byte_end":16310210,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310215,"byte_end":16310244,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310249,"byte_end":16310269,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310274,"byte_end":16310296,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310301,"byte_end":16310308,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310313,"byte_end":16310335,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310340,"byte_end":16310347,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310944,"byte_end":16310953,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310531,"byte_end":16310585,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310590,"byte_end":16310593,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310598,"byte_end":16310612,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310617,"byte_end":16310620,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310625,"byte_end":16310632,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310637,"byte_end":16310669,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310674,"byte_end":16310724,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310729,"byte_end":16310773,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310778,"byte_end":16310813,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310818,"byte_end":16310853,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310858,"byte_end":16310881,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310886,"byte_end":16310893,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310898,"byte_end":16310920,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16310925,"byte_end":16310932,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311566,"byte_end":16311576,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311114,"byte_end":16311163,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311168,"byte_end":16311171,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311176,"byte_end":16311190,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311195,"byte_end":16311198,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311203,"byte_end":16311210,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311215,"byte_end":16311260,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311265,"byte_end":16311315,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311320,"byte_end":16311376,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311381,"byte_end":16311394,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311399,"byte_end":16311434,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311439,"byte_end":16311474,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311479,"byte_end":16311503,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311508,"byte_end":16311515,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311520,"byte_end":16311542,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16311547,"byte_end":16311554,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16312955,"byte_end":16312965,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16312712,"byte_end":16312799,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16312800,"byte_end":16312803,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16312804,"byte_end":16312842,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16312843,"byte_end":16312881,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314065,"byte_end":16314068,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313646,"byte_end":16313706,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313711,"byte_end":16313714,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313719,"byte_end":16313729,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313734,"byte_end":16313737,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313742,"byte_end":16313814,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313819,"byte_end":16313892,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313897,"byte_end":16313964,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313969,"byte_end":16313972,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313977,"byte_end":16314053,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315199,"byte_end":16315218,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314226,"byte_end":16314286,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314291,"byte_end":16314294,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314299,"byte_end":16314362,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314367,"byte_end":16314445,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314450,"byte_end":16314517,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314522,"byte_end":16314594,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314599,"byte_end":16314669,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314674,"byte_end":16314697,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314702,"byte_end":16314705,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314710,"byte_end":16314720,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314725,"byte_end":16314728,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314733,"byte_end":16314808,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314813,"byte_end":16314886,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314891,"byte_end":16314967,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16314972,"byte_end":16315045,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315050,"byte_end":16315120,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315125,"byte_end":16315128,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315133,"byte_end":16315187,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315784,"byte_end":16315794,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315346,"byte_end":16315396,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315401,"byte_end":16315404,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315409,"byte_end":16315416,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315421,"byte_end":16315440,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315445,"byte_end":16315483,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315488,"byte_end":16315491,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315496,"byte_end":16315530,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315535,"byte_end":16315582,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315587,"byte_end":16315594,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315599,"byte_end":16315606,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315611,"byte_end":16315649,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315654,"byte_end":16315657,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315662,"byte_end":16315715,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315720,"byte_end":16315760,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16315765,"byte_end":16315772,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320120,"byte_end":16320141,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320074,"byte_end":16320115,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320177,"byte_end":16320179,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320147,"byte_end":16320172,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320052,"byte_end":16320067,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16319969,"byte_end":16320025,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322101,"byte_end":16322118,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16320915,"byte_end":16321056,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321057,"byte_end":16321060,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321061,"byte_end":16321099,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321100,"byte_end":16321138,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321139,"byte_end":16321142,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321143,"byte_end":16321156,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321157,"byte_end":16321224,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321225,"byte_end":16321228,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321229,"byte_end":16321262,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321263,"byte_end":16321292,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321293,"byte_end":16321296,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321297,"byte_end":16321304,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321305,"byte_end":16321361,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321362,"byte_end":16321396,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321397,"byte_end":16321400,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321401,"byte_end":16321406,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321407,"byte_end":16321454,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321455,"byte_end":16321508,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321509,"byte_end":16321586,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321587,"byte_end":16321622,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321623,"byte_end":16321644,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321645,"byte_end":16321695,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321696,"byte_end":16321759,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321760,"byte_end":16321823,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321824,"byte_end":16321887,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321888,"byte_end":16321944,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321945,"byte_end":16321994,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16321995,"byte_end":16322007,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322008,"byte_end":16322015,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322016,"byte_end":16322023,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322024,"byte_end":16322027,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323453,"byte_end":16323456,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323011,"byte_end":16323079,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323084,"byte_end":16323087,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323092,"byte_end":16323102,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323107,"byte_end":16323110,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323115,"byte_end":16323194,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323199,"byte_end":16323273,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323278,"byte_end":16323345,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323350,"byte_end":16323353,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323358,"byte_end":16323441,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324767,"byte_end":16324786,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323736,"byte_end":16323804,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323809,"byte_end":16323812,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323817,"byte_end":16323887,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323892,"byte_end":16323978,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16323983,"byte_end":16324053,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324058,"byte_end":16324135,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324140,"byte_end":16324210,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324215,"byte_end":16324238,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324243,"byte_end":16324246,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324251,"byte_end":16324261,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324266,"byte_end":16324269,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324274,"byte_end":16324356,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324361,"byte_end":16324434,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324439,"byte_end":16324516,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324521,"byte_end":16324594,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324599,"byte_end":16324674,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324679,"byte_end":16324682,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16324687,"byte_end":16324755,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325574,"byte_end":16325584,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325043,"byte_end":16325094,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325099,"byte_end":16325102,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325107,"byte_end":16325114,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325119,"byte_end":16325138,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325143,"byte_end":16325188,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325193,"byte_end":16325196,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325201,"byte_end":16325273,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325278,"byte_end":16325325,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325330,"byte_end":16325337,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325342,"byte_end":16325349,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325354,"byte_end":16325399,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325404,"byte_end":16325407,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325412,"byte_end":16325505,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325510,"byte_end":16325550,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325555,"byte_end":16325562,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329680,"byte_end":16329702,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329633,"byte_end":16329675,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329738,"byte_end":16329740,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329708,"byte_end":16329733,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329604,"byte_end":16329626,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329520,"byte_end":16329577,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13971692,"byte_end":13971701,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233063,"byte_end":16233073,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233224,"byte_end":16233234,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233561,"byte_end":16233571,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233795,"byte_end":16233805,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244042,"byte_end":16244051,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244283,"byte_end":16244293,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244444,"byte_end":16244453,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244808,"byte_end":16244818,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245064,"byte_end":16245072,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245169,"byte_end":16245177,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245288,"byte_end":16245296,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245396,"byte_end":16245404,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245514,"byte_end":16245524,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16253811,"byte_end":16253821,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256656,"byte_end":16256662,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260518,"byte_end":16260524,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266915,"byte_end":16266921,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16267237,"byte_end":16267243,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16267958,"byte_end":16267964,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16269004,"byte_end":16269015,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16269942,"byte_end":16269952,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270881,"byte_end":16270891,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273721,"byte_end":16273731,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16274044,"byte_end":16274054,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16274780,"byte_end":16274790,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16275769,"byte_end":16275780,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276136,"byte_end":16276147,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278992,"byte_end":16279003,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16279767,"byte_end":16279778,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16280019,"byte_end":16280030,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295074,"byte_end":16295094,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16298428,"byte_end":16298448,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16299334,"byte_end":16299354,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16300695,"byte_end":16300715,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301277,"byte_end":16301284,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312059,"byte_end":16312066,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312192,"byte_end":16312217,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312375,"byte_end":16312400,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312535,"byte_end":16312560,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313629,"byte_end":16313639,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16316181,"byte_end":16316191,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16319567,"byte_end":16319577,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16319900,"byte_end":16319910,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320217,"byte_end":16320232,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320514,"byte_end":16320529,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320646,"byte_end":16320661,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322987,"byte_end":16323004,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325653,"byte_end":16325670,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16328962,"byte_end":16328979,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329343,"byte_end":16329360,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329778,"byte_end":16329800,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16330129,"byte_end":16330151,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16330282,"byte_end":16330304,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16231475,"byte_end":16231491,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233063,"byte_end":16233073,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233224,"byte_end":16233234,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233561,"byte_end":16233571,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16233795,"byte_end":16233805,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244042,"byte_end":16244051,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244283,"byte_end":16244293,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244444,"byte_end":16244453,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16244808,"byte_end":16244818,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245064,"byte_end":16245072,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245169,"byte_end":16245177,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245288,"byte_end":16245296,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245396,"byte_end":16245404,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16245514,"byte_end":16245524,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":39,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16253811,"byte_end":16253821,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16256656,"byte_end":16256662,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16260518,"byte_end":16260524,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16266915,"byte_end":16266921,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":39,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16267237,"byte_end":16267243,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16267958,"byte_end":16267964,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16269004,"byte_end":16269015,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16269942,"byte_end":16269952,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16270881,"byte_end":16270891,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16273721,"byte_end":16273731,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":39,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16274044,"byte_end":16274054,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16274780,"byte_end":16274790,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16275769,"byte_end":16275780,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16276136,"byte_end":16276147,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16278992,"byte_end":16279003,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16279767,"byte_end":16279778,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":39,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16280019,"byte_end":16280030,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16295074,"byte_end":16295094,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16298428,"byte_end":16298448,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16299334,"byte_end":16299354,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16300695,"byte_end":16300715,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16301277,"byte_end":16301284,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312059,"byte_end":16312066,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312192,"byte_end":16312217,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312375,"byte_end":16312400,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16312535,"byte_end":16312560,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16313629,"byte_end":16313639,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16316181,"byte_end":16316191,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16319567,"byte_end":16319577,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16319900,"byte_end":16319910,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320217,"byte_end":16320232,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320514,"byte_end":16320529,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16320646,"byte_end":16320661,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16322987,"byte_end":16323004,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16325653,"byte_end":16325670,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16328962,"byte_end":16328979,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329343,"byte_end":16329360,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16329778,"byte_end":16329800,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16330129,"byte_end":16330151,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16330282,"byte_end":16330304,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":39,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":230}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":188}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":269}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":309}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":39,"index":96}}]}