{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16","program":"/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","filetime","--edition=2018","/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=94d65a6635a71d1f","-C","extra-filename=-94d65a6635a71d1f","--out-dir","/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","-L","dependency=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","--extern","cfg_if=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libcfg_if-dcce77079dd8fe1e.rmeta","--extern","libc=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/liblibc-0c9090286a281d3a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfiletime-94d65a6635a71d1f.rmeta"},"prelude":{"crate_id":{"name":"filetime","disambiguator":[5399848773131651742,0]},"crate_root":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src","external_crates":[{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/unix/mod.rs","num":21,"id":{"name":"libc","disambiguator":[11407690004646896535,0]}}],"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":0,"byte_end":25420,"line_start":1,"line_end":708,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":0,"byte_end":25420,"line_start":1,"line_end":708,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":53},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":25},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"decl_id":null,"docs":" Timestamps for files in Rust","sig":null,"attributes":[{"value":"/ Timestamps for files in Rust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides platform-agnostic inspection of the various timestamps","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":37,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ present in the standard `fs::Metadata` structure.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":118,"byte_end":171,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":172,"byte_end":175,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Installation","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":176,"byte_end":194,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":195,"byte_end":198,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":199,"byte_end":233,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":234,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":238,"byte_end":249,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":250,"byte_end":268,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ filetime = \"0.2\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":269,"byte_end":289,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":290,"byte_end":297,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":298,"byte_end":301,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":302,"byte_end":313,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":314,"byte_end":317,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":318,"byte_end":331,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ use std::fs;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":332,"byte_end":348,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ use filetime::FileTime;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":349,"byte_end":376,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":377,"byte_end":380,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let metadata = fs::metadata(\"foo.txt\").unwrap();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":381,"byte_end":433,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":434,"byte_end":437,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mtime = FileTime::from_last_modification_time(&metadata);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":438,"byte_end":503,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ println!(\"{}\", mtime);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":504,"byte_end":530,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":531,"byte_end":534,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let atime = FileTime::from_last_access_time(&metadata);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":535,"byte_end":594,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ assert!(mtime < atime);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":595,"byte_end":622,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":623,"byte_end":626,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Inspect values that can be interpreted across platforms","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":627,"byte_end":689,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ println!(\"{}\", mtime.unix_seconds());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":690,"byte_end":731,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ println!(\"{}\", mtime.nanoseconds());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":732,"byte_end":772,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":773,"byte_end":776,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Print the platform-specific value of seconds","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":777,"byte_end":828,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ println!(\"{}\", mtime.seconds());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":829,"byte_end":865,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":866,"byte_end":873,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1674,"byte_end":1682,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"FileTime","qualname":"::FileTime","value":"FileTime {  }","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A helper structure to represent a timestamp for a file.","sig":null,"attributes":[{"value":"/ A helper structure to represent a timestamp for a file.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1332,"byte_end":1391,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1392,"byte_end":1395,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The actual value contined within is platform-specific and does not have the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1396,"byte_end":1475,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ same meaning across platforms, but comparisons and stringification can be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1476,"byte_end":1553,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ significant among the same platform.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1554,"byte_end":1594,"line_start":63,"line_end":63,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1885,"byte_end":1889,"line_start":74,"line_end":74,"column_start":18,"column_end":22},"name":"zero","qualname":"<FileTime>::zero","value":"pub const fn zero() -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp representing a 0 time.","sig":null,"attributes":[{"value":"/ Creates a new timestamp representing a 0 time.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1742,"byte_end":1792,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1797,"byte_end":1800,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Useful for creating the base of a cmp::max chain of times.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1805,"byte_end":1867,"line_start":73,"line_end":73,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2671,"byte_end":2674,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"now","qualname":"<FileTime>::now","value":"pub fn now() -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp representing the current system time.","sig":null,"attributes":[{"value":"/ Creates a new timestamp representing the current system time.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2251,"byte_end":2316,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2321,"byte_end":2324,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2329,"byte_end":2336,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use filetime::FileTime;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2341,"byte_end":2370,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2375,"byte_end":2380,"line_start":96,"line_end":96,"column_start":5,"column_end":10}},{"value":"/ # fn example() -> std::io::Result<()> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2385,"byte_end":2428,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ #     let path = \"\";","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2433,"byte_end":2457,"line_start":98,"line_end":98,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2462,"byte_end":2467,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/ filetime::set_file_mtime(path, FileTime::now())?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2472,"byte_end":2525,"line_start":100,"line_end":100,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2530,"byte_end":2535,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2540,"byte_end":2556,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2561,"byte_end":2568,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2573,"byte_end":2580,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2585,"byte_end":2588,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `FileTime::from_system_time(SystemTime::now())`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2593,"byte_end":2659,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3373,"byte_end":3387,"line_start":121,"line_end":121,"column_start":18,"column_end":32},"name":"from_unix_time","qualname":"<FileTime>::from_unix_time","value":"pub const fn from_unix_time(i64, u32) -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `FileTime` with a number of seconds and\n nanoseconds relative to the Unix epoch, 1970-01-01T00:00:00Z.","sig":null,"attributes":[{"value":"/ Creates a new instance of `FileTime` with a number of seconds and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2756,"byte_end":2825,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ nanoseconds relative to the Unix epoch, 1970-01-01T00:00:00Z.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2830,"byte_end":2895,"line_start":112,"line_end":112,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2900,"byte_end":2903,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Negative seconds represent times before the Unix epoch, and positive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2908,"byte_end":2980,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ values represent times after it. Nanos always count forwards in time.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":2985,"byte_end":3058,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3063,"byte_end":3066,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note that this is typically the relative point that Unix time stamps are","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3071,"byte_end":3147,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ from, but on Windows the native time stamp is relative to January 1,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3152,"byte_end":3224,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ 1601 so the return value of `seconds` from the returned `FileTime`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3229,"byte_end":3299,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ instance may not be the same as that passed in.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3304,"byte_end":3355,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3872,"byte_end":3899,"line_start":134,"line_end":134,"column_start":12,"column_end":39},"name":"from_last_modification_time","qualname":"<FileTime>::from_last_modification_time","value":"pub fn from_last_modification_time(&fs::Metadata) -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp from the last modification time listed in the\n specified metadata.","sig":null,"attributes":[{"value":"/ Creates a new timestamp from the last modification time listed in the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3601,"byte_end":3674,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ specified metadata.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3679,"byte_end":3702,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3707,"byte_end":3710,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `mtime` field of `stat` on Unix","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3715,"byte_end":3788,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ platforms and the `ftLastWriteTime` field on Windows platforms.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":3793,"byte_end":3860,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4288,"byte_end":4309,"line_start":143,"line_end":143,"column_start":12,"column_end":33},"name":"from_last_access_time","qualname":"<FileTime>::from_last_access_time","value":"pub fn from_last_access_time(&fs::Metadata) -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp from the last access time listed in the\n specified metadata.","sig":null,"attributes":[{"value":"/ Creates a new timestamp from the last access time listed in the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4022,"byte_end":4089,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/ specified metadata.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4094,"byte_end":4117,"line_start":139,"line_end":139,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4122,"byte_end":4125,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `atime` field of `stat` on Unix","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4130,"byte_end":4203,"line_start":141,"line_end":141,"column_start":5,"column_end":78}},{"value":"/ platforms and the `ftLastAccessTime` field on Windows platforms.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4208,"byte_end":4276,"line_start":142,"line_end":142,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4811,"byte_end":4829,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"from_creation_time","qualname":"<FileTime>::from_creation_time","value":"pub fn from_creation_time(&fs::Metadata) -> Option<FileTime>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp from the creation time listed in the specified\n metadata.","sig":null,"attributes":[{"value":"/ Creates a new timestamp from the creation time listed in the specified","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4426,"byte_end":4500,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ metadata.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4505,"byte_end":4518,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4523,"byte_end":4526,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `birthtime` field of `stat` on","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4531,"byte_end":4603,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ Unix platforms and the `ftCreationTime` field on Windows platforms. Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4608,"byte_end":4684,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ that not all Unix platforms have this field available and may return","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4689,"byte_end":4761,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ `None` in some circumstances.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4766,"byte_end":4799,"line_start":153,"line_end":153,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":5260,"byte_end":5276,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"from_system_time","qualname":"<FileTime>::from_system_time","value":"pub fn from_system_time(SystemTime) -> FileTime","parent":null,"children":[],"decl_id":null,"docs":" Creates a new timestamp from the given SystemTime.","sig":null,"attributes":[{"value":"/ Creates a new timestamp from the given SystemTime.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":4962,"byte_end":5016,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":5021,"byte_end":5024,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Windows counts file times since 1601-01-01T00:00:00Z, and cannot","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":5029,"byte_end":5097,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ represent times before this, but it's possible to create a SystemTime","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":5102,"byte_end":5175,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ that does. This function will error if passed such a SystemTime.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":5180,"byte_end":5248,"line_start":162,"line_end":162,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6464,"byte_end":6471,"line_start":196,"line_end":196,"column_start":18,"column_end":25},"name":"seconds","qualname":"<FileTime>::seconds","value":"pub const fn seconds(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the whole number of seconds represented by this timestamp.","sig":null,"attributes":[{"value":"/ Returns the whole number of seconds represented by this timestamp.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6145,"byte_end":6215,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6220,"byte_end":6223,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Note that this value's meaning is **platform specific**. On Unix","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6228,"byte_end":6296,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/ platform time stamps are typically relative to January 1, 1970, but on","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6301,"byte_end":6375,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ Windows platforms time stamps are relative to January 1, 1601.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6380,"byte_end":6446,"line_start":195,"line_end":195,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6825,"byte_end":6837,"line_start":205,"line_end":205,"column_start":18,"column_end":30},"name":"unix_seconds","qualname":"<FileTime>::unix_seconds","value":"pub const fn unix_seconds(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the whole number of seconds represented by this timestamp,\n relative to the Unix epoch start of January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the whole number of seconds represented by this timestamp,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6520,"byte_end":6590,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ relative to the Unix epoch start of January 1, 1970.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6595,"byte_end":6651,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6656,"byte_end":6659,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this does not return the same value as `seconds` for Windows","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6664,"byte_end":6738,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ platforms as seconds are relative to a different date there.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6743,"byte_end":6807,"line_start":204,"line_end":204,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7184,"byte_end":7195,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<FileTime>::nanoseconds","value":"pub const fn nanoseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the nanosecond precision of this timestamp.","sig":null,"attributes":[{"value":"/ Returns the nanosecond precision of this timestamp.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6932,"byte_end":6987,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":6992,"byte_end":6995,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned value is always less than one billion and represents a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7000,"byte_end":7071,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ portion of a second forward from the seconds returned by the `seconds`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7076,"byte_end":7150,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7155,"byte_end":7166,"line_start":213,"line_end":213,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7757,"byte_end":7771,"line_start":235,"line_end":235,"column_start":8,"column_end":22},"name":"set_file_times","qualname":"::set_file_times","value":"pub fn set_file_times<P>(P, FileTime, FileTime) -> io::Result<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the last access and modification times for a file on the filesystem.","sig":null,"attributes":[{"value":"/ Set the last access and modification times for a file on the filesystem.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7529,"byte_end":7605,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7606,"byte_end":7609,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ This function will set the `atime` and `mtime` metadata fields for a file","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7610,"byte_end":7687,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ on the local filesystem, returning any error encountered.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7688,"byte_end":7749,"line_start":234,"line_end":234,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8258,"byte_end":8279,"line_start":248,"line_end":248,"column_start":8,"column_end":29},"name":"set_file_handle_times","qualname":"::set_file_handle_times","value":"pub fn set_file_handle_times(&fs::File, Option<FileTime>, Option<FileTime>)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the last access and modification times for a file handle.","sig":null,"attributes":[{"value":"/ Set the last access and modification times for a file handle.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7914,"byte_end":7979,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7980,"byte_end":7983,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This function will either or both of  the `atime` and `mtime` metadata","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7984,"byte_end":8058,"line_start":244,"line_end":244,"column_start":1,"column_end":75}},{"value":"/ fields for a file handle , returning any error encountered. If `None` is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8059,"byte_end":8135,"line_start":245,"line_end":245,"column_start":1,"column_end":77}},{"value":"/ specified then the time won't be updated. If `None` is specified for both","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8136,"byte_end":8213,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ options then no action is taken.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8214,"byte_end":8250,"line_start":247,"line_end":247,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8701,"byte_end":8723,"line_start":261,"line_end":261,"column_start":8,"column_end":30},"name":"set_symlink_file_times","qualname":"::set_symlink_file_times","value":"pub fn set_symlink_file_times<P>(P, FileTime, FileTime) -> io::Result<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the last access and modification times for a file on the filesystem.\n This function does not follow symlink.","sig":null,"attributes":[{"value":"/ Set the last access and modification times for a file on the filesystem.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8430,"byte_end":8506,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ This function does not follow symlink.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8507,"byte_end":8549,"line_start":257,"line_end":257,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8550,"byte_end":8553,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This function will set the `atime` and `mtime` metadata fields for a file","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8554,"byte_end":8631,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ on the local filesystem, returning any error encountered.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8632,"byte_end":8693,"line_start":260,"line_end":260,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9328,"byte_end":9342,"line_start":278,"line_end":278,"column_start":8,"column_end":22},"name":"set_file_mtime","qualname":"::set_file_mtime","value":"pub fn set_file_mtime<P>(P, FileTime) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the last modification time for a file on the filesystem.","sig":null,"attributes":[{"value":"/ Set the last modification time for a file on the filesystem.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8874,"byte_end":8938,"line_start":268,"line_end":268,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8939,"byte_end":8942,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This function will set the `mtime` metadata field for a file on the local","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":8943,"byte_end":9020,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"/ filesystem, returning any error encountered.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9021,"byte_end":9069,"line_start":271,"line_end":271,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9070,"byte_end":9073,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ # Platform support","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9074,"byte_end":9096,"line_start":273,"line_end":273,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9097,"byte_end":9100,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Where supported this will attempt to issue just one syscall to update only","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9101,"byte_end":9179,"line_start":275,"line_end":275,"column_start":1,"column_end":79}},{"value":"/ the `mtime`, but where not supported this may issue one syscall to learn the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9180,"byte_end":9260,"line_start":276,"line_end":276,"column_start":1,"column_end":81}},{"value":"/ existing `atime` so only the `mtime` can be configured.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9261,"byte_end":9320,"line_start":277,"line_end":277,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9909,"byte_end":9923,"line_start":295,"line_end":295,"column_start":8,"column_end":22},"name":"set_file_atime","qualname":"::set_file_atime","value":"pub fn set_file_atime<P>(P, FileTime) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the last access time for a file on the filesystem.","sig":null,"attributes":[{"value":"/ Set the last access time for a file on the filesystem.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9461,"byte_end":9519,"line_start":285,"line_end":285,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9520,"byte_end":9523,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ This function will set the `atime` metadata field for a file on the local","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9524,"byte_end":9601,"line_start":287,"line_end":287,"column_start":1,"column_end":78}},{"value":"/ filesystem, returning any error encountered.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9602,"byte_end":9650,"line_start":288,"line_end":288,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9651,"byte_end":9654,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Platform support","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9655,"byte_end":9677,"line_start":290,"line_end":290,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9678,"byte_end":9681,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ Where supported this will attempt to issue just one syscall to update only","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9682,"byte_end":9760,"line_start":292,"line_end":292,"column_start":1,"column_end":79}},{"value":"/ the `atime`, but where not supported this may issue one syscall to learn the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9761,"byte_end":9841,"line_start":293,"line_end":293,"column_start":1,"column_end":81}},{"value":"/ existing `mtime` so only the `atime` can be configured.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":9842,"byte_end":9901,"line_start":294,"line_end":294,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1727,"byte_end":1735,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7262,"byte_end":7270,"line_start":219,"line_end":219,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7424,"byte_end":7432,"line_start":225,"line_end":225,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":1727,"byte_end":1735,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7262,"byte_end":7270,"line_start":219,"line_end":219,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/filetime-0.2.16/src/lib.rs","byte_start":7424,"byte_end":7432,"line_start":225,"line_end":225,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2963}}]}