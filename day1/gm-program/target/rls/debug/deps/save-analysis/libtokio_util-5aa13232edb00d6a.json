{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10","program":"/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=5aa13232edb00d6a","-C","extra-filename=-5aa13232edb00d6a","--out-dir","/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","-L","dependency=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps","--extern","bytes=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libbytes-57de1f6d7c9c6f6c.rmeta","--extern","futures_core=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfutures_core-60458e76f3df90f4.rmeta","--extern","futures_sink=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libfutures_sink-7655938588db75ff.rmeta","--extern","log=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/liblog-4c2b941844e2fcbb.rmeta","--extern","pin_project_lite=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libpin_project_lite-ea3d2cf69622cc1e.rmeta","--extern","tokio=/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio-4e7e42baf18a9f6f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nic/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nic/Documents/solana/solana-blockchain-developer-bootcamp/day1/gm-program/target/rls/debug/deps/libtokio_util-5aa13232edb00d6a.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3283419164145159103,0]},"crate_root":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src","external_crates":[{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":21,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":22,"id":{"name":"futures_sink","disambiguator":[10576276462658899617,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":23,"id":{"name":"tokio","disambiguator":[10054928464665497603,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":24,"id":{"name":"parking_lot","disambiguator":[13429073610692212669,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":25,"id":{"name":"lock_api","disambiguator":[6400943293924493477,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":26,"id":{"name":"scopeguard","disambiguator":[13563622309219480755,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":27,"id":{"name":"parking_lot_core","disambiguator":[15550368681150151641,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":28,"id":{"name":"smallvec","disambiguator":[10087055156891833200,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":29,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":30,"id":{"name":"libc","disambiguator":[11407690004646896535,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":31,"id":{"name":"mio","disambiguator":[12216327775942977704,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","num":32,"id":{"name":"log","disambiguator":[14764303238413466947,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":33,"id":{"name":"bytes","disambiguator":[11709949483292364592,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":34,"id":{"name":"once_cell","disambiguator":[18281702906408608498,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[9005281142719050523,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":36,"id":{"name":"memchr","disambiguator":[16956519403747381332,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":37,"id":{"name":"socket2","disambiguator":[9157724399368862976,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[17727572680058643201,0]}},{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[17686152838710020509,0]}}],"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227278,"byte_end":16227288,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227327,"byte_end":16227334,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227373,"byte_end":16227380,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227542,"byte_end":16227548,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227550,"byte_end":16227561,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1352},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227609,"byte_end":16227619,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227668,"byte_end":16227679,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227741,"byte_end":16227761,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227763,"byte_end":16227788,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227837,"byte_end":16227847,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227849,"byte_end":16227864,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227929,"byte_end":16227946,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227948,"byte_end":16227970,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1249},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7053,"byte_end":7063,"line_start":7,"line_end":7,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7110,"byte_end":7123,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7166,"byte_end":7183,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":425},{"krate":0,"index":14},{"krate":0,"index":307},{"krate":0,"index":376}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":425},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217006,"byte_end":16217059,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217060,"byte_end":16217063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217064,"byte_end":16217139,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217140,"byte_end":16217205,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217206,"byte_end":16217209,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217210,"byte_end":16217290,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217291,"byte_end":16217366,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217367,"byte_end":16217415,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217416,"byte_end":16217419,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217420,"byte_end":16217443,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217444,"byte_end":16217447,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217448,"byte_end":16217527,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217528,"byte_end":16217607,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217608,"byte_end":16217679,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217680,"byte_end":16217750,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217751,"byte_end":16217829,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217830,"byte_end":16217906,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217907,"byte_end":16217940,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217941,"byte_end":16217944,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16217945,"byte_end":16218025,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218026,"byte_end":16218106,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218107,"byte_end":16218157,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218158,"byte_end":16218161,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218162,"byte_end":16218213,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218214,"byte_end":16218263,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218264,"byte_end":16218315,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218316,"byte_end":16218319,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218320,"byte_end":16218385,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218386,"byte_end":16218389,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218390,"byte_end":16218467,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218468,"byte_end":16218509,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218510,"byte_end":16218513,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218514,"byte_end":16218594,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218595,"byte_end":16218674,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218675,"byte_end":16218753,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218754,"byte_end":16218833,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218834,"byte_end":16218848,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218849,"byte_end":16218852,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218853,"byte_end":16218932,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16218933,"byte_end":16219012,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219013,"byte_end":16219030,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219031,"byte_end":16219034,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219035,"byte_end":16219112,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219113,"byte_end":16219192,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219193,"byte_end":16219270,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219271,"byte_end":16219341,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219342,"byte_end":16219391,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219392,"byte_end":16219395,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219396,"byte_end":16219409,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219410,"byte_end":16219442,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219443,"byte_end":16219510,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219511,"byte_end":16219625,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219626,"byte_end":16219663,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219664,"byte_end":16219725,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219726,"byte_end":16219775,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219776,"byte_end":16219779,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219780,"byte_end":16219821,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219822,"byte_end":16219832,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219833,"byte_end":16219917,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219918,"byte_end":16219974,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219975,"byte_end":16219978,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16219979,"byte_end":16220000,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220001,"byte_end":16220068,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220069,"byte_end":16220097,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220098,"byte_end":16220111,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220112,"byte_end":16220130,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220131,"byte_end":16220140,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220141,"byte_end":16220144,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220145,"byte_end":16220204,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220205,"byte_end":16220229,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220230,"byte_end":16220239,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220240,"byte_end":16220245,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220246,"byte_end":16220254,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220255,"byte_end":16220262,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220263,"byte_end":16220337,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220338,"byte_end":16220341,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220342,"byte_end":16220364,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220365,"byte_end":16220368,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220369,"byte_end":16220446,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220447,"byte_end":16220523,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220524,"byte_end":16220603,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220604,"byte_end":16220658,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220659,"byte_end":16220662,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220663,"byte_end":16220707,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220708,"byte_end":16220715,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220716,"byte_end":16220751,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220752,"byte_end":16220783,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220784,"byte_end":16220787,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220788,"byte_end":16220817,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220818,"byte_end":16220821,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220822,"byte_end":16220861,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220862,"byte_end":16220865,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220866,"byte_end":16220904,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220905,"byte_end":16220932,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220933,"byte_end":16220969,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220970,"byte_end":16220973,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220974,"byte_end":16220992,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16220993,"byte_end":16221015,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221016,"byte_end":16221046,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221047,"byte_end":16221101,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221102,"byte_end":16221132,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221133,"byte_end":16221190,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221191,"byte_end":16221223,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221224,"byte_end":16221237,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221238,"byte_end":16221241,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221242,"byte_end":16221276,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221277,"byte_end":16221321,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221322,"byte_end":16221374,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221375,"byte_end":16221442,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221443,"byte_end":16221446,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221447,"byte_end":16221521,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221522,"byte_end":16221588,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221589,"byte_end":16221618,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221619,"byte_end":16221666,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221667,"byte_end":16221719,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221720,"byte_end":16221791,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221792,"byte_end":16221811,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221812,"byte_end":16221825,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221826,"byte_end":16221829,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221830,"byte_end":16221869,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221870,"byte_end":16221925,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221926,"byte_end":16221944,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16221945,"byte_end":16222021,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222022,"byte_end":16222088,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222089,"byte_end":16222141,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222142,"byte_end":16222145,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222146,"byte_end":16222226,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222227,"byte_end":16222252,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222253,"byte_end":16222285,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222286,"byte_end":16222299,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222300,"byte_end":16222303,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222304,"byte_end":16222376,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222377,"byte_end":16222403,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222404,"byte_end":16222455,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222456,"byte_end":16222492,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222493,"byte_end":16222496,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222497,"byte_end":16222575,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222576,"byte_end":16222619,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222620,"byte_end":16222667,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222668,"byte_end":16222704,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222705,"byte_end":16222749,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222750,"byte_end":16222806,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222807,"byte_end":16222855,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222856,"byte_end":16222878,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222879,"byte_end":16222897,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222898,"byte_end":16222911,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222912,"byte_end":16222921,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222922,"byte_end":16222927,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222928,"byte_end":16222935,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222936,"byte_end":16222939,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222940,"byte_end":16222963,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222964,"byte_end":16222967,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16222968,"byte_end":16223046,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223047,"byte_end":16223120,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223121,"byte_end":16223197,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223198,"byte_end":16223278,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223279,"byte_end":16223295,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223296,"byte_end":16223299,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223300,"byte_end":16223380,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223381,"byte_end":16223460,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223461,"byte_end":16223541,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223542,"byte_end":16223614,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223615,"byte_end":16223618,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223619,"byte_end":16223696,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223697,"byte_end":16223775,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223776,"byte_end":16223849,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223850,"byte_end":16223916,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223917,"byte_end":16223920,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223921,"byte_end":16223934,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223935,"byte_end":16223968,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16223969,"byte_end":16224003,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224004,"byte_end":16224041,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224042,"byte_end":16224109,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224110,"byte_end":16224145,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224146,"byte_end":16224207,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224208,"byte_end":16224254,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224255,"byte_end":16224316,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224317,"byte_end":16224320,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224321,"byte_end":16224349,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224350,"byte_end":16224353,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224354,"byte_end":16224395,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224396,"byte_end":16224406,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224407,"byte_end":16224431,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224432,"byte_end":16224506,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224507,"byte_end":16224549,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224550,"byte_end":16224564,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224565,"byte_end":16224622,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224623,"byte_end":16224672,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224673,"byte_end":16224687,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224688,"byte_end":16224725,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224726,"byte_end":16224777,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224778,"byte_end":16224824,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224825,"byte_end":16224855,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224856,"byte_end":16224870,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224871,"byte_end":16224880,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224881,"byte_end":16224886,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224887,"byte_end":16224894,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224895,"byte_end":16224902,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224903,"byte_end":16224978,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16224979,"byte_end":16225052,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225053,"byte_end":16225095,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225096,"byte_end":16225099,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225100,"byte_end":16225122,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225123,"byte_end":16225126,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225127,"byte_end":16225204,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225205,"byte_end":16225281,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225282,"byte_end":16225358,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225359,"byte_end":16225382,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225383,"byte_end":16225386,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225387,"byte_end":16225432,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225433,"byte_end":16225440,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225441,"byte_end":16225476,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225477,"byte_end":16225501,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225502,"byte_end":16225505,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225506,"byte_end":16225535,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225536,"byte_end":16225539,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225540,"byte_end":16225579,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225580,"byte_end":16225583,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225584,"byte_end":16225630,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225631,"byte_end":16225667,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225668,"byte_end":16225671,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225672,"byte_end":16225763,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225764,"byte_end":16225838,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225839,"byte_end":16225861,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225862,"byte_end":16225895,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225896,"byte_end":16225943,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225944,"byte_end":16225996,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16225997,"byte_end":16226072,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226073,"byte_end":16226092,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226093,"byte_end":16226106,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226107,"byte_end":16226110,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226111,"byte_end":16226163,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226164,"byte_end":16226241,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226242,"byte_end":16226306,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226307,"byte_end":16226310,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226311,"byte_end":16226354,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226355,"byte_end":16226395,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226396,"byte_end":16226399,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226400,"byte_end":16226457,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226458,"byte_end":16226504,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226505,"byte_end":16226556,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226557,"byte_end":16226575,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226576,"byte_end":16226585,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226586,"byte_end":16226591,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226592,"byte_end":16226599,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226600,"byte_end":16226603,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226604,"byte_end":16226643,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226644,"byte_end":16226685,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226686,"byte_end":16226722,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226723,"byte_end":16226755,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226756,"byte_end":16226852,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226853,"byte_end":16226904,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226905,"byte_end":16226958,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226959,"byte_end":16227002,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227003,"byte_end":16227047,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227048,"byte_end":16227096,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227097,"byte_end":16227145,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227146,"byte_end":16227192,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227193,"byte_end":16227232,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229256,"byte_end":16229266,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228099,"byte_end":16228184,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228185,"byte_end":16228188,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228189,"byte_end":16228227,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228228,"byte_end":16228266,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228267,"byte_end":16228270,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228271,"byte_end":16228284,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228285,"byte_end":16228288,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228289,"byte_end":16228370,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228371,"byte_end":16228374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228375,"byte_end":16228414,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228415,"byte_end":16228448,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228449,"byte_end":16228478,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228479,"byte_end":16228482,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228483,"byte_end":16228490,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228491,"byte_end":16228509,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228510,"byte_end":16228540,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228541,"byte_end":16228565,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228566,"byte_end":16228573,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228574,"byte_end":16228603,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228604,"byte_end":16228656,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228657,"byte_end":16228660,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228661,"byte_end":16228679,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228680,"byte_end":16228697,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228698,"byte_end":16228778,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228779,"byte_end":16228813,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228814,"byte_end":16228867,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228868,"byte_end":16228879,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228880,"byte_end":16228887,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228888,"byte_end":16228893,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228894,"byte_end":16228941,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228942,"byte_end":16228995,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16228996,"byte_end":16229054,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229055,"byte_end":16229134,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229135,"byte_end":16229147,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229148,"byte_end":16229155,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229156,"byte_end":16229163,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229164,"byte_end":16229167,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229368,"byte_end":16229371,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229295,"byte_end":16229356,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231372,"byte_end":16231379,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230086,"byte_end":16230121,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230122,"byte_end":16230125,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230126,"byte_end":16230195,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230196,"byte_end":16230275,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230276,"byte_end":16230348,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230349,"byte_end":16230373,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230374,"byte_end":16230377,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230378,"byte_end":16230446,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230447,"byte_end":16230524,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230525,"byte_end":16230586,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230587,"byte_end":16230590,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230591,"byte_end":16230652,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230653,"byte_end":16230715,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230716,"byte_end":16230719,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230720,"byte_end":16230783,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230784,"byte_end":16230847,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230848,"byte_end":16230927,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16230928,"byte_end":16231002,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231003,"byte_end":16231022,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231023,"byte_end":16231026,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231027,"byte_end":16231095,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231096,"byte_end":16231158,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231159,"byte_end":16231234,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231235,"byte_end":16231275,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231276,"byte_end":16231279,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231280,"byte_end":16231316,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231317,"byte_end":16231361,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":476},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231427,"byte_end":16231431,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231386,"byte_end":16231417,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":477},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232197,"byte_end":16232202,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231438,"byte_end":16231490,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231495,"byte_end":16231498,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231503,"byte_end":16231572,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231577,"byte_end":16231647,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231652,"byte_end":16231698,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231703,"byte_end":16231706,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231711,"byte_end":16231787,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231792,"byte_end":16231867,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231872,"byte_end":16231947,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231952,"byte_end":16231992,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16231997,"byte_end":16232000,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232005,"byte_end":16232079,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232084,"byte_end":16232130,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232135,"byte_end":16232138,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232143,"byte_end":16232187,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235138,"byte_end":16235144,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232226,"byte_end":16232291,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232296,"byte_end":16232299,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232304,"byte_end":16232378,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232383,"byte_end":16232455,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232460,"byte_end":16232533,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232538,"byte_end":16232581,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232586,"byte_end":16232589,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232594,"byte_end":16232667,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232672,"byte_end":16232735,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232740,"byte_end":16232815,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232820,"byte_end":16232895,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232900,"byte_end":16232923,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232928,"byte_end":16232931,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16232936,"byte_end":16233008,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233013,"byte_end":16233087,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233092,"byte_end":16233162,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233167,"byte_end":16233170,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233175,"byte_end":16233243,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233248,"byte_end":16233319,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233324,"byte_end":16233404,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233409,"byte_end":16233421,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233426,"byte_end":16233429,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233434,"byte_end":16233504,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233509,"byte_end":16233584,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233589,"byte_end":16233626,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233631,"byte_end":16233634,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233639,"byte_end":16233675,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233680,"byte_end":16233724,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233729,"byte_end":16233732,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233737,"byte_end":16233760,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233765,"byte_end":16233768,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233773,"byte_end":16233847,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233852,"byte_end":16233926,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233931,"byte_end":16233984,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233989,"byte_end":16233992,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16233997,"byte_end":16234068,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234073,"byte_end":16234143,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234148,"byte_end":16234164,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234169,"byte_end":16234172,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234177,"byte_end":16234190,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234195,"byte_end":16234213,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234218,"byte_end":16234223,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234228,"byte_end":16234254,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234259,"byte_end":16234296,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234301,"byte_end":16234306,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234311,"byte_end":16234332,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234337,"byte_end":16234342,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234347,"byte_end":16234377,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234382,"byte_end":16234396,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234401,"byte_end":16234432,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234437,"byte_end":16234470,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234475,"byte_end":16234478,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234483,"byte_end":16234576,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234581,"byte_end":16234599,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234604,"byte_end":16234607,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234612,"byte_end":16234684,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234689,"byte_end":16234749,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234754,"byte_end":16234806,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234811,"byte_end":16234873,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234878,"byte_end":16234945,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234950,"byte_end":16234953,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234958,"byte_end":16234986,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16234991,"byte_end":16235000,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235005,"byte_end":16235010,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235015,"byte_end":16235022,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235027,"byte_end":16235030,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235035,"byte_end":16235104,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235109,"byte_end":16235130,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236310,"byte_end":16236320,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235225,"byte_end":16235297,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235302,"byte_end":16235351,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235356,"byte_end":16235359,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235364,"byte_end":16235432,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235437,"byte_end":16235504,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235509,"byte_end":16235577,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235582,"byte_end":16235658,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235663,"byte_end":16235729,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235734,"byte_end":16235737,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235742,"byte_end":16235810,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235815,"byte_end":16235890,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235895,"byte_end":16235970,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16235975,"byte_end":16236047,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236052,"byte_end":16236094,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236099,"byte_end":16236102,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236107,"byte_end":16236182,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236187,"byte_end":16236265,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236270,"byte_end":16236302,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237928,"byte_end":16237934,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236738,"byte_end":16236818,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236823,"byte_end":16236899,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236904,"byte_end":16236907,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236912,"byte_end":16236987,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16236992,"byte_end":16237062,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237067,"byte_end":16237138,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237143,"byte_end":16237215,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237220,"byte_end":16237278,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237283,"byte_end":16237286,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237291,"byte_end":16237360,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237365,"byte_end":16237440,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237445,"byte_end":16237521,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237526,"byte_end":16237548,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237553,"byte_end":16237556,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237561,"byte_end":16237634,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237639,"byte_end":16237712,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237717,"byte_end":16237793,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237798,"byte_end":16237801,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237806,"byte_end":16237842,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237847,"byte_end":16237879,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16237884,"byte_end":16237920,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238268,"byte_end":16238275,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238113,"byte_end":16238185,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238186,"byte_end":16238206,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238207,"byte_end":16238210,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238211,"byte_end":16238257,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238540,"byte_end":16238545,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238288,"byte_end":16238320,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238325,"byte_end":16238328,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238333,"byte_end":16238410,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238415,"byte_end":16238471,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238476,"byte_end":16238479,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238484,"byte_end":16238530,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238896,"byte_end":16238902,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238569,"byte_end":16238614,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238619,"byte_end":16238622,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238627,"byte_end":16238701,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238706,"byte_end":16238786,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238791,"byte_end":16238829,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238834,"byte_end":16238837,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16238842,"byte_end":16238888,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252539,"byte_end":16252545,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254318,"byte_end":16254321,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252687,"byte_end":16252767,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252772,"byte_end":16252853,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252858,"byte_end":16252861,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252866,"byte_end":16252941,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252946,"byte_end":16253016,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253021,"byte_end":16253090,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253095,"byte_end":16253167,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253172,"byte_end":16253230,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253235,"byte_end":16253238,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253243,"byte_end":16253314,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253319,"byte_end":16253396,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253401,"byte_end":16253477,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253482,"byte_end":16253504,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253509,"byte_end":16253512,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253517,"byte_end":16253590,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253595,"byte_end":16253668,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253673,"byte_end":16253749,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253754,"byte_end":16253757,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253762,"byte_end":16253838,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253843,"byte_end":16253919,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16253924,"byte_end":16253999,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254004,"byte_end":16254039,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254044,"byte_end":16254047,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254052,"byte_end":16254088,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254093,"byte_end":16254125,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254130,"byte_end":16254167,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254172,"byte_end":16254210,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254215,"byte_end":16254306,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255929,"byte_end":16255942,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254534,"byte_end":16254614,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254619,"byte_end":16254700,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254705,"byte_end":16254754,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254759,"byte_end":16254762,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254767,"byte_end":16254842,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254847,"byte_end":16254917,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254922,"byte_end":16254991,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16254996,"byte_end":16255068,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255073,"byte_end":16255131,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255136,"byte_end":16255139,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255144,"byte_end":16255215,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255220,"byte_end":16255297,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255302,"byte_end":16255378,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255383,"byte_end":16255405,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255410,"byte_end":16255413,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255418,"byte_end":16255491,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255496,"byte_end":16255569,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255574,"byte_end":16255650,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255655,"byte_end":16255658,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255663,"byte_end":16255699,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255704,"byte_end":16255736,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255741,"byte_end":16255778,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255783,"byte_end":16255821,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16255826,"byte_end":16255917,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258089,"byte_end":16258099,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256512,"byte_end":16256592,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256597,"byte_end":16256678,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256683,"byte_end":16256686,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256691,"byte_end":16256766,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256771,"byte_end":16256841,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256846,"byte_end":16256917,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256922,"byte_end":16256994,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256999,"byte_end":16257057,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257062,"byte_end":16257065,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257070,"byte_end":16257141,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257146,"byte_end":16257223,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257228,"byte_end":16257304,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257309,"byte_end":16257331,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257336,"byte_end":16257339,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257344,"byte_end":16257423,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257428,"byte_end":16257505,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257510,"byte_end":16257513,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257518,"byte_end":16257591,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257596,"byte_end":16257669,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257674,"byte_end":16257750,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257755,"byte_end":16257758,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257763,"byte_end":16257799,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257804,"byte_end":16257836,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257841,"byte_end":16257879,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257884,"byte_end":16257922,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257927,"byte_end":16257981,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16257986,"byte_end":16258077,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258734,"byte_end":16258741,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258451,"byte_end":16258514,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258519,"byte_end":16258532,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258537,"byte_end":16258540,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258545,"byte_end":16258620,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258625,"byte_end":16258695,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258700,"byte_end":16258722,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259085,"byte_end":16259092,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258794,"byte_end":16258865,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258870,"byte_end":16258883,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258888,"byte_end":16258891,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258896,"byte_end":16258971,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16258976,"byte_end":16259046,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259051,"byte_end":16259073,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259455,"byte_end":16259466,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259157,"byte_end":16259235,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259240,"byte_end":16259253,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259258,"byte_end":16259261,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259266,"byte_end":16259341,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259346,"byte_end":16259416,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259421,"byte_end":16259443,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259813,"byte_end":16259818,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259562,"byte_end":16259620,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259625,"byte_end":16259638,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259643,"byte_end":16259646,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259651,"byte_end":16259725,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259730,"byte_end":16259801,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260130,"byte_end":16260139,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259871,"byte_end":16259937,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259942,"byte_end":16259955,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259960,"byte_end":16259963,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16259968,"byte_end":16260042,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260047,"byte_end":16260118,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260259,"byte_end":16260270,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260204,"byte_end":16260247,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260405,"byte_end":16260420,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260342,"byte_end":16260393,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260560,"byte_end":16260572,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260504,"byte_end":16260548,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260709,"byte_end":16260725,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260645,"byte_end":16260697,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261075,"byte_end":16261085,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260810,"byte_end":16260873,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260878,"byte_end":16260881,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260886,"byte_end":16260961,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16260966,"byte_end":16261036,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261041,"byte_end":16261063,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261457,"byte_end":16261467,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261135,"byte_end":16261209,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261214,"byte_end":16261255,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261260,"byte_end":16261263,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261268,"byte_end":16261343,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261348,"byte_end":16261418,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261423,"byte_end":16261445,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263441,"byte_end":16263452,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263126,"byte_end":16263197,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263198,"byte_end":16263270,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263271,"byte_end":16263331,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263332,"byte_end":16263335,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263336,"byte_end":16263372,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263390,"byte_end":16263429,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1144},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263538,"byte_end":16263540,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263465,"byte_end":16263529,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1145},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263572,"byte_end":16263577,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263550,"byte_end":16263563,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1146},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263642,"byte_end":16263650,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263587,"byte_end":16263633,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1147},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263737,"byte_end":16263746,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263667,"byte_end":16263728,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263979,"byte_end":16263982,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263927,"byte_end":16263967,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16264711,"byte_end":16264721,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1355}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16264972,"byte_end":16264975,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16264904,"byte_end":16264960,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265323,"byte_end":16265336,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265207,"byte_end":16265289,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265294,"byte_end":16265311,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266090,"byte_end":16266097,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265803,"byte_end":16265866,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265871,"byte_end":16265888,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265893,"byte_end":16265896,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265901,"byte_end":16265976,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265981,"byte_end":16266051,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266056,"byte_end":16266078,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266445,"byte_end":16266452,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266150,"byte_end":16266221,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266226,"byte_end":16266243,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266248,"byte_end":16266251,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266256,"byte_end":16266331,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266336,"byte_end":16266406,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266411,"byte_end":16266433,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266819,"byte_end":16266830,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266517,"byte_end":16266595,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266600,"byte_end":16266617,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266622,"byte_end":16266625,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266630,"byte_end":16266705,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266710,"byte_end":16266780,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266785,"byte_end":16266807,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267195,"byte_end":16267205,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266926,"byte_end":16266993,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16266998,"byte_end":16267001,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267006,"byte_end":16267081,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267086,"byte_end":16267156,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267161,"byte_end":16267183,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267317,"byte_end":16267324,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267255,"byte_end":16267305,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267447,"byte_end":16267458,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267377,"byte_end":16267435,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267578,"byte_end":16267589,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267523,"byte_end":16267566,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267719,"byte_end":16267734,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267656,"byte_end":16267707,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16269835,"byte_end":16269846,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1314}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270053,"byte_end":16270056,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16269984,"byte_end":16270041,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270614,"byte_end":16270621,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270326,"byte_end":16270389,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270394,"byte_end":16270412,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270417,"byte_end":16270420,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270425,"byte_end":16270500,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270505,"byte_end":16270575,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270580,"byte_end":16270602,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270970,"byte_end":16270977,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270674,"byte_end":16270745,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270750,"byte_end":16270768,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270773,"byte_end":16270776,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270781,"byte_end":16270856,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270861,"byte_end":16270931,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270936,"byte_end":16270958,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271345,"byte_end":16271356,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271042,"byte_end":16271120,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271125,"byte_end":16271143,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271148,"byte_end":16271151,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271156,"byte_end":16271231,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271236,"byte_end":16271306,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271311,"byte_end":16271333,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271722,"byte_end":16271732,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271452,"byte_end":16271520,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271525,"byte_end":16271528,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271533,"byte_end":16271608,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271613,"byte_end":16271683,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271688,"byte_end":16271710,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271844,"byte_end":16271851,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271782,"byte_end":16271832,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271974,"byte_end":16271985,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16271904,"byte_end":16271962,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272106,"byte_end":16272118,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272050,"byte_end":16272094,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272249,"byte_end":16272265,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272185,"byte_end":16272237,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":868},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":1153},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":922},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":924},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16273792,"byte_end":16273844,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16273845,"byte_end":16273848,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16273849,"byte_end":16273919,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16273920,"byte_end":16273978,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16273979,"byte_end":16274051,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274052,"byte_end":16274122,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274123,"byte_end":16274190,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274191,"byte_end":16274194,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274195,"byte_end":16274216,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274217,"byte_end":16274220,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274221,"byte_end":16274296,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274297,"byte_end":16274368,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274369,"byte_end":16274440,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274441,"byte_end":16274511,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274512,"byte_end":16274552,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274553,"byte_end":16274556,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274557,"byte_end":16274564,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274565,"byte_end":16274608,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274609,"byte_end":16274667,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274668,"byte_end":16274671,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274672,"byte_end":16274727,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274728,"byte_end":16274770,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274771,"byte_end":16274776,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274777,"byte_end":16274829,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274830,"byte_end":16274835,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274836,"byte_end":16274858,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274859,"byte_end":16274866,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274867,"byte_end":16274870,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274871,"byte_end":16274943,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16274944,"byte_end":16275015,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275016,"byte_end":16275035,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275036,"byte_end":16275039,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275040,"byte_end":16275051,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275052,"byte_end":16275101,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275102,"byte_end":16275151,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275152,"byte_end":16275201,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275202,"byte_end":16275209,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275210,"byte_end":16275213,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275214,"byte_end":16275252,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275253,"byte_end":16275256,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275257,"byte_end":16275264,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275265,"byte_end":16275308,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275309,"byte_end":16275367,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275368,"byte_end":16275371,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275372,"byte_end":16275397,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275398,"byte_end":16275419,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275420,"byte_end":16275423,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275424,"byte_end":16275500,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275501,"byte_end":16275510,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275511,"byte_end":16275553,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275554,"byte_end":16275559,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275560,"byte_end":16275633,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275634,"byte_end":16275681,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275682,"byte_end":16275685,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275686,"byte_end":16275723,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275724,"byte_end":16275738,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275739,"byte_end":16275744,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275745,"byte_end":16275752,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275753,"byte_end":16275756,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275757,"byte_end":16275799,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275800,"byte_end":16275803,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275804,"byte_end":16275815,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275816,"byte_end":16275855,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275856,"byte_end":16275895,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275896,"byte_end":16275935,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275936,"byte_end":16275943,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275944,"byte_end":16275947,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275948,"byte_end":16275962,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275963,"byte_end":16275966,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16275967,"byte_end":16276042,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276043,"byte_end":16276116,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276117,"byte_end":16276183,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276184,"byte_end":16276253,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276254,"byte_end":16276319,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276320,"byte_end":16276323,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276324,"byte_end":16276340,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276341,"byte_end":16276344,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276345,"byte_end":16276421,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276422,"byte_end":16276463,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276464,"byte_end":16276467,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276468,"byte_end":16276475,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276476,"byte_end":16276507,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276508,"byte_end":16276558,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276559,"byte_end":16276600,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276601,"byte_end":16276636,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276637,"byte_end":16276685,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276686,"byte_end":16276717,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276718,"byte_end":16276766,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276767,"byte_end":16276816,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276817,"byte_end":16276839,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276840,"byte_end":16276847,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276848,"byte_end":16276870,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276871,"byte_end":16276878,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276879,"byte_end":16276882,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276883,"byte_end":16276931,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276932,"byte_end":16276935,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276936,"byte_end":16276947,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16276948,"byte_end":16277000,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277001,"byte_end":16277066,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277067,"byte_end":16277132,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277133,"byte_end":16277198,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277199,"byte_end":16277206,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277207,"byte_end":16277210,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277211,"byte_end":16277287,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277288,"byte_end":16277362,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277363,"byte_end":16277435,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277436,"byte_end":16277512,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277513,"byte_end":16277555,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277556,"byte_end":16277559,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277560,"byte_end":16277576,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277577,"byte_end":16277580,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277581,"byte_end":16277656,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277657,"byte_end":16277698,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277699,"byte_end":16277702,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277703,"byte_end":16277710,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277711,"byte_end":16277742,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277743,"byte_end":16277793,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277794,"byte_end":16277835,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277836,"byte_end":16277871,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277872,"byte_end":16277920,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277921,"byte_end":16277952,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16277953,"byte_end":16278001,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278002,"byte_end":16278061,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278062,"byte_end":16278084,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278085,"byte_end":16278092,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278093,"byte_end":16278115,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278116,"byte_end":16278123,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278124,"byte_end":16278127,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278128,"byte_end":16278176,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278177,"byte_end":16278180,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278181,"byte_end":16278192,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278193,"byte_end":16278242,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278243,"byte_end":16278297,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278298,"byte_end":16278352,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278353,"byte_end":16278407,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278408,"byte_end":16278415,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278416,"byte_end":16278419,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278420,"byte_end":16278493,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278494,"byte_end":16278561,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278562,"byte_end":16278565,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278566,"byte_end":16278582,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278583,"byte_end":16278586,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278587,"byte_end":16278663,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278664,"byte_end":16278736,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278737,"byte_end":16278776,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278777,"byte_end":16278780,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278781,"byte_end":16278788,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278789,"byte_end":16278820,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278821,"byte_end":16278871,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278872,"byte_end":16278913,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278914,"byte_end":16278949,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278950,"byte_end":16278998,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16278999,"byte_end":16279030,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279031,"byte_end":16279078,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279079,"byte_end":16279099,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279100,"byte_end":16279122,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279123,"byte_end":16279130,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279131,"byte_end":16279153,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279154,"byte_end":16279161,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279162,"byte_end":16279165,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279166,"byte_end":16279214,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279215,"byte_end":16279218,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279219,"byte_end":16279230,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279231,"byte_end":16279283,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279284,"byte_end":16279349,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279350,"byte_end":16279415,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279416,"byte_end":16279481,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279482,"byte_end":16279489,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279490,"byte_end":16279493,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279494,"byte_end":16279566,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279567,"byte_end":16279642,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279643,"byte_end":16279715,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279716,"byte_end":16279792,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279793,"byte_end":16279866,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279867,"byte_end":16279870,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279871,"byte_end":16279887,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279888,"byte_end":16279891,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279892,"byte_end":16279966,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16279967,"byte_end":16280034,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280035,"byte_end":16280038,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280039,"byte_end":16280046,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280047,"byte_end":16280078,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280079,"byte_end":16280129,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280130,"byte_end":16280171,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280172,"byte_end":16280207,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280208,"byte_end":16280256,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280257,"byte_end":16280288,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280289,"byte_end":16280337,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280338,"byte_end":16280358,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280359,"byte_end":16280381,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280382,"byte_end":16280389,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280390,"byte_end":16280412,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280413,"byte_end":16280420,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280421,"byte_end":16280424,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280425,"byte_end":16280473,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280474,"byte_end":16280477,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280478,"byte_end":16280489,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280490,"byte_end":16280516,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280517,"byte_end":16280562,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280563,"byte_end":16280608,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280609,"byte_end":16280654,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280655,"byte_end":16280658,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280659,"byte_end":16280687,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280688,"byte_end":16280733,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280734,"byte_end":16280779,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280780,"byte_end":16280825,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280826,"byte_end":16280833,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280834,"byte_end":16280837,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280838,"byte_end":16280910,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280911,"byte_end":16280987,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16280988,"byte_end":16281058,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281059,"byte_end":16281128,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281129,"byte_end":16281166,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281167,"byte_end":16281170,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281171,"byte_end":16281245,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281246,"byte_end":16281300,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281301,"byte_end":16281304,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281305,"byte_end":16281321,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281322,"byte_end":16281325,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281326,"byte_end":16281399,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281400,"byte_end":16281476,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281477,"byte_end":16281551,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281552,"byte_end":16281565,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281566,"byte_end":16281569,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281570,"byte_end":16281577,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281578,"byte_end":16281609,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281610,"byte_end":16281660,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281661,"byte_end":16281702,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281703,"byte_end":16281738,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281739,"byte_end":16281788,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281789,"byte_end":16281820,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281821,"byte_end":16281869,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281870,"byte_end":16281914,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281915,"byte_end":16281937,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281938,"byte_end":16281945,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281946,"byte_end":16281968,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281969,"byte_end":16281976,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281977,"byte_end":16281980,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16281981,"byte_end":16282029,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282030,"byte_end":16282033,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282034,"byte_end":16282045,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282046,"byte_end":16282072,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282073,"byte_end":16282123,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282124,"byte_end":16282174,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282175,"byte_end":16282225,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282226,"byte_end":16282229,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282230,"byte_end":16282250,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282251,"byte_end":16282281,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282282,"byte_end":16282312,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282313,"byte_end":16282343,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282344,"byte_end":16282351,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282352,"byte_end":16282355,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282356,"byte_end":16282429,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282430,"byte_end":16282505,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282506,"byte_end":16282578,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282579,"byte_end":16282617,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282618,"byte_end":16282621,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282622,"byte_end":16282696,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282697,"byte_end":16282773,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282774,"byte_end":16282847,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282848,"byte_end":16282876,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282877,"byte_end":16282880,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282881,"byte_end":16282897,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282898,"byte_end":16282901,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282902,"byte_end":16282975,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16282976,"byte_end":16283052,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283053,"byte_end":16283127,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283128,"byte_end":16283200,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283201,"byte_end":16283212,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283213,"byte_end":16283216,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283217,"byte_end":16283224,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283225,"byte_end":16283256,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283257,"byte_end":16283307,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283308,"byte_end":16283349,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283350,"byte_end":16283385,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283386,"byte_end":16283435,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283436,"byte_end":16283467,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283468,"byte_end":16283533,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283534,"byte_end":16283554,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283555,"byte_end":16283577,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283578,"byte_end":16283585,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283586,"byte_end":16283593,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283594,"byte_end":16283597,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283598,"byte_end":16283646,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283647,"byte_end":16283650,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283651,"byte_end":16283662,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283663,"byte_end":16283689,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283690,"byte_end":16283740,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283741,"byte_end":16283791,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283792,"byte_end":16283842,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283843,"byte_end":16283846,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283847,"byte_end":16283867,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283868,"byte_end":16283898,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283899,"byte_end":16283929,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283930,"byte_end":16283960,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283961,"byte_end":16283968,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283969,"byte_end":16283972,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283973,"byte_end":16284046,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284047,"byte_end":16284121,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284122,"byte_end":16284196,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284197,"byte_end":16284270,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284271,"byte_end":16284347,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284348,"byte_end":16284381,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284382,"byte_end":16284385,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284386,"byte_end":16284402,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284403,"byte_end":16284406,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284407,"byte_end":16284481,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284482,"byte_end":16284549,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284550,"byte_end":16284553,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284554,"byte_end":16284561,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284562,"byte_end":16284593,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284594,"byte_end":16284644,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284645,"byte_end":16284686,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284687,"byte_end":16284722,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284723,"byte_end":16284771,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284772,"byte_end":16284803,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284804,"byte_end":16284851,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284852,"byte_end":16284898,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284899,"byte_end":16284921,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284922,"byte_end":16284929,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284930,"byte_end":16284952,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284953,"byte_end":16284960,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284961,"byte_end":16284964,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284965,"byte_end":16285013,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285014,"byte_end":16285017,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285018,"byte_end":16285029,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285030,"byte_end":16285086,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285087,"byte_end":16285148,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285149,"byte_end":16285210,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285211,"byte_end":16285272,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285273,"byte_end":16285280,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285281,"byte_end":16285284,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285285,"byte_end":16285359,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285360,"byte_end":16285380,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285381,"byte_end":16285384,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285385,"byte_end":16285399,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285400,"byte_end":16285403,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285404,"byte_end":16285479,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285480,"byte_end":16285552,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285553,"byte_end":16285621,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285622,"byte_end":16285698,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285699,"byte_end":16285740,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285741,"byte_end":16285744,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285745,"byte_end":16285815,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285816,"byte_end":16285834,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285835,"byte_end":16285838,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285839,"byte_end":16285846,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285847,"byte_end":16285879,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285880,"byte_end":16285930,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285931,"byte_end":16285975,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285976,"byte_end":16285989,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285990,"byte_end":16286025,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286026,"byte_end":16286057,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286058,"byte_end":16286081,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286082,"byte_end":16286089,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286090,"byte_end":16286112,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286113,"byte_end":16286120,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286121,"byte_end":16286124,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286125,"byte_end":16286175,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286176,"byte_end":16286179,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286180,"byte_end":16286191,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286192,"byte_end":16286225,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286226,"byte_end":16286259,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286260,"byte_end":16286293,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286294,"byte_end":16286301,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286302,"byte_end":16286305,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286306,"byte_end":16286375,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286376,"byte_end":16286413,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286414,"byte_end":16286453,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286454,"byte_end":16286499,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286500,"byte_end":16286547,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286548,"byte_end":16286578,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286579,"byte_end":16286612,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287174,"byte_end":16287181,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286856,"byte_end":16286911,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286912,"byte_end":16286915,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286916,"byte_end":16286991,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286992,"byte_end":16287072,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287073,"byte_end":16287132,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287852,"byte_end":16287877,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":923}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287767,"byte_end":16287840,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288229,"byte_end":16288249,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287898,"byte_end":16287972,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287973,"byte_end":16287976,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287977,"byte_end":16288056,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288057,"byte_end":16288100,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288101,"byte_end":16288104,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288105,"byte_end":16288158,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288159,"byte_end":16288162,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288163,"byte_end":16288193,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288593,"byte_end":16288596,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288502,"byte_end":16288581,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288823,"byte_end":16288830,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288720,"byte_end":16288795,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288800,"byte_end":16288811,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289052,"byte_end":16289068,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288880,"byte_end":16288921,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288926,"byte_end":16288929,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288934,"byte_end":16289007,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289012,"byte_end":16289040,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289489,"byte_end":16289509,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289133,"byte_end":16289167,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289172,"byte_end":16289175,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289180,"byte_end":16289250,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289255,"byte_end":16289330,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289335,"byte_end":16289407,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289412,"byte_end":16289477,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294765,"byte_end":16294768,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294223,"byte_end":16294298,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294303,"byte_end":16294314,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294319,"byte_end":16294322,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294327,"byte_end":16294341,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294346,"byte_end":16294349,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294354,"byte_end":16294361,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294366,"byte_end":16294397,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294402,"byte_end":16294450,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294455,"byte_end":16294458,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294463,"byte_end":16294504,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294509,"byte_end":16294544,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294549,"byte_end":16294580,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294585,"byte_end":16294616,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294621,"byte_end":16294650,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294655,"byte_end":16294675,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294680,"byte_end":16294702,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294707,"byte_end":16294714,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294719,"byte_end":16294741,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294746,"byte_end":16294753,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295953,"byte_end":16295963,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295432,"byte_end":16295481,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295486,"byte_end":16295489,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295494,"byte_end":16295526,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295531,"byte_end":16295534,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295539,"byte_end":16295607,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295612,"byte_end":16295615,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295620,"byte_end":16295634,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295639,"byte_end":16295642,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295647,"byte_end":16295654,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295659,"byte_end":16295690,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295695,"byte_end":16295743,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295748,"byte_end":16295751,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295756,"byte_end":16295797,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295802,"byte_end":16295837,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295842,"byte_end":16295863,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295868,"byte_end":16295890,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295895,"byte_end":16295902,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295907,"byte_end":16295929,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295934,"byte_end":16295941,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296595,"byte_end":16296608,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296062,"byte_end":16296114,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296119,"byte_end":16296122,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296127,"byte_end":16296165,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296170,"byte_end":16296173,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296178,"byte_end":16296246,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296251,"byte_end":16296254,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296259,"byte_end":16296273,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296278,"byte_end":16296281,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296286,"byte_end":16296293,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296298,"byte_end":16296329,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296334,"byte_end":16296382,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296387,"byte_end":16296390,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296395,"byte_end":16296436,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296441,"byte_end":16296476,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296481,"byte_end":16296505,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296510,"byte_end":16296532,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296537,"byte_end":16296544,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296549,"byte_end":16296571,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296576,"byte_end":16296583,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297241,"byte_end":16297254,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296708,"byte_end":16296760,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296765,"byte_end":16296768,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296773,"byte_end":16296811,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296816,"byte_end":16296819,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296824,"byte_end":16296892,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296897,"byte_end":16296900,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296905,"byte_end":16296919,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296924,"byte_end":16296927,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296932,"byte_end":16296939,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296944,"byte_end":16296975,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296980,"byte_end":16297028,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297033,"byte_end":16297036,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297041,"byte_end":16297082,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297087,"byte_end":16297122,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297127,"byte_end":16297151,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297156,"byte_end":16297178,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297183,"byte_end":16297190,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297195,"byte_end":16297217,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297222,"byte_end":16297229,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298335,"byte_end":16298351,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297423,"byte_end":16297452,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297457,"byte_end":16297460,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297465,"byte_end":16297537,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297542,"byte_end":16297567,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297572,"byte_end":16297575,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297580,"byte_end":16297652,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297657,"byte_end":16297726,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297731,"byte_end":16297804,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297809,"byte_end":16297821,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297826,"byte_end":16297829,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297834,"byte_end":16297909,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297914,"byte_end":16297975,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297980,"byte_end":16297983,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297988,"byte_end":16298002,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298007,"byte_end":16298010,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298015,"byte_end":16298022,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298027,"byte_end":16298058,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298063,"byte_end":16298111,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298116,"byte_end":16298119,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298124,"byte_end":16298165,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298170,"byte_end":16298205,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298210,"byte_end":16298245,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298250,"byte_end":16298272,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298277,"byte_end":16298284,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298289,"byte_end":16298311,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298316,"byte_end":16298323,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299012,"byte_end":16299031,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298448,"byte_end":16298511,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298516,"byte_end":16298519,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298524,"byte_end":16298575,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298580,"byte_end":16298583,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298588,"byte_end":16298656,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298661,"byte_end":16298664,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298669,"byte_end":16298683,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298688,"byte_end":16298691,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298696,"byte_end":16298703,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298708,"byte_end":16298739,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298744,"byte_end":16298792,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298797,"byte_end":16298800,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298805,"byte_end":16298846,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298851,"byte_end":16298886,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298891,"byte_end":16298922,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298927,"byte_end":16298949,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298954,"byte_end":16298961,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298966,"byte_end":16298988,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298993,"byte_end":16299000,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299690,"byte_end":16299709,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299200,"byte_end":16299266,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299271,"byte_end":16299274,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299279,"byte_end":16299334,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299339,"byte_end":16299342,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299347,"byte_end":16299361,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299366,"byte_end":16299369,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299374,"byte_end":16299381,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299386,"byte_end":16299417,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299422,"byte_end":16299470,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299475,"byte_end":16299478,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299483,"byte_end":16299524,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299529,"byte_end":16299564,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299569,"byte_end":16299600,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299605,"byte_end":16299627,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299632,"byte_end":16299639,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299644,"byte_end":16299666,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299671,"byte_end":16299678,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300263,"byte_end":16300280,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299812,"byte_end":16299885,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299890,"byte_end":16299908,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299913,"byte_end":16299916,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299921,"byte_end":16299935,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299940,"byte_end":16299943,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299948,"byte_end":16299955,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299960,"byte_end":16299991,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16299996,"byte_end":16300044,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300049,"byte_end":16300052,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300057,"byte_end":16300098,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300103,"byte_end":16300138,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300143,"byte_end":16300173,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300178,"byte_end":16300200,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300205,"byte_end":16300212,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300217,"byte_end":16300239,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300244,"byte_end":16300251,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300930,"byte_end":16300938,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300381,"byte_end":16300444,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300449,"byte_end":16300452,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300457,"byte_end":16300518,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300523,"byte_end":16300526,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300531,"byte_end":16300585,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300590,"byte_end":16300593,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300598,"byte_end":16300612,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300617,"byte_end":16300620,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300625,"byte_end":16300632,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300637,"byte_end":16300668,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300673,"byte_end":16300721,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300726,"byte_end":16300729,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300734,"byte_end":16300775,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300780,"byte_end":16300815,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300820,"byte_end":16300840,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300845,"byte_end":16300867,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300872,"byte_end":16300879,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300884,"byte_end":16300906,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16300911,"byte_end":16300918,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301458,"byte_end":16301467,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301036,"byte_end":16301099,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301104,"byte_end":16301107,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301112,"byte_end":16301126,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301131,"byte_end":16301134,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301139,"byte_end":16301146,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301151,"byte_end":16301199,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301204,"byte_end":16301225,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301230,"byte_end":16301265,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301270,"byte_end":16301301,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301306,"byte_end":16301337,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301342,"byte_end":16301371,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301376,"byte_end":16301396,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301401,"byte_end":16301422,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301427,"byte_end":16301434,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301439,"byte_end":16301446,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302123,"byte_end":16302131,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301619,"byte_end":16301672,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301677,"byte_end":16301680,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301685,"byte_end":16301699,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301704,"byte_end":16301707,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301712,"byte_end":16301719,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301724,"byte_end":16301755,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301760,"byte_end":16301808,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301813,"byte_end":16301816,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301821,"byte_end":16301862,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301867,"byte_end":16301902,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301907,"byte_end":16301938,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301943,"byte_end":16301974,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301979,"byte_end":16302008,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302013,"byte_end":16302033,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302038,"byte_end":16302060,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302065,"byte_end":16302072,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302077,"byte_end":16302099,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302104,"byte_end":16302111,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302704,"byte_end":16302713,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302295,"byte_end":16302349,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302354,"byte_end":16302357,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302362,"byte_end":16302376,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302381,"byte_end":16302384,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302389,"byte_end":16302396,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302401,"byte_end":16302433,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302438,"byte_end":16302488,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302493,"byte_end":16302537,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302542,"byte_end":16302577,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302582,"byte_end":16302613,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302618,"byte_end":16302641,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302646,"byte_end":16302653,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302658,"byte_end":16302680,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302685,"byte_end":16302692,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303322,"byte_end":16303332,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302874,"byte_end":16302923,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302928,"byte_end":16302931,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302936,"byte_end":16302950,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302955,"byte_end":16302958,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302963,"byte_end":16302970,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302975,"byte_end":16303020,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303025,"byte_end":16303075,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303080,"byte_end":16303136,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303141,"byte_end":16303154,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303159,"byte_end":16303194,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303199,"byte_end":16303230,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303235,"byte_end":16303259,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303264,"byte_end":16303271,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303276,"byte_end":16303298,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303303,"byte_end":16303310,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16304711,"byte_end":16304721,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16304468,"byte_end":16304555,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16304556,"byte_end":16304559,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16304560,"byte_end":16304598,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16304599,"byte_end":16304637,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305821,"byte_end":16305824,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305402,"byte_end":16305462,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305467,"byte_end":16305470,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305475,"byte_end":16305485,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305490,"byte_end":16305493,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305498,"byte_end":16305570,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305575,"byte_end":16305648,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305653,"byte_end":16305720,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305725,"byte_end":16305728,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305733,"byte_end":16305809,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306955,"byte_end":16306974,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305982,"byte_end":16306042,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306047,"byte_end":16306050,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306055,"byte_end":16306118,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306123,"byte_end":16306201,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306206,"byte_end":16306273,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306278,"byte_end":16306350,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306355,"byte_end":16306425,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306430,"byte_end":16306453,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306458,"byte_end":16306461,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306466,"byte_end":16306476,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306481,"byte_end":16306484,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306489,"byte_end":16306564,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306569,"byte_end":16306642,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306647,"byte_end":16306723,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306728,"byte_end":16306801,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306806,"byte_end":16306876,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306881,"byte_end":16306884,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16306889,"byte_end":16306943,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307540,"byte_end":16307550,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307102,"byte_end":16307152,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307157,"byte_end":16307160,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307165,"byte_end":16307172,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307177,"byte_end":16307196,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307201,"byte_end":16307239,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307244,"byte_end":16307247,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307252,"byte_end":16307286,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307291,"byte_end":16307338,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307343,"byte_end":16307350,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307355,"byte_end":16307362,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307367,"byte_end":16307405,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307410,"byte_end":16307413,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307418,"byte_end":16307471,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307476,"byte_end":16307516,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307521,"byte_end":16307528,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1206},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311876,"byte_end":16311897,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311830,"byte_end":16311871,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311933,"byte_end":16311935,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311903,"byte_end":16311928,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311808,"byte_end":16311823,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1208}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311725,"byte_end":16311781,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313857,"byte_end":16313874,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312671,"byte_end":16312812,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312813,"byte_end":16312816,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312817,"byte_end":16312855,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312856,"byte_end":16312894,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312895,"byte_end":16312898,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312899,"byte_end":16312912,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312913,"byte_end":16312980,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312981,"byte_end":16312984,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16312985,"byte_end":16313018,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313019,"byte_end":16313048,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313049,"byte_end":16313052,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313053,"byte_end":16313060,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313061,"byte_end":16313117,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313118,"byte_end":16313152,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313153,"byte_end":16313156,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313157,"byte_end":16313162,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313163,"byte_end":16313210,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313211,"byte_end":16313264,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313265,"byte_end":16313342,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313343,"byte_end":16313378,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313379,"byte_end":16313400,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313401,"byte_end":16313451,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313452,"byte_end":16313515,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313516,"byte_end":16313579,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313580,"byte_end":16313643,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313644,"byte_end":16313700,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313701,"byte_end":16313750,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313751,"byte_end":16313763,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313764,"byte_end":16313771,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313772,"byte_end":16313779,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16313780,"byte_end":16313783,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315209,"byte_end":16315212,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314767,"byte_end":16314835,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314840,"byte_end":16314843,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314848,"byte_end":16314858,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314863,"byte_end":16314866,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314871,"byte_end":16314950,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314955,"byte_end":16315029,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315034,"byte_end":16315101,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315106,"byte_end":16315109,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315114,"byte_end":16315197,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316523,"byte_end":16316542,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315492,"byte_end":16315560,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315565,"byte_end":16315568,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315573,"byte_end":16315643,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315648,"byte_end":16315734,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315739,"byte_end":16315809,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315814,"byte_end":16315891,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315896,"byte_end":16315966,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315971,"byte_end":16315994,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16315999,"byte_end":16316002,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316007,"byte_end":16316017,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316022,"byte_end":16316025,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316030,"byte_end":16316112,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316117,"byte_end":16316190,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316195,"byte_end":16316272,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316277,"byte_end":16316350,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316355,"byte_end":16316430,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316435,"byte_end":16316438,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316443,"byte_end":16316511,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317330,"byte_end":16317340,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316799,"byte_end":16316850,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316855,"byte_end":16316858,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316863,"byte_end":16316870,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316875,"byte_end":16316894,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316899,"byte_end":16316944,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316949,"byte_end":16316952,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16316957,"byte_end":16317029,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317034,"byte_end":16317081,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317086,"byte_end":16317093,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317098,"byte_end":16317105,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317110,"byte_end":16317155,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317160,"byte_end":16317163,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317168,"byte_end":16317261,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317266,"byte_end":16317306,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317311,"byte_end":16317318,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321436,"byte_end":16321458,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321389,"byte_end":16321431,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321494,"byte_end":16321496,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321464,"byte_end":16321489,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321360,"byte_end":16321382,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321276,"byte_end":16321333,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":304}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14330,"byte_end":14339,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1246}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14153,"byte_end":14217,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14218,"byte_end":14301,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14602,"byte_end":14608,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14415,"byte_end":14489,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14494,"byte_end":14564,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14569,"byte_end":14590,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8741,"byte_end":8758,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7519,"byte_end":7596,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7597,"byte_end":7607,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7608,"byte_end":7611,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7612,"byte_end":7677,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7678,"byte_end":7752,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7753,"byte_end":7756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7757,"byte_end":7840,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7841,"byte_end":7844,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7845,"byte_end":7859,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7860,"byte_end":7863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7877,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7878,"byte_end":7900,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7901,"byte_end":7945,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7946,"byte_end":7949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7950,"byte_end":7968,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7969,"byte_end":7990,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8036,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8037,"byte_end":8078,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8079,"byte_end":8082,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8083,"byte_end":8134,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8135,"byte_end":8198,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8199,"byte_end":8220,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8221,"byte_end":8270,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8271,"byte_end":8317,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8318,"byte_end":8339,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8340,"byte_end":8357,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8358,"byte_end":8439,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8440,"byte_end":8462,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8463,"byte_end":8480,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8481,"byte_end":8494,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8495,"byte_end":8506,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8507,"byte_end":8510,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8511,"byte_end":8544,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8545,"byte_end":8620,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8621,"byte_end":8648,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8660,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8661,"byte_end":8664,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8665,"byte_end":8715,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8716,"byte_end":8721,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8722,"byte_end":8729,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1249},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8985,"byte_end":9010,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13967907,"byte_end":13967916,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9994,"byte_end":9997,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9919,"byte_end":9982,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11396,"byte_end":11407,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10129,"byte_end":10200,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10205,"byte_end":10238,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10243,"byte_end":10246,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10251,"byte_end":10322,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10327,"byte_end":10359,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10364,"byte_end":10367,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10372,"byte_end":10386,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10394,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10399,"byte_end":10412,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10417,"byte_end":10439,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10444,"byte_end":10488,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10493,"byte_end":10496,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10501,"byte_end":10519,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10524,"byte_end":10545,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10595,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10600,"byte_end":10646,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10651,"byte_end":10654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10659,"byte_end":10710,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10715,"byte_end":10778,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10783,"byte_end":10804,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10809,"byte_end":10857,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10862,"byte_end":10908,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10913,"byte_end":10934,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10939,"byte_end":10956,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10961,"byte_end":11042,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11047,"byte_end":11069,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11074,"byte_end":11091,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11096,"byte_end":11109,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11114,"byte_end":11125,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11130,"byte_end":11133,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11138,"byte_end":11171,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11176,"byte_end":11251,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11256,"byte_end":11283,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11288,"byte_end":11299,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11304,"byte_end":11307,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11312,"byte_end":11362,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11367,"byte_end":11372,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11377,"byte_end":11384,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12130,"byte_end":12136,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11614,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11619,"byte_end":11639,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11644,"byte_end":11647,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11652,"byte_end":11719,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11724,"byte_end":11727,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11732,"byte_end":11805,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11810,"byte_end":11885,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11890,"byte_end":11964,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11969,"byte_end":12041,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12046,"byte_end":12118,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12268,"byte_end":12280,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12197,"byte_end":12256,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12639,"byte_end":12648,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12354,"byte_end":12428,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12433,"byte_end":12436,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12441,"byte_end":12515,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12520,"byte_end":12551,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12559,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12564,"byte_end":12583,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12588,"byte_end":12591,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12596,"byte_end":12627,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12992,"byte_end":13002,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12829,"byte_end":12870,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12875,"byte_end":12878,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12883,"byte_end":12955,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12960,"byte_end":12980,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29661,"byte_end":29671,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29523,"byte_end":29580,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29581,"byte_end":29584,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29585,"byte_end":29632,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30394,"byte_end":30397,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30352,"byte_end":30382,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31112,"byte_end":31122,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30600,"byte_end":30629,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30634,"byte_end":30637,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30642,"byte_end":30718,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30723,"byte_end":30792,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30797,"byte_end":30815,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30820,"byte_end":30823,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30828,"byte_end":30899,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30904,"byte_end":30977,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30982,"byte_end":31056,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31061,"byte_end":31100,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32643,"byte_end":32657,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31546,"byte_end":31627,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31632,"byte_end":31678,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31683,"byte_end":31686,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31691,"byte_end":31739,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31744,"byte_end":31747,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31752,"byte_end":31836,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31841,"byte_end":31900,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31905,"byte_end":31990,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31995,"byte_end":32014,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32019,"byte_end":32098,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32103,"byte_end":32106,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32111,"byte_end":32186,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32191,"byte_end":32267,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32272,"byte_end":32327,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32332,"byte_end":32406,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32411,"byte_end":32484,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32489,"byte_end":32523,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32528,"byte_end":32531,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32536,"byte_end":32612,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32617,"byte_end":32631,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33291,"byte_end":33299,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33043,"byte_end":33108,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33113,"byte_end":33116,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33121,"byte_end":33194,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33199,"byte_end":33209,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33214,"byte_end":33217,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33222,"byte_end":33279,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33411,"byte_end":33420,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33353,"byte_end":33399,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33761,"byte_end":33772,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33562,"byte_end":33596,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33601,"byte_end":33604,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33609,"byte_end":33682,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33687,"byte_end":33749,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34077,"byte_end":34086,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33877,"byte_end":33912,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33917,"byte_end":33920,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33925,"byte_end":33998,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34003,"byte_end":34065,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34786,"byte_end":34803,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34237,"byte_end":34306,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34311,"byte_end":34314,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34319,"byte_end":34389,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34394,"byte_end":34467,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34472,"byte_end":34518,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34523,"byte_end":34526,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34531,"byte_end":34606,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34611,"byte_end":34685,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34690,"byte_end":34716,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34721,"byte_end":34724,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34729,"byte_end":34774,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34969,"byte_end":34979,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34856,"byte_end":34903,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34908,"byte_end":34911,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34916,"byte_end":34957,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37491,"byte_end":37504,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37360,"byte_end":37433,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37434,"byte_end":37437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37438,"byte_end":37479,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37698,"byte_end":37701,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37653,"byte_end":37686,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37865,"byte_end":37870,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37828,"byte_end":37853,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37976,"byte_end":37987,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37922,"byte_end":37964,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38102,"byte_end":38112,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38057,"byte_end":38090,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38846,"byte_end":38858,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38173,"byte_end":38221,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38226,"byte_end":38229,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38234,"byte_end":38275,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38280,"byte_end":38283,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38288,"byte_end":38350,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38355,"byte_end":38415,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38420,"byte_end":38480,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38485,"byte_end":38488,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38493,"byte_end":38568,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38573,"byte_end":38641,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38646,"byte_end":38722,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38727,"byte_end":38795,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38800,"byte_end":38834,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40286,"byte_end":40303,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40002,"byte_end":40054,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40059,"byte_end":40062,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40067,"byte_end":40143,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40148,"byte_end":40182,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40187,"byte_end":40190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40195,"byte_end":40274,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40763,"byte_end":40774,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40376,"byte_end":40418,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40423,"byte_end":40426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40431,"byte_end":40504,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40509,"byte_end":40549,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40554,"byte_end":40557,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40562,"byte_end":40632,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40637,"byte_end":40671,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40676,"byte_end":40679,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40751,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41917,"byte_end":41934,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41717,"byte_end":41774,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41775,"byte_end":41778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41779,"byte_end":41846,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41847,"byte_end":41905,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42112,"byte_end":42115,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42029,"byte_end":42100,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42696,"byte_end":42699,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42481,"byte_end":42533,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42538,"byte_end":42541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42546,"byte_end":42618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42623,"byte_end":42684,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43142,"byte_end":43149,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42901,"byte_end":42953,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42958,"byte_end":42961,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42966,"byte_end":43039,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43044,"byte_end":43114,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43119,"byte_end":43130,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44989,"byte_end":44996,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44977,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45282,"byte_end":45286,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45227,"byte_end":45270,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":1294},{"krate":0,"index":1303},{"krate":0,"index":1307},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":371}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46399,"byte_end":46434,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48381,"byte_end":48385,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48394,"byte_end":48399,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1294},"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48362,"byte_end":48368,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1300}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46611,"byte_end":46717,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46718,"byte_end":46721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46722,"byte_end":46812,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46813,"byte_end":46816,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46817,"byte_end":46852,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46853,"byte_end":46856,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46857,"byte_end":46870,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46871,"byte_end":46874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46875,"byte_end":46912,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46913,"byte_end":46916,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46917,"byte_end":46936,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46937,"byte_end":46979,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46980,"byte_end":47030,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47031,"byte_end":47082,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47083,"byte_end":47101,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47102,"byte_end":47123,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47124,"byte_end":47166,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47167,"byte_end":47200,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47201,"byte_end":47217,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47218,"byte_end":47312,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47313,"byte_end":47323,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47324,"byte_end":47327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47328,"byte_end":47375,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47376,"byte_end":47381,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47382,"byte_end":47389,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47390,"byte_end":47393,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47594,"byte_end":47597,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47598,"byte_end":47684,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47685,"byte_end":47695,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47696,"byte_end":47699,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47700,"byte_end":47707,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47708,"byte_end":47743,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47744,"byte_end":47786,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47787,"byte_end":47837,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47838,"byte_end":47889,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47890,"byte_end":47893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47894,"byte_end":47912,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47913,"byte_end":47934,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47935,"byte_end":47977,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47978,"byte_end":48025,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48026,"byte_end":48042,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48043,"byte_end":48092,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48093,"byte_end":48103,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48104,"byte_end":48107,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48108,"byte_end":48141,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48142,"byte_end":48182,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48183,"byte_end":48215,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48216,"byte_end":48221,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48222,"byte_end":48229,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48230,"byte_end":48252,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229278,"byte_end":16229288,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229439,"byte_end":16229449,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229776,"byte_end":16229786,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240016,"byte_end":16240025,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240257,"byte_end":16240267,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240418,"byte_end":16240427,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240782,"byte_end":16240792,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241038,"byte_end":16241046,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241143,"byte_end":16241151,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241262,"byte_end":16241270,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241370,"byte_end":16241378,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241488,"byte_end":16241498,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249785,"byte_end":16249795,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252631,"byte_end":16252637,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256493,"byte_end":16256499,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261814,"byte_end":16261820,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262136,"byte_end":16262142,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262857,"byte_end":16262863,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263903,"byte_end":16263914,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16264841,"byte_end":16264851,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265780,"byte_end":16265790,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267887,"byte_end":16267897,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16268210,"byte_end":16268220,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16268946,"byte_end":16268956,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16269935,"byte_end":16269946,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270302,"byte_end":16270313,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272422,"byte_end":16272433,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16273197,"byte_end":16273208,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16273449,"byte_end":16273460,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288475,"byte_end":16288495,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291829,"byte_end":16291849,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292735,"byte_end":16292755,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294096,"byte_end":16294116,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294209,"byte_end":16294216,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303815,"byte_end":16303822,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303948,"byte_end":16303973,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304131,"byte_end":16304156,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304291,"byte_end":16304316,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305385,"byte_end":16305395,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307937,"byte_end":16307947,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311323,"byte_end":16311333,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311656,"byte_end":16311666,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311973,"byte_end":16311988,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16312270,"byte_end":16312285,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16312402,"byte_end":16312417,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314743,"byte_end":16314760,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317409,"byte_end":16317426,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16320718,"byte_end":16320735,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321099,"byte_end":16321116,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321534,"byte_end":16321556,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321885,"byte_end":16321907,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322038,"byte_end":16322060,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":425}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227690,"byte_end":16227706,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":868}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":307}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229278,"byte_end":16229288,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229439,"byte_end":16229449,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16229776,"byte_end":16229786,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240016,"byte_end":16240025,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240257,"byte_end":16240267,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240418,"byte_end":16240427,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16240782,"byte_end":16240792,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241038,"byte_end":16241046,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241143,"byte_end":16241151,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241262,"byte_end":16241270,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241370,"byte_end":16241378,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16241488,"byte_end":16241498,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1434},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249785,"byte_end":16249795,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1434},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16252631,"byte_end":16252637,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16256493,"byte_end":16256499,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261814,"byte_end":16261820,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1393},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262136,"byte_end":16262142,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1393},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262857,"byte_end":16262863,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263903,"byte_end":16263914,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16264841,"byte_end":16264851,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16265780,"byte_end":16265790,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16267887,"byte_end":16267897,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1352},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16268210,"byte_end":16268220,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1352},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16268946,"byte_end":16268956,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1352},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16269935,"byte_end":16269946,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16270302,"byte_end":16270313,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16272422,"byte_end":16272433,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1311},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16273197,"byte_end":16273208,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1311},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16273449,"byte_end":16273460,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288475,"byte_end":16288495,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291829,"byte_end":16291849,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292735,"byte_end":16292755,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294096,"byte_end":16294116,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294209,"byte_end":16294216,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303815,"byte_end":16303822,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303948,"byte_end":16303973,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304131,"byte_end":16304156,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304291,"byte_end":16304316,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16305385,"byte_end":16305395,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16307937,"byte_end":16307947,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311323,"byte_end":16311333,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311656,"byte_end":16311666,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16311973,"byte_end":16311988,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16312270,"byte_end":16312285,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16312402,"byte_end":16312417,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16314743,"byte_end":16314760,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16317409,"byte_end":16317426,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16320718,"byte_end":16320735,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321099,"byte_end":16321116,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321534,"byte_end":16321556,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321885,"byte_end":16321907,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322038,"byte_end":16322060,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1237},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1286},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":215},"to":{"krate":21,"index":96}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1294},"to":{"krate":23,"index":230}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1294},"to":{"krate":23,"index":188}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1294},"to":{"krate":23,"index":269}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1294},"to":{"krate":23,"index":309}},{"span":{"file_name":"/home/nic/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1294},"to":{"krate":21,"index":96}}]}